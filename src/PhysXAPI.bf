using System;

namespace PhysX
{
	[CRepr]
	public struct SimulationEventCallbackInfo
	{
		public typealias CollisionCallback = delegate void(void*, physx_PxContactPairHeader_Pod*, physx_PxContactPairHeader_Pod*, uint32);
		public typealias TriggerCallback = delegate void(void*, physx_PxTriggerPair_Pod*, uint32);
		public typealias ConstraintBreakCallback = delegate void(void*, physx_PxConstraintInfo_Pod*, uint32);
		public typealias WakeSleepCallback = delegate void(void*, physx_PxActor_Pod**, uint32, bool);
		public typealias AdvanceCallback = delegate void(void*, physx_PxRigidBody_Pod*, physx_PxTransform_Pod*, uint32);

		// Callback for collision events.
		public CollisionCallback collisionCallback = null;
		public void* collisionUserData = null;
		// Callback for trigger shape events (an object entered or left a trigger shape).
		public TriggerCallback triggerCallback = null;
		public void* triggerUserData = null;
		// Callback for when a constraint breaks (such as a joint with a force limit)
		public ConstraintBreakCallback constraintBreakCallback = null;
		public void* constraintBreakUserData = null;
		// Callback for when an object falls asleep or is awoken.
		public WakeSleepCallback wakeSleepCallback = null;
		public void* wakeSleepUserData = null;
		// Callback to get the next pose early for objects (if flagged with eENABLE_POSE_INTEGRATION_PREVIEW).
		public AdvanceCallback advanceCallback = null;
		public void* advanceUserData = null;
	}

	typealias PxFilterObjectAttributes = uint32;

	[CRepr]
	public struct FilterShaderCallbackInfo
	{
		public PxFilterObjectAttributes attributes0;
		public PxFilterObjectAttributes attributes1;
		public physx_PxFilterData_Pod filterData0;
		public physx_PxFilterData_Pod filterData1;
		public physx_PxPairFlags_Pod* pairFlags;
		public void* constantBlock;
		public uint32 constantBlockSize;
	}

	public static class PhysXAPI
	{
		public typealias RaycastHitCallback = delegate uint32(physx_PxRigidActor_Pod* actor, physx_PxFilterData_Pod* filterData, physx_PxShape_Pod* shape, uint32 hitFlags, void* userData);
		public typealias AllocCallback = delegate void*(uint64 size, char8* typeName, char8* filename, int line, void* userdata);
		public typealias DeallocCallback = delegate void(void* ptr, void* userdata);
		public typealias SimulationShaderFilter = delegate uint16(FilterShaderCallbackInfo*);

		[LinkName("physx_create_foundation")] public static extern physx_PxFoundation_Pod* create_foundation();
		[LinkName("physx_create_physics")] public static extern physx_PxPhysics_Pod* create_physics(physx_PxFoundation_Pod* foundation);

		[LinkName("create_raycast_filter_callback")] public static extern physx_PxQueryFilterCallback_Pod* create_raycast_filter_callback(physx_PxRigidActor_Pod* actor_to_ignore);

		[LinkName("create_raycast_filter_callback_func")] public static extern physx_PxQueryFilterCallback_Pod* create_raycast_filter_callback_func(RaycastHitCallback callback, void* userData);

		[LinkName("create_alloc_callback")] public static extern physx_PxAllocatorCallback_Pod* create_alloc_callback(AllocCallback alloc_callback, DeallocCallback dealloc_callback, void* userdata);
		[LinkName("get_alloc_callback_user_data")] public static extern void* get_alloc_callback_user_data(physx_PxAllocatorCallback_Pod* allocator);
		[LinkName("get_default_simulation_filter_shader")] public static extern void* get_default_simulation_filter_shader();
		[LinkName("create_simulation_event_callbacks")] public static extern physx_PxSimulationEventCallback_Pod* create_simulation_event_callbacks(SimulationEventCallbackInfo* callbacks);
		[LinkName("get_simulation_event_info")] public static extern SimulationEventCallbackInfo* get_simulation_event_info(physx_PxSimulationEventCallback_Pod* callback);
		[LinkName("destroy_simulation_event_callbacks")] public static extern void destroy_simulation_event_callbacks(physx_PxSimulationEventCallback_Pod* callback);

		[LinkName("enable_custom_filter_shader")] public static extern void enable_custom_filter_shader(physx_PxSceneDesc_Pod* desc, SimulationShaderFilter filter, uint32 call_default_filter_shader_first);


		[LinkName("PxAllocatorCallback_delete")] public static extern void AllocatorCallback_delete(physx_PxAllocatorCallback_Pod* self__pod);
		[LinkName("PxAllocatorCallback_allocate_mut")] public static extern void* AllocatorCallback_allocate_mut(physx_PxAllocatorCallback_Pod* self__pod, uint64 size, char8* typeName, char8* filename, int32 line);
		[LinkName("PxAllocatorCallback_deallocate_mut")] public static extern void AllocatorCallback_deallocate_mut(physx_PxAllocatorCallback_Pod* self__pod, void* ptr);
		[LinkName("PxAssertHandler_delete")] public static extern void AssertHandler_delete(physx_PxAssertHandler_Pod* self__pod);
		[LinkName("phys_PxGetAssertHandler")] public static extern physx_PxAssertHandler_Pod* GetAssertHandler();
		[LinkName("phys_PxSetAssertHandler")] public static extern void SetAssertHandler(physx_PxAssertHandler_Pod* handler_pod);
		[LinkName("phys_PxAbs")] public static extern float Abs(float a);
		[LinkName("phys_PxEquals")] public static extern bool Equals(float a, float b, float eps);
		[LinkName("phys_PxAbs_1")] public static extern double Abs_1(double a);
		[LinkName("phys_PxAbs_2")] public static extern int32 Abs_2(int32 a);
		[LinkName("phys_PxSqrt")] public static extern float Sqrt(float a);
		[LinkName("phys_PxSqrt_1")] public static extern double Sqrt_1(double a);
		[LinkName("phys_PxRecipSqrt")] public static extern float RecipSqrt(float a);
		[LinkName("phys_PxRecipSqrt_1")] public static extern double RecipSqrt_1(double a);
		[LinkName("phys_PxSin")] public static extern float Sin(float a);
		[LinkName("phys_PxSin_1")] public static extern double Sin_1(double a);
		[LinkName("phys_PxCos")] public static extern float Cos(float a);
		[LinkName("phys_PxCos_1")] public static extern double Cos_1(double a);
		[LinkName("phys_PxTan")] public static extern float Tan(float a);
		[LinkName("phys_PxTan_1")] public static extern double Tan_1(double a);
		[LinkName("phys_PxAsin")] public static extern float Asin(float f);
		[LinkName("phys_PxAsin_1")] public static extern double Asin_1(double f);
		[LinkName("phys_PxAcos")] public static extern float Acos(float f);
		[LinkName("phys_PxAcos_1")] public static extern double Acos_1(double f);
		[LinkName("phys_PxAtan")] public static extern float Atan(float a);
		[LinkName("phys_PxAtan_1")] public static extern double Atan_1(double a);
		[LinkName("phys_PxAtan2")] public static extern float Atan2(float x, float y);
		[LinkName("phys_PxAtan2_1")] public static extern double Atan2_1(double x, double y);
		[LinkName("phys_PxIsFinite")] public static extern bool IsFinite(float f);
		[LinkName("phys_PxIsFinite_1")] public static extern bool IsFinite_1(double f);
		[LinkName("phys_PxFloor")] public static extern float Floor(float a);
		[LinkName("phys_PxExp")] public static extern float Exp(float a);
		[LinkName("phys_PxCeil")] public static extern float Ceil(float a);
		[LinkName("phys_PxSign")] public static extern float Sign(float a);
		[LinkName("phys_PxPow")] public static extern float Pow(float x, float y);
		[LinkName("phys_PxLog")] public static extern float Log(float x);
		[LinkName("PxVec3_new")] public static extern physx_PxVec3_Pod Vec3_new();
		[LinkName("PxVec3_new_1")] public static extern physx_PxVec3_Pod Vec3_new_1(uint32 r_pod);
		[LinkName("PxVec3_new_2")] public static extern physx_PxVec3_Pod Vec3_new_2(float a);
		[LinkName("PxVec3_new_3")] public static extern physx_PxVec3_Pod Vec3_new_3(float nx, float ny, float nz);
		[LinkName("PxVec3_isZero")] public static extern bool Vec3_isZero(physx_PxVec3_Pod* self__pod);
		[LinkName("PxVec3_isFinite")] public static extern bool Vec3_isFinite(physx_PxVec3_Pod* self__pod);
		[LinkName("PxVec3_isNormalized")] public static extern bool Vec3_isNormalized(physx_PxVec3_Pod* self__pod);
		[LinkName("PxVec3_magnitudeSquared")] public static extern float Vec3_magnitudeSquared(physx_PxVec3_Pod* self__pod);
		[LinkName("PxVec3_magnitude")] public static extern float Vec3_magnitude(physx_PxVec3_Pod* self__pod);
		[LinkName("PxVec3_dot")] public static extern float Vec3_dot(physx_PxVec3_Pod* self__pod, physx_PxVec3_Pod* v_pod);
		[LinkName("PxVec3_cross")] public static extern physx_PxVec3_Pod Vec3_cross(physx_PxVec3_Pod* self__pod, physx_PxVec3_Pod* v_pod);
		[LinkName("PxVec3_getNormalized")] public static extern physx_PxVec3_Pod Vec3_getNormalized(physx_PxVec3_Pod* self__pod);
		[LinkName("PxVec3_normalize_mut")] public static extern float Vec3_normalize_mut(physx_PxVec3_Pod* self__pod);
		[LinkName("PxVec3_normalizeSafe_mut")] public static extern float Vec3_normalizeSafe_mut(physx_PxVec3_Pod* self__pod);
		[LinkName("PxVec3_normalizeFast_mut")] public static extern float Vec3_normalizeFast_mut(physx_PxVec3_Pod* self__pod);
		[LinkName("PxVec3_multiply")] public static extern physx_PxVec3_Pod Vec3_multiply(physx_PxVec3_Pod* self__pod, physx_PxVec3_Pod* a_pod);
		[LinkName("PxVec3_minimum")] public static extern physx_PxVec3_Pod Vec3_minimum(physx_PxVec3_Pod* self__pod, physx_PxVec3_Pod* v_pod);
		[LinkName("PxVec3_minElement")] public static extern float Vec3_minElement(physx_PxVec3_Pod* self__pod);
		[LinkName("PxVec3_maximum")] public static extern physx_PxVec3_Pod Vec3_maximum(physx_PxVec3_Pod* self__pod, physx_PxVec3_Pod* v_pod);
		[LinkName("PxVec3_maxElement")] public static extern float Vec3_maxElement(physx_PxVec3_Pod* self__pod);
		[LinkName("PxVec3_abs")] public static extern physx_PxVec3_Pod Vec3_abs(physx_PxVec3_Pod* self__pod);
		[LinkName("PxQuat_new")] public static extern physx_PxQuat_Pod Quat_new();
		[LinkName("PxQuat_new_1")] public static extern physx_PxQuat_Pod Quat_new_1(uint32 r_pod);
		[LinkName("PxQuat_new_2")] public static extern physx_PxQuat_Pod Quat_new_2(float r);
		[LinkName("PxQuat_new_3")] public static extern physx_PxQuat_Pod Quat_new_3(float nx, float ny, float nz, float nw);
		[LinkName("PxQuat_new_4")] public static extern physx_PxQuat_Pod Quat_new_4(float angleRadians, physx_PxVec3_Pod* unitAxis_pod);
		[LinkName("PxQuat_new_5")] public static extern physx_PxQuat_Pod Quat_new_5(physx_PxMat33_Pod* m_pod);
		[LinkName("PxQuat_isIdentity")] public static extern bool Quat_isIdentity(physx_PxQuat_Pod* self__pod);
		[LinkName("PxQuat_isFinite")] public static extern bool Quat_isFinite(physx_PxQuat_Pod* self__pod);
		[LinkName("PxQuat_isUnit")] public static extern bool Quat_isUnit(physx_PxQuat_Pod* self__pod);
		[LinkName("PxQuat_isSane")] public static extern bool Quat_isSane(physx_PxQuat_Pod* self__pod);
		[LinkName("PxQuat_toRadiansAndUnitAxis")] public static extern void Quat_toRadiansAndUnitAxis(physx_PxQuat_Pod* self__pod, float* angle_pod, physx_PxVec3_Pod* axis_pod);
		[LinkName("PxQuat_getAngle")] public static extern float Quat_getAngle(physx_PxQuat_Pod* self__pod);
		[LinkName("PxQuat_getAngle_1")] public static extern float Quat_getAngle_1(physx_PxQuat_Pod* self__pod, physx_PxQuat_Pod* q_pod);
		[LinkName("PxQuat_magnitudeSquared")] public static extern float Quat_magnitudeSquared(physx_PxQuat_Pod* self__pod);
		[LinkName("PxQuat_dot")] public static extern float Quat_dot(physx_PxQuat_Pod* self__pod, physx_PxQuat_Pod* v_pod);
		[LinkName("PxQuat_getNormalized")] public static extern physx_PxQuat_Pod Quat_getNormalized(physx_PxQuat_Pod* self__pod);
		[LinkName("PxQuat_magnitude")] public static extern float Quat_magnitude(physx_PxQuat_Pod* self__pod);
		[LinkName("PxQuat_normalize_mut")] public static extern float Quat_normalize_mut(physx_PxQuat_Pod* self__pod);
		[LinkName("PxQuat_getConjugate")] public static extern physx_PxQuat_Pod Quat_getConjugate(physx_PxQuat_Pod* self__pod);
		[LinkName("PxQuat_getImaginaryPart")] public static extern physx_PxVec3_Pod Quat_getImaginaryPart(physx_PxQuat_Pod* self__pod);
		[LinkName("PxQuat_getBasisVector0")] public static extern physx_PxVec3_Pod Quat_getBasisVector0(physx_PxQuat_Pod* self__pod);
		[LinkName("PxQuat_getBasisVector1")] public static extern physx_PxVec3_Pod Quat_getBasisVector1(physx_PxQuat_Pod* self__pod);
		[LinkName("PxQuat_getBasisVector2")] public static extern physx_PxVec3_Pod Quat_getBasisVector2(physx_PxQuat_Pod* self__pod);
		[LinkName("PxQuat_rotate")] public static extern physx_PxVec3_Pod Quat_rotate(physx_PxQuat_Pod* self__pod, physx_PxVec3_Pod* v_pod);
		[LinkName("PxQuat_rotateInv")] public static extern physx_PxVec3_Pod Quat_rotateInv(physx_PxQuat_Pod* self__pod, physx_PxVec3_Pod* v_pod);
		[LinkName("PxPlane_new")] public static extern physx_PxPlane_Pod Plane_new();
		[LinkName("PxPlane_new_1")] public static extern physx_PxPlane_Pod Plane_new_1(float nx, float ny, float nz, float distance);
		[LinkName("PxPlane_new_2")] public static extern physx_PxPlane_Pod Plane_new_2(physx_PxVec3_Pod* normal_pod, float distance);
		[LinkName("PxPlane_new_3")] public static extern physx_PxPlane_Pod Plane_new_3(physx_PxVec3_Pod* point_pod, physx_PxVec3_Pod* normal_pod);
		[LinkName("PxPlane_new_4")] public static extern physx_PxPlane_Pod Plane_new_4(physx_PxVec3_Pod* p0_pod, physx_PxVec3_Pod* p1_pod, physx_PxVec3_Pod* p2_pod);
		[LinkName("PxPlane_distance")] public static extern float Plane_distance(physx_PxPlane_Pod* self__pod, physx_PxVec3_Pod* p_pod);
		[LinkName("PxPlane_contains")] public static extern bool Plane_contains(physx_PxPlane_Pod* self__pod, physx_PxVec3_Pod* p_pod);
		[LinkName("PxPlane_project")] public static extern physx_PxVec3_Pod Plane_project(physx_PxPlane_Pod* self__pod, physx_PxVec3_Pod* p_pod);
		[LinkName("PxPlane_pointInPlane")] public static extern physx_PxVec3_Pod Plane_pointInPlane(physx_PxPlane_Pod* self__pod);
		[LinkName("PxPlane_normalize_mut")] public static extern void Plane_normalize_mut(physx_PxPlane_Pod* self__pod);
		[LinkName("PxTransform_new")] public static extern physx_PxTransform_Pod Transform_new();
		[LinkName("PxTransform_new_1")] public static extern physx_PxTransform_Pod Transform_new_1(physx_PxVec3_Pod* position_pod);
		[LinkName("PxTransform_new_2")] public static extern physx_PxTransform_Pod Transform_new_2(uint32 r_pod);
		[LinkName("PxTransform_new_3")] public static extern physx_PxTransform_Pod Transform_new_3(physx_PxQuat_Pod* orientation_pod);
		[LinkName("PxTransform_new_4")] public static extern physx_PxTransform_Pod Transform_new_4(float x, float y, float z, physx_PxQuat_Pod aQ_pod);
		[LinkName("PxTransform_new_5")] public static extern physx_PxTransform_Pod Transform_new_5(physx_PxVec3_Pod* p0_pod, physx_PxQuat_Pod* q0_pod);
		[LinkName("PxTransform_new_6")] public static extern physx_PxTransform_Pod Transform_new_6(physx_PxMat44_Pod* m_pod);
		[LinkName("PxTransform_getInverse")] public static extern physx_PxTransform_Pod Transform_getInverse(physx_PxTransform_Pod* self__pod);
		[LinkName("PxTransform_transform")] public static extern physx_PxVec3_Pod Transform_transform(physx_PxTransform_Pod* self__pod, physx_PxVec3_Pod* input_pod);
		[LinkName("PxTransform_transformInv")] public static extern physx_PxVec3_Pod Transform_transformInv(physx_PxTransform_Pod* self__pod, physx_PxVec3_Pod* input_pod);
		[LinkName("PxTransform_rotate")] public static extern physx_PxVec3_Pod Transform_rotate(physx_PxTransform_Pod* self__pod, physx_PxVec3_Pod* input_pod);
		[LinkName("PxTransform_rotateInv")] public static extern physx_PxVec3_Pod Transform_rotateInv(physx_PxTransform_Pod* self__pod, physx_PxVec3_Pod* input_pod);
		[LinkName("PxTransform_transform_1")] public static extern physx_PxTransform_Pod Transform_transform_1(physx_PxTransform_Pod* self__pod, physx_PxTransform_Pod* src_pod);
		[LinkName("PxTransform_isValid")] public static extern bool Transform_isValid(physx_PxTransform_Pod* self__pod);
		[LinkName("PxTransform_isSane")] public static extern bool Transform_isSane(physx_PxTransform_Pod* self__pod);
		[LinkName("PxTransform_isFinite")] public static extern bool Transform_isFinite(physx_PxTransform_Pod* self__pod);
		[LinkName("PxTransform_transformInv_1")] public static extern physx_PxTransform_Pod Transform_transformInv_1(physx_PxTransform_Pod* self__pod, physx_PxTransform_Pod* src_pod);
		[LinkName("PxTransform_transform_2")] public static extern physx_PxPlane_Pod Transform_transform_2(physx_PxTransform_Pod* self__pod, physx_PxPlane_Pod* plane_pod);
		[LinkName("PxTransform_inverseTransform")] public static extern physx_PxPlane_Pod Transform_inverseTransform(physx_PxTransform_Pod* self__pod, physx_PxPlane_Pod* plane_pod);
		[LinkName("PxTransform_getNormalized")] public static extern physx_PxTransform_Pod Transform_getNormalized(physx_PxTransform_Pod* self__pod);
		[LinkName("PxMat33_new")] public static extern physx_PxMat33_Pod Mat33_new();
		[LinkName("PxMat33_new_1")] public static extern physx_PxMat33_Pod Mat33_new_1(uint32 r_pod);
		[LinkName("PxMat33_new_2")] public static extern physx_PxMat33_Pod Mat33_new_2(uint32 r_pod);
		[LinkName("PxMat33_new_3")] public static extern physx_PxMat33_Pod Mat33_new_3(physx_PxVec3_Pod* col0_pod, physx_PxVec3_Pod* col1_pod, physx_PxVec3_Pod* col2_pod);
		[LinkName("PxMat33_new_4")] public static extern physx_PxMat33_Pod Mat33_new_4(float r);
		[LinkName("PxMat33_new_5")] public static extern physx_PxMat33_Pod Mat33_new_5(float* values);
		[LinkName("PxMat33_new_6")] public static extern physx_PxMat33_Pod Mat33_new_6(physx_PxQuat_Pod* q_pod);
		[LinkName("PxMat33_createDiagonal_mut")] public static extern physx_PxMat33_Pod Mat33_createDiagonal_mut(physx_PxVec3_Pod* d_pod);
		[LinkName("PxMat33_getTranspose")] public static extern physx_PxMat33_Pod Mat33_getTranspose(physx_PxMat33_Pod* self__pod);
		[LinkName("PxMat33_getInverse")] public static extern physx_PxMat33_Pod Mat33_getInverse(physx_PxMat33_Pod* self__pod);
		[LinkName("PxMat33_getDeterminant")] public static extern float Mat33_getDeterminant(physx_PxMat33_Pod* self__pod);
		[LinkName("PxMat33_transform")] public static extern physx_PxVec3_Pod Mat33_transform(physx_PxMat33_Pod* self__pod, physx_PxVec3_Pod* other_pod);
		[LinkName("PxMat33_transformTranspose")] public static extern physx_PxVec3_Pod Mat33_transformTranspose(physx_PxMat33_Pod* self__pod, physx_PxVec3_Pod* other_pod);
		[LinkName("PxMat33_front")] public static extern float* Mat33_front(physx_PxMat33_Pod* self__pod);
		[LinkName("PxQuat_new_6")] public static extern physx_PxQuat_Pod Quat_new_6(physx_PxMat33_Pod* m_pod);
		[LinkName("PxBounds3_new")] public static extern physx_PxBounds3_Pod Bounds3_new();
		[LinkName("PxBounds3_new_1")] public static extern physx_PxBounds3_Pod Bounds3_new_1(physx_PxVec3_Pod* minimum_pod, physx_PxVec3_Pod* maximum_pod);
		[LinkName("PxBounds3_empty_mut")] public static extern physx_PxBounds3_Pod Bounds3_empty_mut();
		[LinkName("PxBounds3_boundsOfPoints_mut")] public static extern physx_PxBounds3_Pod Bounds3_boundsOfPoints_mut(physx_PxVec3_Pod* v0_pod, physx_PxVec3_Pod* v1_pod);
		[LinkName("PxBounds3_centerExtents_mut")] public static extern physx_PxBounds3_Pod Bounds3_centerExtents_mut(physx_PxVec3_Pod* center_pod, physx_PxVec3_Pod* extent_pod);
		[LinkName("PxBounds3_basisExtent_mut")] public static extern physx_PxBounds3_Pod Bounds3_basisExtent_mut(physx_PxVec3_Pod* center_pod, physx_PxMat33_Pod* basis_pod, physx_PxVec3_Pod* extent_pod);
		[LinkName("PxBounds3_poseExtent_mut")] public static extern physx_PxBounds3_Pod Bounds3_poseExtent_mut(physx_PxTransform_Pod* pose_pod, physx_PxVec3_Pod* extent_pod);
		[LinkName("PxBounds3_transformSafe_mut")] public static extern physx_PxBounds3_Pod Bounds3_transformSafe_mut(physx_PxMat33_Pod* matrix_pod, physx_PxBounds3_Pod* bounds_pod);
		[LinkName("PxBounds3_transformFast_mut")] public static extern physx_PxBounds3_Pod Bounds3_transformFast_mut(physx_PxMat33_Pod* matrix_pod, physx_PxBounds3_Pod* bounds_pod);
		[LinkName("PxBounds3_transformSafe_mut_1")] public static extern physx_PxBounds3_Pod Bounds3_transformSafe_mut_1(physx_PxTransform_Pod* transform_pod, physx_PxBounds3_Pod* bounds_pod);
		[LinkName("PxBounds3_transformFast_mut_1")] public static extern physx_PxBounds3_Pod Bounds3_transformFast_mut_1(physx_PxTransform_Pod* transform_pod, physx_PxBounds3_Pod* bounds_pod);
		[LinkName("PxBounds3_setEmpty_mut")] public static extern void Bounds3_setEmpty_mut(physx_PxBounds3_Pod* self__pod);
		[LinkName("PxBounds3_setMaximal_mut")] public static extern void Bounds3_setMaximal_mut(physx_PxBounds3_Pod* self__pod);
		[LinkName("PxBounds3_include_mut")] public static extern void Bounds3_include_mut(physx_PxBounds3_Pod* self__pod, physx_PxVec3_Pod* v_pod);
		[LinkName("PxBounds3_include_mut_1")] public static extern void Bounds3_include_mut_1(physx_PxBounds3_Pod* self__pod, physx_PxBounds3_Pod* b_pod);
		[LinkName("PxBounds3_isEmpty")] public static extern bool Bounds3_isEmpty(physx_PxBounds3_Pod* self__pod);
		[LinkName("PxBounds3_intersects")] public static extern bool Bounds3_intersects(physx_PxBounds3_Pod* self__pod, physx_PxBounds3_Pod* b_pod);
		[LinkName("PxBounds3_intersects1D")] public static extern bool Bounds3_intersects1D(physx_PxBounds3_Pod* self__pod, physx_PxBounds3_Pod* a_pod, uint32 axis);
		[LinkName("PxBounds3_contains")] public static extern bool Bounds3_contains(physx_PxBounds3_Pod* self__pod, physx_PxVec3_Pod* v_pod);
		[LinkName("PxBounds3_isInside")] public static extern bool Bounds3_isInside(physx_PxBounds3_Pod* self__pod, physx_PxBounds3_Pod* box_pod);
		[LinkName("PxBounds3_getCenter")] public static extern physx_PxVec3_Pod Bounds3_getCenter(physx_PxBounds3_Pod* self__pod);
		[LinkName("PxBounds3_getCenter_1")] public static extern float Bounds3_getCenter_1(physx_PxBounds3_Pod* self__pod, uint32 axis);
		[LinkName("PxBounds3_getExtents")] public static extern float Bounds3_getExtents(physx_PxBounds3_Pod* self__pod, uint32 axis);
		[LinkName("PxBounds3_getDimensions")] public static extern physx_PxVec3_Pod Bounds3_getDimensions(physx_PxBounds3_Pod* self__pod);
		[LinkName("PxBounds3_getExtents_1")] public static extern physx_PxVec3_Pod Bounds3_getExtents_1(physx_PxBounds3_Pod* self__pod);
		[LinkName("PxBounds3_scaleSafe_mut")] public static extern void Bounds3_scaleSafe_mut(physx_PxBounds3_Pod* self__pod, float scale);
		[LinkName("PxBounds3_scaleFast_mut")] public static extern void Bounds3_scaleFast_mut(physx_PxBounds3_Pod* self__pod, float scale);
		[LinkName("PxBounds3_fattenSafe_mut")] public static extern void Bounds3_fattenSafe_mut(physx_PxBounds3_Pod* self__pod, float distance);
		[LinkName("PxBounds3_fattenFast_mut")] public static extern void Bounds3_fattenFast_mut(physx_PxBounds3_Pod* self__pod, float distance);
		[LinkName("PxBounds3_isFinite")] public static extern bool Bounds3_isFinite(physx_PxBounds3_Pod* self__pod);
		[LinkName("PxBounds3_isValid")] public static extern bool Bounds3_isValid(physx_PxBounds3_Pod* self__pod);
		[LinkName("PxBounds3_new_2")] public static extern physx_PxBounds3_Pod Bounds3_new_2(physx_PxVec3_Pod* minimum__pod, physx_PxVec3_Pod* maximum__pod);
		[LinkName("PxBounds3_empty_mut_1")] public static extern physx_PxBounds3_Pod Bounds3_empty_mut_1();
		[LinkName("PxBounds3_isFinite_1")] public static extern bool Bounds3_isFinite_1(physx_PxBounds3_Pod* self__pod);
		[LinkName("PxBounds3_boundsOfPoints_mut_1")] public static extern physx_PxBounds3_Pod Bounds3_boundsOfPoints_mut_1(physx_PxVec3_Pod* v0_pod, physx_PxVec3_Pod* v1_pod);
		[LinkName("PxBounds3_centerExtents_mut_1")] public static extern physx_PxBounds3_Pod Bounds3_centerExtents_mut_1(physx_PxVec3_Pod* center_pod, physx_PxVec3_Pod* extent_pod);
		[LinkName("PxBounds3_basisExtent_mut_1")] public static extern physx_PxBounds3_Pod Bounds3_basisExtent_mut_1(physx_PxVec3_Pod* center_pod, physx_PxMat33_Pod* basis_pod, physx_PxVec3_Pod* extent_pod);
		[LinkName("PxBounds3_poseExtent_mut_1")] public static extern physx_PxBounds3_Pod Bounds3_poseExtent_mut_1(physx_PxTransform_Pod* pose_pod, physx_PxVec3_Pod* extent_pod);
		[LinkName("PxBounds3_setEmpty_mut_1")] public static extern void Bounds3_setEmpty_mut_1(physx_PxBounds3_Pod* self__pod);
		[LinkName("PxBounds3_setMaximal_mut_1")] public static extern void Bounds3_setMaximal_mut_1(physx_PxBounds3_Pod* self__pod);
		[LinkName("PxBounds3_include_mut_2")] public static extern void Bounds3_include_mut_2(physx_PxBounds3_Pod* self__pod, physx_PxVec3_Pod* v_pod);
		[LinkName("PxBounds3_include_mut_3")] public static extern void Bounds3_include_mut_3(physx_PxBounds3_Pod* self__pod, physx_PxBounds3_Pod* b_pod);
		[LinkName("PxBounds3_isEmpty_1")] public static extern bool Bounds3_isEmpty_1(physx_PxBounds3_Pod* self__pod);
		[LinkName("PxBounds3_intersects_1")] public static extern bool Bounds3_intersects_1(physx_PxBounds3_Pod* self__pod, physx_PxBounds3_Pod* b_pod);
		[LinkName("PxBounds3_intersects1D_1")] public static extern bool Bounds3_intersects1D_1(physx_PxBounds3_Pod* self__pod, physx_PxBounds3_Pod* a_pod, uint32 axis);
		[LinkName("PxBounds3_contains_1")] public static extern bool Bounds3_contains_1(physx_PxBounds3_Pod* self__pod, physx_PxVec3_Pod* v_pod);
		[LinkName("PxBounds3_isInside_1")] public static extern bool Bounds3_isInside_1(physx_PxBounds3_Pod* self__pod, physx_PxBounds3_Pod* box_pod);
		[LinkName("PxBounds3_getCenter_2")] public static extern physx_PxVec3_Pod Bounds3_getCenter_2(physx_PxBounds3_Pod* self__pod);
		[LinkName("PxBounds3_getCenter_3")] public static extern float Bounds3_getCenter_3(physx_PxBounds3_Pod* self__pod, uint32 axis);
		[LinkName("PxBounds3_getExtents_2")] public static extern float Bounds3_getExtents_2(physx_PxBounds3_Pod* self__pod, uint32 axis);
		[LinkName("PxBounds3_getDimensions_1")] public static extern physx_PxVec3_Pod Bounds3_getDimensions_1(physx_PxBounds3_Pod* self__pod);
		[LinkName("PxBounds3_getExtents_3")] public static extern physx_PxVec3_Pod Bounds3_getExtents_3(physx_PxBounds3_Pod* self__pod);
		[LinkName("PxBounds3_scaleSafe_mut_1")] public static extern void Bounds3_scaleSafe_mut_1(physx_PxBounds3_Pod* self__pod, float scale);
		[LinkName("PxBounds3_scaleFast_mut_1")] public static extern void Bounds3_scaleFast_mut_1(physx_PxBounds3_Pod* self__pod, float scale);
		[LinkName("PxBounds3_fattenSafe_mut_1")] public static extern void Bounds3_fattenSafe_mut_1(physx_PxBounds3_Pod* self__pod, float distance);
		[LinkName("PxBounds3_fattenFast_mut_1")] public static extern void Bounds3_fattenFast_mut_1(physx_PxBounds3_Pod* self__pod, float distance);
		[LinkName("PxBounds3_transformSafe_mut_2")] public static extern physx_PxBounds3_Pod Bounds3_transformSafe_mut_2(physx_PxMat33_Pod* matrix_pod, physx_PxBounds3_Pod* bounds_pod);
		[LinkName("PxBounds3_transformFast_mut_2")] public static extern physx_PxBounds3_Pod Bounds3_transformFast_mut_2(physx_PxMat33_Pod* matrix_pod, physx_PxBounds3_Pod* bounds_pod);
		[LinkName("PxBounds3_transformSafe_mut_3")] public static extern physx_PxBounds3_Pod Bounds3_transformSafe_mut_3(physx_PxTransform_Pod* transform_pod, physx_PxBounds3_Pod* bounds_pod);
		[LinkName("PxBounds3_transformFast_mut_3")] public static extern physx_PxBounds3_Pod Bounds3_transformFast_mut_3(physx_PxTransform_Pod* transform_pod, physx_PxBounds3_Pod* bounds_pod);
		[LinkName("PxBounds3_isValid_1")] public static extern bool Bounds3_isValid_1(physx_PxBounds3_Pod* self__pod);
		[LinkName("PxErrorCallback_delete")] public static extern void ErrorCallback_delete(physx_PxErrorCallback_Pod* self__pod);
		[LinkName("PxErrorCallback_reportError_mut")] public static extern void ErrorCallback_reportError_mut(physx_PxErrorCallback_Pod* self__pod, int code_pod, char8* message, char8* file, int32 line);
		[LinkName("PxInputStream_read_mut")] public static extern uint32 InputStream_read_mut(physx_PxInputStream_Pod* self__pod, void* dest, uint32 count);
		[LinkName("PxInputStream_delete")] public static extern void InputStream_delete(physx_PxInputStream_Pod* self__pod);
		[LinkName("PxInputData_getLength")] public static extern uint32 InputData_getLength(physx_PxInputData_Pod* self__pod);
		[LinkName("PxInputData_seek_mut")] public static extern void InputData_seek_mut(physx_PxInputData_Pod* self__pod, uint32 offset);
		[LinkName("PxInputData_tell")] public static extern uint32 InputData_tell(physx_PxInputData_Pod* self__pod);
		[LinkName("PxInputData_delete")] public static extern void InputData_delete(physx_PxInputData_Pod* self__pod);
		[LinkName("PxOutputStream_write_mut")] public static extern uint32 OutputStream_write_mut(physx_PxOutputStream_Pod* self__pod, void* src, uint32 count);
		[LinkName("PxOutputStream_delete")] public static extern void OutputStream_delete(physx_PxOutputStream_Pod* self__pod);
		[LinkName("PxVec4_new")] public static extern physx_PxVec4_Pod Vec4_new();
		[LinkName("PxVec4_new_1")] public static extern physx_PxVec4_Pod Vec4_new_1(uint32 r_pod);
		[LinkName("PxVec4_new_2")] public static extern physx_PxVec4_Pod Vec4_new_2(float a);
		[LinkName("PxVec4_new_3")] public static extern physx_PxVec4_Pod Vec4_new_3(float nx, float ny, float nz, float nw);
		[LinkName("PxVec4_new_4")] public static extern physx_PxVec4_Pod Vec4_new_4(physx_PxVec3_Pod* v_pod, float nw);
		[LinkName("PxVec4_new_5")] public static extern physx_PxVec4_Pod Vec4_new_5(float* v);
		[LinkName("PxVec4_isZero")] public static extern bool Vec4_isZero(physx_PxVec4_Pod* self__pod);
		[LinkName("PxVec4_isFinite")] public static extern bool Vec4_isFinite(physx_PxVec4_Pod* self__pod);
		[LinkName("PxVec4_isNormalized")] public static extern bool Vec4_isNormalized(physx_PxVec4_Pod* self__pod);
		[LinkName("PxVec4_magnitudeSquared")] public static extern float Vec4_magnitudeSquared(physx_PxVec4_Pod* self__pod);
		[LinkName("PxVec4_magnitude")] public static extern float Vec4_magnitude(physx_PxVec4_Pod* self__pod);
		[LinkName("PxVec4_dot")] public static extern float Vec4_dot(physx_PxVec4_Pod* self__pod, physx_PxVec4_Pod* v_pod);
		[LinkName("PxVec4_getNormalized")] public static extern physx_PxVec4_Pod Vec4_getNormalized(physx_PxVec4_Pod* self__pod);
		[LinkName("PxVec4_normalize_mut")] public static extern float Vec4_normalize_mut(physx_PxVec4_Pod* self__pod);
		[LinkName("PxVec4_multiply")] public static extern physx_PxVec4_Pod Vec4_multiply(physx_PxVec4_Pod* self__pod, physx_PxVec4_Pod* a_pod);
		[LinkName("PxVec4_minimum")] public static extern physx_PxVec4_Pod Vec4_minimum(physx_PxVec4_Pod* self__pod, physx_PxVec4_Pod* v_pod);
		[LinkName("PxVec4_maximum")] public static extern physx_PxVec4_Pod Vec4_maximum(physx_PxVec4_Pod* self__pod, physx_PxVec4_Pod* v_pod);
		[LinkName("PxVec4_getXYZ")] public static extern physx_PxVec3_Pod Vec4_getXYZ(physx_PxVec4_Pod* self__pod);
		[LinkName("PxVec4_setZero_mut")] public static extern void Vec4_setZero_mut(physx_PxVec4_Pod* self__pod);
		[LinkName("PxMat44_new")] public static extern physx_PxMat44_Pod Mat44_new();
		[LinkName("PxMat44_new_1")] public static extern physx_PxMat44_Pod Mat44_new_1(uint32 r_pod);
		[LinkName("PxMat44_new_2")] public static extern physx_PxMat44_Pod Mat44_new_2(uint32 r_pod);
		[LinkName("PxMat44_new_3")] public static extern physx_PxMat44_Pod Mat44_new_3(physx_PxVec4_Pod* col0_pod, physx_PxVec4_Pod* col1_pod, physx_PxVec4_Pod* col2_pod, physx_PxVec4_Pod* col3_pod);
		[LinkName("PxMat44_new_4")] public static extern physx_PxMat44_Pod Mat44_new_4(float r);
		[LinkName("PxMat44_new_5")] public static extern physx_PxMat44_Pod Mat44_new_5(physx_PxVec3_Pod* col0_pod, physx_PxVec3_Pod* col1_pod, physx_PxVec3_Pod* col2_pod, physx_PxVec3_Pod* col3_pod);
		[LinkName("PxMat44_new_6")] public static extern physx_PxMat44_Pod Mat44_new_6(float* values);
		[LinkName("PxMat44_new_7")] public static extern physx_PxMat44_Pod Mat44_new_7(physx_PxQuat_Pod* q_pod);
		[LinkName("PxMat44_new_8")] public static extern physx_PxMat44_Pod Mat44_new_8(physx_PxVec4_Pod* diagonal_pod);
		[LinkName("PxMat44_new_9")] public static extern physx_PxMat44_Pod Mat44_new_9(physx_PxMat33_Pod* axes_pod, physx_PxVec3_Pod* position_pod);
		[LinkName("PxMat44_new_10")] public static extern physx_PxMat44_Pod Mat44_new_10(physx_PxTransform_Pod* t_pod);
		[LinkName("PxMat44_getTranspose")] public static extern physx_PxMat44_Pod Mat44_getTranspose(physx_PxMat44_Pod* self__pod);
		[LinkName("PxMat44_transform")] public static extern physx_PxVec4_Pod Mat44_transform(physx_PxMat44_Pod* self__pod, physx_PxVec4_Pod* other_pod);
		[LinkName("PxMat44_transform_1")] public static extern physx_PxVec3_Pod Mat44_transform_1(physx_PxMat44_Pod* self__pod, physx_PxVec3_Pod* other_pod);
		[LinkName("PxMat44_rotate")] public static extern physx_PxVec4_Pod Mat44_rotate(physx_PxMat44_Pod* self__pod, physx_PxVec4_Pod* other_pod);
		[LinkName("PxMat44_rotate_1")] public static extern physx_PxVec3_Pod Mat44_rotate_1(physx_PxMat44_Pod* self__pod, physx_PxVec3_Pod* other_pod);
		[LinkName("PxMat44_getBasis")] public static extern physx_PxVec3_Pod Mat44_getBasis(physx_PxMat44_Pod* self__pod, int32 num);
		[LinkName("PxMat44_getPosition")] public static extern physx_PxVec3_Pod Mat44_getPosition(physx_PxMat44_Pod* self__pod);
		[LinkName("PxMat44_setPosition_mut")] public static extern void Mat44_setPosition_mut(physx_PxMat44_Pod* self__pod, physx_PxVec3_Pod* position_pod);
		[LinkName("PxMat44_front")] public static extern float* Mat44_front(physx_PxMat44_Pod* self__pod);
		[LinkName("PxMat44_scale_mut")] public static extern void Mat44_scale_mut(physx_PxMat44_Pod* self__pod, physx_PxVec4_Pod* p_pod);
		[LinkName("PxMat44_inverseRT")] public static extern physx_PxMat44_Pod Mat44_inverseRT(physx_PxMat44_Pod* self__pod);
		[LinkName("PxMat44_isFinite")] public static extern bool Mat44_isFinite(physx_PxMat44_Pod* self__pod);
		[LinkName("PxTransform_new_7")] public static extern physx_PxTransform_Pod Transform_new_7(physx_PxMat44_Pod* m_pod);
		[LinkName("phys_PxShortestRotation")] public static extern physx_PxQuat_Pod ShortestRotation(physx_PxVec3_Pod* from_pod, physx_PxVec3_Pod* target_pod);
		[LinkName("phys_PxDiagonalize")] public static extern physx_PxVec3_Pod Diagonalize(physx_PxMat33_Pod* m_pod, physx_PxQuat_Pod* axes_pod);
		[LinkName("PxVec2_new")] public static extern physx_PxVec2_Pod Vec2_new();
		[LinkName("PxVec2_new_1")] public static extern physx_PxVec2_Pod Vec2_new_1(uint32 r_pod);
		[LinkName("PxVec2_new_2")] public static extern physx_PxVec2_Pod Vec2_new_2(float a);
		[LinkName("PxVec2_new_3")] public static extern physx_PxVec2_Pod Vec2_new_3(float nx, float ny);
		[LinkName("PxVec2_isZero")] public static extern bool Vec2_isZero(physx_PxVec2_Pod* self__pod);
		[LinkName("PxVec2_isFinite")] public static extern bool Vec2_isFinite(physx_PxVec2_Pod* self__pod);
		[LinkName("PxVec2_isNormalized")] public static extern bool Vec2_isNormalized(physx_PxVec2_Pod* self__pod);
		[LinkName("PxVec2_magnitudeSquared")] public static extern float Vec2_magnitudeSquared(physx_PxVec2_Pod* self__pod);
		[LinkName("PxVec2_magnitude")] public static extern float Vec2_magnitude(physx_PxVec2_Pod* self__pod);
		[LinkName("PxVec2_dot")] public static extern float Vec2_dot(physx_PxVec2_Pod* self__pod, physx_PxVec2_Pod* v_pod);
		[LinkName("PxVec2_getNormalized")] public static extern physx_PxVec2_Pod Vec2_getNormalized(physx_PxVec2_Pod* self__pod);
		[LinkName("PxVec2_normalize_mut")] public static extern float Vec2_normalize_mut(physx_PxVec2_Pod* self__pod);
		[LinkName("PxVec2_multiply")] public static extern physx_PxVec2_Pod Vec2_multiply(physx_PxVec2_Pod* self__pod, physx_PxVec2_Pod* a_pod);
		[LinkName("PxVec2_minimum")] public static extern physx_PxVec2_Pod Vec2_minimum(physx_PxVec2_Pod* self__pod, physx_PxVec2_Pod* v_pod);
		[LinkName("PxVec2_minElement")] public static extern float Vec2_minElement(physx_PxVec2_Pod* self__pod);
		[LinkName("PxVec2_maximum")] public static extern physx_PxVec2_Pod Vec2_maximum(physx_PxVec2_Pod* self__pod, physx_PxVec2_Pod* v_pod);
		[LinkName("PxVec2_maxElement")] public static extern float Vec2_maxElement(physx_PxVec2_Pod* self__pod);
		[LinkName("phys_PxMemZero")] public static extern void* MemZero(void* dest, uint32 count);
		[LinkName("phys_PxMemSet")] public static extern void* MemSet(void* dest, int32 c, uint32 count);
		[LinkName("phys_PxMemCopy")] public static extern void* MemCopy(void* dest, void* src, uint32 count);
		[LinkName("phys_PxMemMove")] public static extern void* MemMove(void* dest, void* src, uint32 count);
		[LinkName("PxStridedData_new")] public static extern physx_PxStridedData_Pod StridedData_new();
		[LinkName("PxBoundedData_new")] public static extern physx_PxBoundedData_Pod BoundedData_new();
		[LinkName("PxDebugPoint_new")] public static extern physx_PxDebugPoint_Pod DebugPoint_new(physx_PxVec3_Pod* p_pod, uint32* c_pod);
		[LinkName("PxDebugLine_new")] public static extern physx_PxDebugLine_Pod DebugLine_new(physx_PxVec3_Pod* p0_pod, physx_PxVec3_Pod* p1_pod, uint32* c_pod);
		[LinkName("PxDebugTriangle_new")] public static extern physx_PxDebugTriangle_Pod DebugTriangle_new(physx_PxVec3_Pod* p0_pod, physx_PxVec3_Pod* p1_pod, physx_PxVec3_Pod* p2_pod, uint32* c_pod);
		[LinkName("PxDebugText_new")] public static extern physx_PxDebugText_Pod DebugText_new();
		[LinkName("PxDebugText_new_1")] public static extern physx_PxDebugText_Pod DebugText_new_1(physx_PxVec3_Pod* p_pod, float* s_pod, uint32* c_pod, char8* str);
		[LinkName("PxRenderBuffer_delete")] public static extern void RenderBuffer_delete(physx_PxRenderBuffer_Pod* self__pod);
		[LinkName("PxRenderBuffer_getNbPoints")] public static extern uint32 RenderBuffer_getNbPoints(physx_PxRenderBuffer_Pod* self__pod);
		[LinkName("PxRenderBuffer_getPoints")] public static extern physx_PxDebugPoint_Pod* RenderBuffer_getPoints(physx_PxRenderBuffer_Pod* self__pod);
		[LinkName("PxRenderBuffer_getNbLines")] public static extern uint32 RenderBuffer_getNbLines(physx_PxRenderBuffer_Pod* self__pod);
		[LinkName("PxRenderBuffer_getLines")] public static extern physx_PxDebugLine_Pod* RenderBuffer_getLines(physx_PxRenderBuffer_Pod* self__pod);
		[LinkName("PxRenderBuffer_getNbTriangles")] public static extern uint32 RenderBuffer_getNbTriangles(physx_PxRenderBuffer_Pod* self__pod);
		[LinkName("PxRenderBuffer_getTriangles")] public static extern physx_PxDebugTriangle_Pod* RenderBuffer_getTriangles(physx_PxRenderBuffer_Pod* self__pod);
		[LinkName("PxRenderBuffer_getNbTexts")] public static extern uint32 RenderBuffer_getNbTexts(physx_PxRenderBuffer_Pod* self__pod);
		[LinkName("PxRenderBuffer_getTexts")] public static extern physx_PxDebugText_Pod* RenderBuffer_getTexts(physx_PxRenderBuffer_Pod* self__pod);
		[LinkName("PxRenderBuffer_append_mut")] public static extern void RenderBuffer_append_mut(physx_PxRenderBuffer_Pod* self__pod, physx_PxRenderBuffer_Pod* other_pod);
		[LinkName("PxRenderBuffer_clear_mut")] public static extern void RenderBuffer_clear_mut(physx_PxRenderBuffer_Pod* self__pod);
		[LinkName("PxProcessPxBaseCallback_delete")] public static extern void ProcessPxBaseCallback_delete(physx_PxProcessPxBaseCallback_Pod* self__pod);
		[LinkName("PxProcessPxBaseCallback_process_mut")] public static extern void ProcessPxBaseCallback_process_mut(physx_PxProcessPxBaseCallback_Pod* self__pod, physx_PxBase_Pod* anonymous_arg0_pod);
		[LinkName("PxSerializationContext_registerReference_mut")] public static extern void SerializationContext_registerReference_mut(physx_PxSerializationContext_Pod* self__pod, physx_PxBase_Pod* base_pod, uint32 kind, uint64 reference);
		[LinkName("PxSerializationContext_getCollection")] public static extern physx_PxCollection_Pod* SerializationContext_getCollection(physx_PxSerializationContext_Pod* self__pod);
		[LinkName("PxSerializationContext_writeData_mut")] public static extern void SerializationContext_writeData_mut(physx_PxSerializationContext_Pod* self__pod, void* data, uint32 size);
		[LinkName("PxSerializationContext_alignData_mut")] public static extern void SerializationContext_alignData_mut(physx_PxSerializationContext_Pod* self__pod, uint32 alignment);
		[LinkName("PxSerializationContext_writeName_mut")] public static extern void SerializationContext_writeName_mut(physx_PxSerializationContext_Pod* self__pod, char8* name);
		[LinkName("PxDeserializationContext_resolveReference")] public static extern physx_PxBase_Pod* DeserializationContext_resolveReference(physx_PxDeserializationContext_Pod* self__pod, uint32 kind, uint64 reference);
		[LinkName("PxDeserializationContext_readName_mut")] public static extern void DeserializationContext_readName_mut(physx_PxDeserializationContext_Pod* self__pod, char8** name_pod);
		[LinkName("PxDeserializationContext_alignExtraData_mut")] public static extern void DeserializationContext_alignExtraData_mut(physx_PxDeserializationContext_Pod* self__pod, uint32 alignment);
		[LinkName("PxSerializationRegistry_registerSerializer_mut")] public static extern void SerializationRegistry_registerSerializer_mut(physx_PxSerializationRegistry_Pod* self__pod, uint16 type, physx_PxSerializer_Pod* serializer_pod);
		[LinkName("PxSerializationRegistry_unregisterSerializer_mut")] public static extern physx_PxSerializer_Pod* SerializationRegistry_unregisterSerializer_mut(physx_PxSerializationRegistry_Pod* self__pod, uint16 type);
		[LinkName("PxSerializationRegistry_registerBinaryMetaDataCallback_mut")] public static extern void SerializationRegistry_registerBinaryMetaDataCallback_mut(physx_PxSerializationRegistry_Pod* self__pod, void* callback_pod);
		[LinkName("PxSerializationRegistry_getSerializer")] public static extern physx_PxSerializer_Pod* SerializationRegistry_getSerializer(physx_PxSerializationRegistry_Pod* self__pod, uint16 type);
		[LinkName("PxSerializationRegistry_registerRepXSerializer_mut")] public static extern void SerializationRegistry_registerRepXSerializer_mut(physx_PxSerializationRegistry_Pod* self__pod, uint16 type, physx_PxRepXSerializer_Pod* serializer_pod);
		[LinkName("PxSerializationRegistry_unregisterRepXSerializer_mut")] public static extern physx_PxRepXSerializer_Pod* SerializationRegistry_unregisterRepXSerializer_mut(physx_PxSerializationRegistry_Pod* self__pod, uint16 type);
		[LinkName("PxSerializationRegistry_getRepXSerializer")] public static extern physx_PxRepXSerializer_Pod* SerializationRegistry_getRepXSerializer(physx_PxSerializationRegistry_Pod* self__pod, char8* typeName);
		[LinkName("PxSerializationRegistry_release_mut")] public static extern void SerializationRegistry_release_mut(physx_PxSerializationRegistry_Pod* self__pod);
		[LinkName("PxCollection_add_mut")] public static extern void Collection_add_mut(physx_PxCollection_Pod* self__pod, physx_PxBase_Pod* object_pod, uint64 id);
		[LinkName("PxCollection_remove_mut")] public static extern void Collection_remove_mut(physx_PxCollection_Pod* self__pod, physx_PxBase_Pod* object_pod);
		[LinkName("PxCollection_contains")] public static extern bool Collection_contains(physx_PxCollection_Pod* self__pod, physx_PxBase_Pod* object_pod);
		[LinkName("PxCollection_addId_mut")] public static extern void Collection_addId_mut(physx_PxCollection_Pod* self__pod, physx_PxBase_Pod* object_pod, uint64 id);
		[LinkName("PxCollection_removeId_mut")] public static extern void Collection_removeId_mut(physx_PxCollection_Pod* self__pod, uint64 id);
		[LinkName("PxCollection_add_mut_1")] public static extern void Collection_add_mut_1(physx_PxCollection_Pod* self__pod, physx_PxCollection_Pod* collection_pod);
		[LinkName("PxCollection_remove_mut_1")] public static extern void Collection_remove_mut_1(physx_PxCollection_Pod* self__pod, physx_PxCollection_Pod* collection_pod);
		[LinkName("PxCollection_getNbObjects")] public static extern uint32 Collection_getNbObjects(physx_PxCollection_Pod* self__pod);
		[LinkName("PxCollection_getObject")] public static extern physx_PxBase_Pod* Collection_getObject(physx_PxCollection_Pod* self__pod, uint32 index);
		[LinkName("PxCollection_getObjects")] public static extern uint32 Collection_getObjects(physx_PxCollection_Pod* self__pod, physx_PxBase_Pod** userBuffer_pod, uint32 bufferSize, uint32 startIndex);
		[LinkName("PxCollection_find")] public static extern physx_PxBase_Pod* Collection_find(physx_PxCollection_Pod* self__pod, uint64 id);
		[LinkName("PxCollection_getNbIds")] public static extern uint32 Collection_getNbIds(physx_PxCollection_Pod* self__pod);
		[LinkName("PxCollection_getIds")] public static extern uint32 Collection_getIds(physx_PxCollection_Pod* self__pod, uint64* userBuffer, uint32 bufferSize, uint32 startIndex);
		[LinkName("PxCollection_getId")] public static extern uint64 Collection_getId(physx_PxCollection_Pod* self__pod, physx_PxBase_Pod* object_pod);
		[LinkName("PxCollection_release_mut")] public static extern void Collection_release_mut(physx_PxCollection_Pod* self__pod);
		[LinkName("phys_PxCreateCollection")] public static extern physx_PxCollection_Pod* CreateCollection();
		[LinkName("PxBase_release_mut")] public static extern void Base_release_mut(physx_PxBase_Pod* self__pod);
		[LinkName("PxBase_getConcreteTypeName")] public static extern char8* Base_getConcreteTypeName(physx_PxBase_Pod* self__pod);
		[LinkName("PxBase_getConcreteType")] public static extern uint16 Base_getConcreteType(physx_PxBase_Pod* self__pod);
		[LinkName("PxBase_setBaseFlag_mut")] public static extern void Base_setBaseFlag_mut(physx_PxBase_Pod* self__pod, uint32 flag_pod, bool value);
		[LinkName("PxBase_setBaseFlags_mut")] public static extern void Base_setBaseFlags_mut(physx_PxBase_Pod* self__pod, physx_PxBaseFlags_Pod inFlags_pod);
		[LinkName("PxBase_getBaseFlags")] public static extern physx_PxBaseFlags_Pod Base_getBaseFlags(physx_PxBase_Pod* self__pod);
		[LinkName("PxBase_isReleasable")] public static extern bool Base_isReleasable(physx_PxBase_Pod* self__pod);
		[LinkName("PxTolerancesScale_new")] public static extern physx_PxTolerancesScale_Pod TolerancesScale_new();
		[LinkName("PxTolerancesScale_isValid")] public static extern bool TolerancesScale_isValid(physx_PxTolerancesScale_Pod* self__pod);
		[LinkName("PxTolerancesScale_new_1")] public static extern physx_PxTolerancesScale_Pod TolerancesScale_new_1();
		[LinkName("PxTolerancesScale_isValid_1")] public static extern bool TolerancesScale_isValid_1(physx_PxTolerancesScale_Pod* self__pod);
		[LinkName("PxStringTable_allocateStr_mut")] public static extern char8* StringTable_allocateStr_mut(physx_PxStringTable_Pod* self__pod, char8* inSrc);
		[LinkName("PxStringTable_release_mut")] public static extern void StringTable_release_mut(physx_PxStringTable_Pod* self__pod);
		[LinkName("PxFoundation_release_mut")] public static extern void Foundation_release_mut(physx_PxFoundation_Pod* self__pod);
		[LinkName("PxFoundation_getErrorCallback_mut")] public static extern physx_PxErrorCallback_Pod* Foundation_getErrorCallback_mut(physx_PxFoundation_Pod* self__pod);
		[LinkName("PxFoundation_setErrorLevel_mut")] public static extern void Foundation_setErrorLevel_mut(physx_PxFoundation_Pod* self__pod, int mask_pod);
		[LinkName("PxFoundation_getErrorLevel")] public static extern int Foundation_getErrorLevel(physx_PxFoundation_Pod* self__pod);
		[LinkName("PxFoundation_getAllocatorCallback_mut")] public static extern physx_PxAllocatorCallback_Pod* Foundation_getAllocatorCallback_mut(physx_PxFoundation_Pod* self__pod);
		[LinkName("PxFoundation_getReportAllocationNames")] public static extern bool Foundation_getReportAllocationNames(physx_PxFoundation_Pod* self__pod);
		[LinkName("PxFoundation_setReportAllocationNames_mut")] public static extern void Foundation_setReportAllocationNames_mut(physx_PxFoundation_Pod* self__pod, bool value);
		[LinkName("phys_PxCreateFoundation")] public static extern physx_PxFoundation_Pod* CreateFoundation(uint32 version, physx_PxAllocatorCallback_Pod* allocator_pod, physx_PxErrorCallback_Pod* errorCallback_pod);
		[LinkName("phys_PxGetFoundation")] public static extern physx_PxFoundation_Pod* GetFoundation();
		[LinkName("phys_PxGetProfilerCallback")] public static extern physx_PxProfilerCallback_Pod* GetProfilerCallback();
		[LinkName("phys_PxSetProfilerCallback")] public static extern void SetProfilerCallback(physx_PxProfilerCallback_Pod* profiler_pod);
		[LinkName("PxSerializer_getConcreteTypeName")] public static extern char8* Serializer_getConcreteTypeName(physx_PxSerializer_Pod* self__pod);
		[LinkName("PxSerializer_requiresObjects")] public static extern void Serializer_requiresObjects(physx_PxSerializer_Pod* self__pod, physx_PxBase_Pod* anonymous_arg0_pod, physx_PxProcessPxBaseCallback_Pod* anonymous_arg1_pod);
		[LinkName("PxSerializer_isSubordinate")] public static extern bool Serializer_isSubordinate(physx_PxSerializer_Pod* self__pod);
		[LinkName("PxSerializer_exportExtraData")] public static extern void Serializer_exportExtraData(physx_PxSerializer_Pod* self__pod, physx_PxBase_Pod* anonymous_arg0_pod, physx_PxSerializationContext_Pod* anonymous_arg1_pod);
		[LinkName("PxSerializer_exportData")] public static extern void Serializer_exportData(physx_PxSerializer_Pod* self__pod, physx_PxBase_Pod* anonymous_arg0_pod, physx_PxSerializationContext_Pod* anonymous_arg1_pod);
		[LinkName("PxSerializer_registerReferences")] public static extern void Serializer_registerReferences(physx_PxSerializer_Pod* self__pod, physx_PxBase_Pod* obj_pod, physx_PxSerializationContext_Pod* s_pod);
		[LinkName("PxSerializer_getClassSize")] public static extern uint64 Serializer_getClassSize(physx_PxSerializer_Pod* self__pod);
		[LinkName("PxSerializer_createObject")] public static extern physx_PxBase_Pod* Serializer_createObject(physx_PxSerializer_Pod* self__pod, uint8** address_pod, physx_PxDeserializationContext_Pod* context_pod);
		[LinkName("PxSerializer_delete")] public static extern void Serializer_delete(physx_PxSerializer_Pod* self__pod);
		[LinkName("PxPhysicsInsertionCallback_buildObjectFromData_mut")] public static extern physx_PxBase_Pod* PhysicsInsertionCallback_buildObjectFromData_mut(physx_PxPhysicsInsertionCallback_Pod* self__pod, uint32 type_pod, void* data);
		[LinkName("PxTaskManager_setCpuDispatcher_mut")] public static extern void TaskManager_setCpuDispatcher_mut(physx_PxTaskManager_Pod* self__pod, physx_PxCpuDispatcher_Pod* ref_pod);
		[LinkName("PxTaskManager_getCpuDispatcher")] public static extern physx_PxCpuDispatcher_Pod* TaskManager_getCpuDispatcher(physx_PxTaskManager_Pod* self__pod);
		[LinkName("PxTaskManager_resetDependencies_mut")] public static extern void TaskManager_resetDependencies_mut(physx_PxTaskManager_Pod* self__pod);
		[LinkName("PxTaskManager_startSimulation_mut")] public static extern void TaskManager_startSimulation_mut(physx_PxTaskManager_Pod* self__pod);
		[LinkName("PxTaskManager_stopSimulation_mut")] public static extern void TaskManager_stopSimulation_mut(physx_PxTaskManager_Pod* self__pod);
		[LinkName("PxTaskManager_taskCompleted_mut")] public static extern void TaskManager_taskCompleted_mut(physx_PxTaskManager_Pod* self__pod, physx_PxTask_Pod* task_pod);
		[LinkName("PxTaskManager_getNamedTask_mut")] public static extern uint32 TaskManager_getNamedTask_mut(physx_PxTaskManager_Pod* self__pod, char8* name);
		[LinkName("PxTaskManager_submitNamedTask_mut")] public static extern uint32 TaskManager_submitNamedTask_mut(physx_PxTaskManager_Pod* self__pod, physx_PxTask_Pod* task_pod, char8* name, uint32 type_pod);
		[LinkName("PxTaskManager_submitUnnamedTask_mut")] public static extern uint32 TaskManager_submitUnnamedTask_mut(physx_PxTaskManager_Pod* self__pod, physx_PxTask_Pod* task_pod, uint32 type_pod);
		[LinkName("PxTaskManager_getTaskFromID_mut")] public static extern physx_PxTask_Pod* TaskManager_getTaskFromID_mut(physx_PxTaskManager_Pod* self__pod, uint32 id);
		[LinkName("PxTaskManager_release_mut")] public static extern void TaskManager_release_mut(physx_PxTaskManager_Pod* self__pod);
		[LinkName("PxTaskManager_createTaskManager_mut")] public static extern physx_PxTaskManager_Pod* TaskManager_createTaskManager_mut(physx_PxErrorCallback_Pod* errorCallback_pod, physx_PxCpuDispatcher_Pod* anonymous_arg1_pod);
		[LinkName("PxCpuDispatcher_submitTask_mut")] public static extern void CpuDispatcher_submitTask_mut(physx_PxCpuDispatcher_Pod* self__pod, physx_PxBaseTask_Pod* task_pod);
		[LinkName("PxCpuDispatcher_getWorkerCount")] public static extern uint32 CpuDispatcher_getWorkerCount(physx_PxCpuDispatcher_Pod* self__pod);
		[LinkName("PxCpuDispatcher_delete")] public static extern void CpuDispatcher_delete(physx_PxCpuDispatcher_Pod* self__pod);
		[LinkName("PxBaseTask_run_mut")] public static extern void BaseTask_run_mut(physx_PxBaseTask_Pod* self__pod);
		[LinkName("PxBaseTask_getName")] public static extern char8* BaseTask_getName(physx_PxBaseTask_Pod* self__pod);
		[LinkName("PxBaseTask_addReference_mut")] public static extern void BaseTask_addReference_mut(physx_PxBaseTask_Pod* self__pod);
		[LinkName("PxBaseTask_removeReference_mut")] public static extern void BaseTask_removeReference_mut(physx_PxBaseTask_Pod* self__pod);
		[LinkName("PxBaseTask_getReference")] public static extern int32 BaseTask_getReference(physx_PxBaseTask_Pod* self__pod);
		[LinkName("PxBaseTask_release_mut")] public static extern void BaseTask_release_mut(physx_PxBaseTask_Pod* self__pod);
		[LinkName("PxBaseTask_getTaskManager")] public static extern physx_PxTaskManager_Pod* BaseTask_getTaskManager(physx_PxBaseTask_Pod* self__pod);
		[LinkName("PxBaseTask_setContextId_mut")] public static extern void BaseTask_setContextId_mut(physx_PxBaseTask_Pod* self__pod, uint64 id);
		[LinkName("PxBaseTask_getContextId")] public static extern uint64 BaseTask_getContextId(physx_PxBaseTask_Pod* self__pod);
		[LinkName("PxTask_release_mut")] public static extern void Task_release_mut(physx_PxTask_Pod* self__pod);
		[LinkName("PxTask_finishBefore_mut")] public static extern void Task_finishBefore_mut(physx_PxTask_Pod* self__pod, uint32 taskID);
		[LinkName("PxTask_startAfter_mut")] public static extern void Task_startAfter_mut(physx_PxTask_Pod* self__pod, uint32 taskID);
		[LinkName("PxTask_addReference_mut")] public static extern void Task_addReference_mut(physx_PxTask_Pod* self__pod);
		[LinkName("PxTask_removeReference_mut")] public static extern void Task_removeReference_mut(physx_PxTask_Pod* self__pod);
		[LinkName("PxTask_getReference")] public static extern int32 Task_getReference(physx_PxTask_Pod* self__pod);
		[LinkName("PxTask_getTaskID")] public static extern uint32 Task_getTaskID(physx_PxTask_Pod* self__pod);
		[LinkName("PxTask_submitted_mut")] public static extern void Task_submitted_mut(physx_PxTask_Pod* self__pod);
		[LinkName("PxLightCpuTask_setContinuation_mut")] public static extern void LightCpuTask_setContinuation_mut(physx_PxLightCpuTask_Pod* self__pod, physx_PxTaskManager_Pod* tm_pod, physx_PxBaseTask_Pod* c_pod);
		[LinkName("PxLightCpuTask_setContinuation_mut_1")] public static extern void LightCpuTask_setContinuation_mut_1(physx_PxLightCpuTask_Pod* self__pod, physx_PxBaseTask_Pod* c_pod);
		[LinkName("PxLightCpuTask_getContinuation")] public static extern physx_PxBaseTask_Pod* LightCpuTask_getContinuation(physx_PxLightCpuTask_Pod* self__pod);
		[LinkName("PxLightCpuTask_removeReference_mut")] public static extern void LightCpuTask_removeReference_mut(physx_PxLightCpuTask_Pod* self__pod);
		[LinkName("PxLightCpuTask_getReference")] public static extern int32 LightCpuTask_getReference(physx_PxLightCpuTask_Pod* self__pod);
		[LinkName("PxLightCpuTask_addReference_mut")] public static extern void LightCpuTask_addReference_mut(physx_PxLightCpuTask_Pod* self__pod);
		[LinkName("PxLightCpuTask_release_mut")] public static extern void LightCpuTask_release_mut(physx_PxLightCpuTask_Pod* self__pod);
		[LinkName("PxGeometry_getType")] public static extern int Geometry_getType(physx_PxGeometry_Pod* self__pod);
		[LinkName("PxBoxGeometry_new")] public static extern physx_PxBoxGeometry_Pod BoxGeometry_new();
		[LinkName("PxBoxGeometry_new_1")] public static extern physx_PxBoxGeometry_Pod BoxGeometry_new_1(float hx, float hy, float hz);
		[LinkName("PxBoxGeometry_new_2")] public static extern physx_PxBoxGeometry_Pod BoxGeometry_new_2(physx_PxVec3_Pod halfExtents__pod);
		[LinkName("PxBoxGeometry_isValid")] public static extern bool BoxGeometry_isValid(physx_PxBoxGeometry_Pod* self__pod);
		[LinkName("PxBoxGeometry_isValid_1")] public static extern bool BoxGeometry_isValid_1(physx_PxBoxGeometry_Pod* self__pod);
		[LinkName("PxBVHStructure_raycast")] public static extern uint32 BVHStructure_raycast(physx_PxBVHStructure_Pod* self__pod, physx_PxVec3_Pod* origin_pod, physx_PxVec3_Pod* unitDir_pod, float maxDist, uint32 maxHits, uint32* rayHits);
		[LinkName("PxBVHStructure_sweep")] public static extern uint32 BVHStructure_sweep(physx_PxBVHStructure_Pod* self__pod, physx_PxBounds3_Pod* aabb_pod, physx_PxVec3_Pod* unitDir_pod, float maxDist, uint32 maxHits, uint32* sweepHits);
		[LinkName("PxBVHStructure_overlap")] public static extern uint32 BVHStructure_overlap(physx_PxBVHStructure_Pod* self__pod, physx_PxBounds3_Pod* aabb_pod, uint32 maxHits, uint32* overlapHits);
		[LinkName("PxBVHStructure_getBounds")] public static extern physx_PxBounds3_Pod* BVHStructure_getBounds(physx_PxBVHStructure_Pod* self__pod);
		[LinkName("PxBVHStructure_getNbBounds")] public static extern uint32 BVHStructure_getNbBounds(physx_PxBVHStructure_Pod* self__pod);
		[LinkName("PxBVHStructure_getConcreteTypeName")] public static extern char8* BVHStructure_getConcreteTypeName(physx_PxBVHStructure_Pod* self__pod);
		[LinkName("PxCapsuleGeometry_new")] public static extern physx_PxCapsuleGeometry_Pod CapsuleGeometry_new();
		[LinkName("PxCapsuleGeometry_new_1")] public static extern physx_PxCapsuleGeometry_Pod CapsuleGeometry_new_1(float radius_, float halfHeight_);
		[LinkName("PxCapsuleGeometry_isValid")] public static extern bool CapsuleGeometry_isValid(physx_PxCapsuleGeometry_Pod* self__pod);
		[LinkName("PxCapsuleGeometry_isValid_1")] public static extern bool CapsuleGeometry_isValid_1(physx_PxCapsuleGeometry_Pod* self__pod);
		[LinkName("phys_PxTransformFromSegment")] public static extern physx_PxTransform_Pod TransformFromSegment(physx_PxVec3_Pod* p0_pod, physx_PxVec3_Pod* p1_pod, float* halfHeight);
		[LinkName("PxConvexMesh_getNbVertices")] public static extern uint32 ConvexMesh_getNbVertices(physx_PxConvexMesh_Pod* self__pod);
		[LinkName("PxConvexMesh_getVertices")] public static extern physx_PxVec3_Pod* ConvexMesh_getVertices(physx_PxConvexMesh_Pod* self__pod);
		[LinkName("PxConvexMesh_getIndexBuffer")] public static extern uint8* ConvexMesh_getIndexBuffer(physx_PxConvexMesh_Pod* self__pod);
		[LinkName("PxConvexMesh_getNbPolygons")] public static extern uint32 ConvexMesh_getNbPolygons(physx_PxConvexMesh_Pod* self__pod);
		[LinkName("PxConvexMesh_getPolygonData")] public static extern bool ConvexMesh_getPolygonData(physx_PxConvexMesh_Pod* self__pod, uint32 index, physx_PxHullPolygon_Pod* data_pod);
		[LinkName("PxConvexMesh_release_mut")] public static extern void ConvexMesh_release_mut(physx_PxConvexMesh_Pod* self__pod);
		[LinkName("PxConvexMesh_getReferenceCount")] public static extern uint32 ConvexMesh_getReferenceCount(physx_PxConvexMesh_Pod* self__pod);
		[LinkName("PxConvexMesh_acquireReference_mut")] public static extern void ConvexMesh_acquireReference_mut(physx_PxConvexMesh_Pod* self__pod);
		[LinkName("PxConvexMesh_getMassInformation")] public static extern void ConvexMesh_getMassInformation(physx_PxConvexMesh_Pod* self__pod, float* mass_pod, physx_PxMat33_Pod* localInertia_pod, physx_PxVec3_Pod* localCenterOfMass_pod);
		[LinkName("PxConvexMesh_getLocalBounds")] public static extern physx_PxBounds3_Pod ConvexMesh_getLocalBounds(physx_PxConvexMesh_Pod* self__pod);
		[LinkName("PxConvexMesh_getConcreteTypeName")] public static extern char8* ConvexMesh_getConcreteTypeName(physx_PxConvexMesh_Pod* self__pod);
		[LinkName("PxConvexMesh_isGpuCompatible")] public static extern bool ConvexMesh_isGpuCompatible(physx_PxConvexMesh_Pod* self__pod);
		[LinkName("PxMeshScale_new")] public static extern physx_PxMeshScale_Pod MeshScale_new();
		[LinkName("PxMeshScale_new_1")] public static extern physx_PxMeshScale_Pod MeshScale_new_1(float r);
		[LinkName("PxMeshScale_new_2")] public static extern physx_PxMeshScale_Pod MeshScale_new_2(physx_PxVec3_Pod* s_pod);
		[LinkName("PxMeshScale_new_3")] public static extern physx_PxMeshScale_Pod MeshScale_new_3(physx_PxVec3_Pod* s_pod, physx_PxQuat_Pod* r_pod);
		[LinkName("PxMeshScale_isIdentity")] public static extern bool MeshScale_isIdentity(physx_PxMeshScale_Pod* self__pod);
		[LinkName("PxMeshScale_getInverse")] public static extern physx_PxMeshScale_Pod MeshScale_getInverse(physx_PxMeshScale_Pod* self__pod);
		[LinkName("PxMeshScale_toMat33")] public static extern physx_PxMat33_Pod MeshScale_toMat33(physx_PxMeshScale_Pod* self__pod);
		[LinkName("PxMeshScale_hasNegativeDeterminant")] public static extern bool MeshScale_hasNegativeDeterminant(physx_PxMeshScale_Pod* self__pod);
		[LinkName("PxMeshScale_transform")] public static extern physx_PxVec3_Pod MeshScale_transform(physx_PxMeshScale_Pod* self__pod, physx_PxVec3_Pod* v_pod);
		[LinkName("PxMeshScale_isValidForTriangleMesh")] public static extern bool MeshScale_isValidForTriangleMesh(physx_PxMeshScale_Pod* self__pod);
		[LinkName("PxMeshScale_isValidForConvexMesh")] public static extern bool MeshScale_isValidForConvexMesh(physx_PxMeshScale_Pod* self__pod);
		[LinkName("PxConvexMeshGeometry_new")] public static extern physx_PxConvexMeshGeometry_Pod ConvexMeshGeometry_new();
		[LinkName("PxConvexMeshGeometry_new_1")] public static extern physx_PxConvexMeshGeometry_Pod ConvexMeshGeometry_new_1(physx_PxConvexMesh_Pod* mesh_pod, physx_PxMeshScale_Pod* scaling_pod, physx_PxConvexMeshGeometryFlags_Pod flags_pod);
		[LinkName("PxConvexMeshGeometry_isValid")] public static extern bool ConvexMeshGeometry_isValid(physx_PxConvexMeshGeometry_Pod* self__pod);
		[LinkName("PxConvexMeshGeometry_isValid_1")] public static extern bool ConvexMeshGeometry_isValid_1(physx_PxConvexMeshGeometry_Pod* self__pod);
		[LinkName("PxSphereGeometry_new")] public static extern physx_PxSphereGeometry_Pod SphereGeometry_new();
		[LinkName("PxSphereGeometry_new_1")] public static extern physx_PxSphereGeometry_Pod SphereGeometry_new_1(float ir);
		[LinkName("PxSphereGeometry_isValid")] public static extern bool SphereGeometry_isValid(physx_PxSphereGeometry_Pod* self__pod);
		[LinkName("PxSphereGeometry_isValid_1")] public static extern bool SphereGeometry_isValid_1(physx_PxSphereGeometry_Pod* self__pod);
		[LinkName("PxPlaneGeometry_new")] public static extern physx_PxPlaneGeometry_Pod PlaneGeometry_new();
		[LinkName("PxPlaneGeometry_isValid")] public static extern bool PlaneGeometry_isValid(physx_PxPlaneGeometry_Pod* self__pod);
		[LinkName("PxPlaneGeometry_isValid_1")] public static extern bool PlaneGeometry_isValid_1(physx_PxPlaneGeometry_Pod* self__pod);
		[LinkName("phys_PxTransformFromPlaneEquation")] public static extern physx_PxTransform_Pod TransformFromPlaneEquation(physx_PxPlane_Pod* plane_pod);
		[LinkName("phys_PxPlaneEquationFromTransform")] public static extern physx_PxPlane_Pod PlaneEquationFromTransform(physx_PxTransform_Pod* transform_pod);
		[LinkName("PxTriangleMeshGeometry_new")] public static extern physx_PxTriangleMeshGeometry_Pod TriangleMeshGeometry_new();
		[LinkName("PxTriangleMeshGeometry_new_1")] public static extern physx_PxTriangleMeshGeometry_Pod TriangleMeshGeometry_new_1(physx_PxTriangleMesh_Pod* mesh_pod, physx_PxMeshScale_Pod* scaling_pod, physx_PxMeshGeometryFlags_Pod flags_pod);
		[LinkName("PxTriangleMeshGeometry_isValid")] public static extern bool TriangleMeshGeometry_isValid(physx_PxTriangleMeshGeometry_Pod* self__pod);
		[LinkName("PxTriangleMeshGeometry_isValid_1")] public static extern bool TriangleMeshGeometry_isValid_1(physx_PxTriangleMeshGeometry_Pod* self__pod);
		[LinkName("PxHeightFieldGeometry_new")] public static extern physx_PxHeightFieldGeometry_Pod HeightFieldGeometry_new();
		[LinkName("PxHeightFieldGeometry_new_1")] public static extern physx_PxHeightFieldGeometry_Pod HeightFieldGeometry_new_1(physx_PxHeightField_Pod* hf_pod, physx_PxMeshGeometryFlags_Pod flags_pod, float heightScale_, float rowScale_, float columnScale_);
		[LinkName("PxHeightFieldGeometry_isValid")] public static extern bool HeightFieldGeometry_isValid(physx_PxHeightFieldGeometry_Pod* self__pod);
		[LinkName("PxHeightFieldGeometry_isValid_1")] public static extern bool HeightFieldGeometry_isValid_1(physx_PxHeightFieldGeometry_Pod* self__pod);
		[LinkName("PxGeometryHolder_getType")] public static extern int GeometryHolder_getType(physx_PxGeometryHolder_Pod* self__pod);
		[LinkName("PxGeometryHolder_any_mut")] public static extern physx_PxGeometry_Pod* GeometryHolder_any_mut(physx_PxGeometryHolder_Pod* self__pod);
		[LinkName("PxGeometryHolder_any")] public static extern physx_PxGeometry_Pod* GeometryHolder_any(physx_PxGeometryHolder_Pod* self__pod);
		[LinkName("PxGeometryHolder_sphere_mut")] public static extern physx_PxSphereGeometry_Pod* GeometryHolder_sphere_mut(physx_PxGeometryHolder_Pod* self__pod);
		[LinkName("PxGeometryHolder_sphere")] public static extern physx_PxSphereGeometry_Pod* GeometryHolder_sphere(physx_PxGeometryHolder_Pod* self__pod);
		[LinkName("PxGeometryHolder_plane_mut")] public static extern physx_PxPlaneGeometry_Pod* GeometryHolder_plane_mut(physx_PxGeometryHolder_Pod* self__pod);
		[LinkName("PxGeometryHolder_plane")] public static extern physx_PxPlaneGeometry_Pod* GeometryHolder_plane(physx_PxGeometryHolder_Pod* self__pod);
		[LinkName("PxGeometryHolder_capsule_mut")] public static extern physx_PxCapsuleGeometry_Pod* GeometryHolder_capsule_mut(physx_PxGeometryHolder_Pod* self__pod);
		[LinkName("PxGeometryHolder_capsule")] public static extern physx_PxCapsuleGeometry_Pod* GeometryHolder_capsule(physx_PxGeometryHolder_Pod* self__pod);
		[LinkName("PxGeometryHolder_box_mut")] public static extern physx_PxBoxGeometry_Pod* GeometryHolder_box_mut(physx_PxGeometryHolder_Pod* self__pod);
		[LinkName("PxGeometryHolder_box")] public static extern physx_PxBoxGeometry_Pod* GeometryHolder_box(physx_PxGeometryHolder_Pod* self__pod);
		[LinkName("PxGeometryHolder_convexMesh_mut")] public static extern physx_PxConvexMeshGeometry_Pod* GeometryHolder_convexMesh_mut(physx_PxGeometryHolder_Pod* self__pod);
		[LinkName("PxGeometryHolder_convexMesh")] public static extern physx_PxConvexMeshGeometry_Pod* GeometryHolder_convexMesh(physx_PxGeometryHolder_Pod* self__pod);
		[LinkName("PxGeometryHolder_triangleMesh_mut")] public static extern physx_PxTriangleMeshGeometry_Pod* GeometryHolder_triangleMesh_mut(physx_PxGeometryHolder_Pod* self__pod);
		[LinkName("PxGeometryHolder_triangleMesh")] public static extern physx_PxTriangleMeshGeometry_Pod* GeometryHolder_triangleMesh(physx_PxGeometryHolder_Pod* self__pod);
		[LinkName("PxGeometryHolder_heightField_mut")] public static extern physx_PxHeightFieldGeometry_Pod* GeometryHolder_heightField_mut(physx_PxGeometryHolder_Pod* self__pod);
		[LinkName("PxGeometryHolder_heightField")] public static extern physx_PxHeightFieldGeometry_Pod* GeometryHolder_heightField(physx_PxGeometryHolder_Pod* self__pod);
		[LinkName("PxGeometryHolder_storeAny_mut")] public static extern void GeometryHolder_storeAny_mut(physx_PxGeometryHolder_Pod* self__pod, physx_PxGeometry_Pod* geometry_pod);
		[LinkName("PxGeometryHolder_new")] public static extern physx_PxGeometryHolder_Pod GeometryHolder_new();
		[LinkName("PxGeometryHolder_new_1")] public static extern physx_PxGeometryHolder_Pod GeometryHolder_new_1(physx_PxGeometry_Pod* geometry_pod);
		[LinkName("PxActorShape_new")] public static extern physx_PxActorShape_Pod ActorShape_new();
		[LinkName("PxActorShape_new_1")] public static extern physx_PxActorShape_Pod ActorShape_new_1(physx_PxRigidActor_Pod* a_pod, physx_PxShape_Pod* s_pod);
		[LinkName("PxQueryHit_new")] public static extern physx_PxQueryHit_Pod QueryHit_new();
		[LinkName("PxLocationHit_new")] public static extern physx_PxLocationHit_Pod LocationHit_new();
		[LinkName("PxLocationHit_hadInitialOverlap")] public static extern bool LocationHit_hadInitialOverlap(physx_PxLocationHit_Pod* self__pod);
		[LinkName("PxRaycastHit_new")] public static extern physx_PxRaycastHit_Pod RaycastHit_new();
		[LinkName("PxSweepHit_new")] public static extern physx_PxSweepHit_Pod SweepHit_new();
		[LinkName("PxGeometryQuery_sweep_mut")] public static extern bool GeometryQuery_sweep_mut(physx_PxVec3_Pod* unitDir_pod, float maxDist, physx_PxGeometry_Pod* geom0_pod, physx_PxTransform_Pod* pose0_pod, physx_PxGeometry_Pod* geom1_pod, physx_PxTransform_Pod* pose1_pod, physx_PxSweepHit_Pod* sweepHit_pod, physx_PxHitFlags_Pod hitFlags_pod, float inflation);
		[LinkName("PxGeometryQuery_overlap_mut")] public static extern bool GeometryQuery_overlap_mut(physx_PxGeometry_Pod* geom0_pod, physx_PxTransform_Pod* pose0_pod, physx_PxGeometry_Pod* geom1_pod, physx_PxTransform_Pod* pose1_pod);
		[LinkName("PxGeometryQuery_raycast_mut")] public static extern uint32 GeometryQuery_raycast_mut(physx_PxVec3_Pod* origin_pod, physx_PxVec3_Pod* unitDir_pod, physx_PxGeometry_Pod* geom_pod, physx_PxTransform_Pod* pose_pod, float maxDist, physx_PxHitFlags_Pod hitFlags_pod, uint32 maxHits, physx_PxRaycastHit_Pod* rayHits_pod);
		[LinkName("PxGeometryQuery_computePenetration_mut")] public static extern bool GeometryQuery_computePenetration_mut(physx_PxVec3_Pod* direction_pod, float* depth_pod, physx_PxGeometry_Pod* geom0_pod, physx_PxTransform_Pod* pose0_pod, physx_PxGeometry_Pod* geom1_pod, physx_PxTransform_Pod* pose1_pod);
		[LinkName("PxGeometryQuery_pointDistance_mut")] public static extern float GeometryQuery_pointDistance_mut(physx_PxVec3_Pod* point_pod, physx_PxGeometry_Pod* geom_pod, physx_PxTransform_Pod* pose_pod, physx_PxVec3_Pod* closestPoint_pod);
		[LinkName("PxGeometryQuery_getWorldBounds_mut")] public static extern physx_PxBounds3_Pod GeometryQuery_getWorldBounds_mut(physx_PxGeometry_Pod* geom_pod, physx_PxTransform_Pod* pose_pod, float inflation);
		[LinkName("PxGeometryQuery_isValid_mut")] public static extern bool GeometryQuery_isValid_mut(physx_PxGeometry_Pod* geom_pod);
		[LinkName("PxHeightFieldSample_tessFlag")] public static extern uint8 HeightFieldSample_tessFlag(physx_PxHeightFieldSample_Pod* self__pod);
		[LinkName("PxHeightFieldSample_setTessFlag_mut")] public static extern void HeightFieldSample_setTessFlag_mut(physx_PxHeightFieldSample_Pod* self__pod);
		[LinkName("PxHeightFieldSample_clearTessFlag_mut")] public static extern void HeightFieldSample_clearTessFlag_mut(physx_PxHeightFieldSample_Pod* self__pod);
		[LinkName("PxHeightField_release_mut")] public static extern void HeightField_release_mut(physx_PxHeightField_Pod* self__pod);
		[LinkName("PxHeightField_saveCells")] public static extern uint32 HeightField_saveCells(physx_PxHeightField_Pod* self__pod, void* destBuffer, uint32 destBufferSize);
		[LinkName("PxHeightField_modifySamples_mut")] public static extern bool HeightField_modifySamples_mut(physx_PxHeightField_Pod* self__pod, int32 startCol, int32 startRow, physx_PxHeightFieldDesc_Pod* subfieldDesc_pod, bool shrinkBounds);
		[LinkName("PxHeightField_getNbRows")] public static extern uint32 HeightField_getNbRows(physx_PxHeightField_Pod* self__pod);
		[LinkName("PxHeightField_getNbColumns")] public static extern uint32 HeightField_getNbColumns(physx_PxHeightField_Pod* self__pod);
		[LinkName("PxHeightField_getFormat")] public static extern uint32 HeightField_getFormat(physx_PxHeightField_Pod* self__pod);
		[LinkName("PxHeightField_getSampleStride")] public static extern uint32 HeightField_getSampleStride(physx_PxHeightField_Pod* self__pod);
		[LinkName("PxHeightField_getConvexEdgeThreshold")] public static extern float HeightField_getConvexEdgeThreshold(physx_PxHeightField_Pod* self__pod);
		[LinkName("PxHeightField_getFlags")] public static extern physx_PxHeightFieldFlags_Pod HeightField_getFlags(physx_PxHeightField_Pod* self__pod);
		[LinkName("PxHeightField_getHeight")] public static extern float HeightField_getHeight(physx_PxHeightField_Pod* self__pod, float x, float z);
		[LinkName("PxHeightField_getReferenceCount")] public static extern uint32 HeightField_getReferenceCount(physx_PxHeightField_Pod* self__pod);
		[LinkName("PxHeightField_acquireReference_mut")] public static extern void HeightField_acquireReference_mut(physx_PxHeightField_Pod* self__pod);
		[LinkName("PxHeightField_getTriangleMaterialIndex")] public static extern uint16 HeightField_getTriangleMaterialIndex(physx_PxHeightField_Pod* self__pod, uint32 triangleIndex);
		[LinkName("PxHeightField_getTriangleNormal")] public static extern physx_PxVec3_Pod HeightField_getTriangleNormal(physx_PxHeightField_Pod* self__pod, uint32 triangleIndex);
		[LinkName("PxHeightField_getSample")] public static extern physx_PxHeightFieldSample_Pod* HeightField_getSample(physx_PxHeightField_Pod* self__pod, uint32 row, uint32 column);
		[LinkName("PxHeightField_getTimestamp")] public static extern uint32 HeightField_getTimestamp(physx_PxHeightField_Pod* self__pod);
		[LinkName("PxHeightField_getConcreteTypeName")] public static extern char8* HeightField_getConcreteTypeName(physx_PxHeightField_Pod* self__pod);
		[LinkName("PxHeightFieldDesc_new")] public static extern physx_PxHeightFieldDesc_Pod HeightFieldDesc_new();
		[LinkName("PxHeightFieldDesc_setToDefault_mut")] public static extern void HeightFieldDesc_setToDefault_mut(physx_PxHeightFieldDesc_Pod* self__pod);
		[LinkName("PxHeightFieldDesc_isValid")] public static extern bool HeightFieldDesc_isValid(physx_PxHeightFieldDesc_Pod* self__pod);
		[LinkName("PxHeightFieldDesc_new_1")] public static extern physx_PxHeightFieldDesc_Pod HeightFieldDesc_new_1();
		[LinkName("PxHeightFieldDesc_setToDefault_mut_1")] public static extern void HeightFieldDesc_setToDefault_mut_1(physx_PxHeightFieldDesc_Pod* self__pod);
		[LinkName("PxHeightFieldDesc_isValid_1")] public static extern bool HeightFieldDesc_isValid_1(physx_PxHeightFieldDesc_Pod* self__pod);
		[LinkName("PxMeshQuery_getTriangle_mut")] public static extern void MeshQuery_getTriangle_mut(physx_PxTriangleMeshGeometry_Pod* triGeom_pod, physx_PxTransform_Pod* transform_pod, uint32 triangleIndex, physx_PxTriangle_Pod* triangle_pod, uint32* vertexIndices, uint32* adjacencyIndices);
		[LinkName("PxMeshQuery_getTriangle_mut_1")] public static extern void MeshQuery_getTriangle_mut_1(physx_PxHeightFieldGeometry_Pod* hfGeom_pod, physx_PxTransform_Pod* transform_pod, uint32 triangleIndex, physx_PxTriangle_Pod* triangle_pod, uint32* vertexIndices, uint32* adjacencyIndices);
		[LinkName("PxMeshQuery_findOverlapTriangleMesh_mut")] public static extern uint32 MeshQuery_findOverlapTriangleMesh_mut(physx_PxGeometry_Pod* geom_pod, physx_PxTransform_Pod* geomPose_pod, physx_PxTriangleMeshGeometry_Pod* meshGeom_pod, physx_PxTransform_Pod* meshPose_pod, uint32* results, uint32 maxResults, uint32 startIndex, bool* overflow_pod);
		[LinkName("PxMeshQuery_findOverlapHeightField_mut")] public static extern uint32 MeshQuery_findOverlapHeightField_mut(physx_PxGeometry_Pod* geom_pod, physx_PxTransform_Pod* geomPose_pod, physx_PxHeightFieldGeometry_Pod* hfGeom_pod, physx_PxTransform_Pod* hfPose_pod, uint32* results, uint32 maxResults, uint32 startIndex, bool* overflow_pod);
		[LinkName("PxMeshQuery_sweep_mut")] public static extern bool MeshQuery_sweep_mut(physx_PxVec3_Pod* unitDir_pod, float distance, physx_PxGeometry_Pod* geom_pod, physx_PxTransform_Pod* pose_pod, uint32 triangleCount, physx_PxTriangle_Pod* triangles_pod, physx_PxSweepHit_Pod* sweepHit_pod, physx_PxHitFlags_Pod hitFlags_pod, uint32* cachedIndex, float inflation, bool doubleSided);
		[LinkName("PxSimpleTriangleMesh_new")] public static extern physx_PxSimpleTriangleMesh_Pod SimpleTriangleMesh_new();
		[LinkName("PxSimpleTriangleMesh_setToDefault_mut")] public static extern void SimpleTriangleMesh_setToDefault_mut(physx_PxSimpleTriangleMesh_Pod* self__pod);
		[LinkName("PxSimpleTriangleMesh_isValid")] public static extern bool SimpleTriangleMesh_isValid(physx_PxSimpleTriangleMesh_Pod* self__pod);
		[LinkName("PxSimpleTriangleMesh_new_1")] public static extern physx_PxSimpleTriangleMesh_Pod SimpleTriangleMesh_new_1();
		[LinkName("PxSimpleTriangleMesh_setToDefault_mut_1")] public static extern void SimpleTriangleMesh_setToDefault_mut_1(physx_PxSimpleTriangleMesh_Pod* self__pod);
		[LinkName("PxSimpleTriangleMesh_isValid_1")] public static extern bool SimpleTriangleMesh_isValid_1(physx_PxSimpleTriangleMesh_Pod* self__pod);
		[LinkName("PxTriangle_new_alloc")] public static extern physx_PxTriangle_Pod* Triangle_new_alloc();
		[LinkName("PxTriangle_new_alloc_1")] public static extern physx_PxTriangle_Pod* Triangle_new_alloc_1(physx_PxVec3_Pod* p0_pod, physx_PxVec3_Pod* p1_pod, physx_PxVec3_Pod* p2_pod);
		[LinkName("PxTriangle_delete")] public static extern void Triangle_delete(physx_PxTriangle_Pod* self__pod);
		[LinkName("PxTriangle_normal")] public static extern void Triangle_normal(physx_PxTriangle_Pod* self__pod, physx_PxVec3_Pod* _normal_pod);
		[LinkName("PxTriangle_denormalizedNormal")] public static extern void Triangle_denormalizedNormal(physx_PxTriangle_Pod* self__pod, physx_PxVec3_Pod* _normal_pod);
		[LinkName("PxTriangle_area")] public static extern float Triangle_area(physx_PxTriangle_Pod* self__pod);
		[LinkName("PxTriangle_pointFromUV")] public static extern physx_PxVec3_Pod Triangle_pointFromUV(physx_PxTriangle_Pod* self__pod, float u, float v);
		[LinkName("PxTriangleMesh_getNbVertices")] public static extern uint32 TriangleMesh_getNbVertices(physx_PxTriangleMesh_Pod* self__pod);
		[LinkName("PxTriangleMesh_getVertices")] public static extern physx_PxVec3_Pod* TriangleMesh_getVertices(physx_PxTriangleMesh_Pod* self__pod);
		[LinkName("PxTriangleMesh_getVerticesForModification_mut")] public static extern physx_PxVec3_Pod* TriangleMesh_getVerticesForModification_mut(physx_PxTriangleMesh_Pod* self__pod);
		[LinkName("PxTriangleMesh_refitBVH_mut")] public static extern physx_PxBounds3_Pod TriangleMesh_refitBVH_mut(physx_PxTriangleMesh_Pod* self__pod);
		[LinkName("PxTriangleMesh_getNbTriangles")] public static extern uint32 TriangleMesh_getNbTriangles(physx_PxTriangleMesh_Pod* self__pod);
		[LinkName("PxTriangleMesh_getTriangles")] public static extern void* TriangleMesh_getTriangles(physx_PxTriangleMesh_Pod* self__pod);
		[LinkName("PxTriangleMesh_getTriangleMeshFlags")] public static extern physx_PxTriangleMeshFlags_Pod TriangleMesh_getTriangleMeshFlags(physx_PxTriangleMesh_Pod* self__pod);
		[LinkName("PxTriangleMesh_getTrianglesRemap")] public static extern uint32* TriangleMesh_getTrianglesRemap(physx_PxTriangleMesh_Pod* self__pod);
		[LinkName("PxTriangleMesh_release_mut")] public static extern void TriangleMesh_release_mut(physx_PxTriangleMesh_Pod* self__pod);
		[LinkName("PxTriangleMesh_getTriangleMaterialIndex")] public static extern uint16 TriangleMesh_getTriangleMaterialIndex(physx_PxTriangleMesh_Pod* self__pod, uint32 triangleIndex);
		[LinkName("PxTriangleMesh_getLocalBounds")] public static extern physx_PxBounds3_Pod TriangleMesh_getLocalBounds(physx_PxTriangleMesh_Pod* self__pod);
		[LinkName("PxTriangleMesh_getReferenceCount")] public static extern uint32 TriangleMesh_getReferenceCount(physx_PxTriangleMesh_Pod* self__pod);
		[LinkName("PxTriangleMesh_acquireReference_mut")] public static extern void TriangleMesh_acquireReference_mut(physx_PxTriangleMesh_Pod* self__pod);
		[LinkName("PxActor_release_mut")] public static extern void Actor_release_mut(physx_PxActor_Pod* self__pod);
		[LinkName("PxActor_getType")] public static extern uint32 Actor_getType(physx_PxActor_Pod* self__pod);
		[LinkName("PxActor_getScene")] public static extern physx_PxScene_Pod* Actor_getScene(physx_PxActor_Pod* self__pod);
		[LinkName("PxActor_setName_mut")] public static extern void Actor_setName_mut(physx_PxActor_Pod* self__pod, char8* name);
		[LinkName("PxActor_getName")] public static extern char8* Actor_getName(physx_PxActor_Pod* self__pod);
		[LinkName("PxActor_getWorldBounds")] public static extern physx_PxBounds3_Pod Actor_getWorldBounds(physx_PxActor_Pod* self__pod, float inflation);
		[LinkName("PxActor_setActorFlag_mut")] public static extern void Actor_setActorFlag_mut(physx_PxActor_Pod* self__pod, uint32 flag_pod, bool value);
		[LinkName("PxActor_setActorFlags_mut")] public static extern void Actor_setActorFlags_mut(physx_PxActor_Pod* self__pod, physx_PxActorFlags_Pod inFlags_pod);
		[LinkName("PxActor_getActorFlags")] public static extern physx_PxActorFlags_Pod Actor_getActorFlags(physx_PxActor_Pod* self__pod);
		[LinkName("PxActor_setDominanceGroup_mut")] public static extern void Actor_setDominanceGroup_mut(physx_PxActor_Pod* self__pod, uint8 dominanceGroup);
		[LinkName("PxActor_getDominanceGroup")] public static extern uint8 Actor_getDominanceGroup(physx_PxActor_Pod* self__pod);
		[LinkName("PxActor_setOwnerClient_mut")] public static extern void Actor_setOwnerClient_mut(physx_PxActor_Pod* self__pod, uint8 inClient);
		[LinkName("PxActor_getOwnerClient")] public static extern uint8 Actor_getOwnerClient(physx_PxActor_Pod* self__pod);
		[LinkName("PxActor_getAggregate")] public static extern physx_PxAggregate_Pod* Actor_getAggregate(physx_PxActor_Pod* self__pod);
		[LinkName("PxAggregate_release_mut")] public static extern void Aggregate_release_mut(physx_PxAggregate_Pod* self__pod);
		[LinkName("PxAggregate_addActor_mut")] public static extern bool Aggregate_addActor_mut(physx_PxAggregate_Pod* self__pod, physx_PxActor_Pod* actor_pod, physx_PxBVHStructure_Pod* bvhStructure_pod);
		[LinkName("PxAggregate_removeActor_mut")] public static extern bool Aggregate_removeActor_mut(physx_PxAggregate_Pod* self__pod, physx_PxActor_Pod* actor_pod);
		[LinkName("PxAggregate_addArticulation_mut")] public static extern bool Aggregate_addArticulation_mut(physx_PxAggregate_Pod* self__pod, physx_PxArticulationBase_Pod* articulation_pod);
		[LinkName("PxAggregate_removeArticulation_mut")] public static extern bool Aggregate_removeArticulation_mut(physx_PxAggregate_Pod* self__pod, physx_PxArticulationBase_Pod* articulation_pod);
		[LinkName("PxAggregate_getNbActors")] public static extern uint32 Aggregate_getNbActors(physx_PxAggregate_Pod* self__pod);
		[LinkName("PxAggregate_getMaxNbActors")] public static extern uint32 Aggregate_getMaxNbActors(physx_PxAggregate_Pod* self__pod);
		[LinkName("PxAggregate_getActors")] public static extern uint32 Aggregate_getActors(physx_PxAggregate_Pod* self__pod, physx_PxActor_Pod** userBuffer_pod, uint32 bufferSize, uint32 startIndex);
		[LinkName("PxAggregate_getScene_mut")] public static extern physx_PxScene_Pod* Aggregate_getScene_mut(physx_PxAggregate_Pod* self__pod);
		[LinkName("PxAggregate_getSelfCollision")] public static extern bool Aggregate_getSelfCollision(physx_PxAggregate_Pod* self__pod);
		[LinkName("PxAggregate_getConcreteTypeName")] public static extern char8* Aggregate_getConcreteTypeName(physx_PxAggregate_Pod* self__pod);
		[LinkName("PxArticulationBase_getScene")] public static extern physx_PxScene_Pod* ArticulationBase_getScene(physx_PxArticulationBase_Pod* self__pod);
		[LinkName("PxArticulationBase_setSolverIterationCounts_mut")] public static extern void ArticulationBase_setSolverIterationCounts_mut(physx_PxArticulationBase_Pod* self__pod, uint32 minPositionIters, uint32 minVelocityIters);
		[LinkName("PxArticulationBase_getSolverIterationCounts")] public static extern void ArticulationBase_getSolverIterationCounts(physx_PxArticulationBase_Pod* self__pod, uint32* minPositionIters_pod, uint32* minVelocityIters_pod);
		[LinkName("PxArticulationBase_isSleeping")] public static extern bool ArticulationBase_isSleeping(physx_PxArticulationBase_Pod* self__pod);
		[LinkName("PxArticulationBase_setSleepThreshold_mut")] public static extern void ArticulationBase_setSleepThreshold_mut(physx_PxArticulationBase_Pod* self__pod, float threshold);
		[LinkName("PxArticulationBase_getSleepThreshold")] public static extern float ArticulationBase_getSleepThreshold(physx_PxArticulationBase_Pod* self__pod);
		[LinkName("PxArticulationBase_setStabilizationThreshold_mut")] public static extern void ArticulationBase_setStabilizationThreshold_mut(physx_PxArticulationBase_Pod* self__pod, float threshold);
		[LinkName("PxArticulationBase_getStabilizationThreshold")] public static extern float ArticulationBase_getStabilizationThreshold(physx_PxArticulationBase_Pod* self__pod);
		[LinkName("PxArticulationBase_setWakeCounter_mut")] public static extern void ArticulationBase_setWakeCounter_mut(physx_PxArticulationBase_Pod* self__pod, float wakeCounterValue);
		[LinkName("PxArticulationBase_getWakeCounter")] public static extern float ArticulationBase_getWakeCounter(physx_PxArticulationBase_Pod* self__pod);
		[LinkName("PxArticulationBase_wakeUp_mut")] public static extern void ArticulationBase_wakeUp_mut(physx_PxArticulationBase_Pod* self__pod);
		[LinkName("PxArticulationBase_putToSleep_mut")] public static extern void ArticulationBase_putToSleep_mut(physx_PxArticulationBase_Pod* self__pod);
		[LinkName("PxArticulationBase_createLink_mut")] public static extern physx_PxArticulationLink_Pod* ArticulationBase_createLink_mut(physx_PxArticulationBase_Pod* self__pod, physx_PxArticulationLink_Pod* parent_pod, physx_PxTransform_Pod* pose_pod);
		[LinkName("PxArticulationBase_getNbLinks")] public static extern uint32 ArticulationBase_getNbLinks(physx_PxArticulationBase_Pod* self__pod);
		[LinkName("PxArticulationBase_getLinks")] public static extern uint32 ArticulationBase_getLinks(physx_PxArticulationBase_Pod* self__pod, physx_PxArticulationLink_Pod** userBuffer_pod, uint32 bufferSize, uint32 startIndex);
		[LinkName("PxArticulationBase_setName_mut")] public static extern void ArticulationBase_setName_mut(physx_PxArticulationBase_Pod* self__pod, char8* name);
		[LinkName("PxArticulationBase_getName")] public static extern char8* ArticulationBase_getName(physx_PxArticulationBase_Pod* self__pod);
		[LinkName("PxArticulationBase_getWorldBounds")] public static extern physx_PxBounds3_Pod ArticulationBase_getWorldBounds(physx_PxArticulationBase_Pod* self__pod, float inflation);
		[LinkName("PxArticulationBase_getAggregate")] public static extern physx_PxAggregate_Pod* ArticulationBase_getAggregate(physx_PxArticulationBase_Pod* self__pod);
		[LinkName("PxArticulationBase_getImpl_mut")] public static extern physx_PxArticulationImpl_Pod* ArticulationBase_getImpl_mut(physx_PxArticulationBase_Pod* self__pod);
		[LinkName("PxArticulationBase_getImpl")] public static extern physx_PxArticulationImpl_Pod* ArticulationBase_getImpl(physx_PxArticulationBase_Pod* self__pod);
		[LinkName("PxArticulationBase_createArticulationJoint_mut")] public static extern physx_PxArticulationJointBase_Pod* ArticulationBase_createArticulationJoint_mut(physx_PxArticulationBase_Pod* self__pod, physx_PxArticulationLink_Pod* parent_pod, physx_PxTransform_Pod* parentFrame_pod, physx_PxArticulationLink_Pod* child_pod, physx_PxTransform_Pod* childFrame_pod);
		[LinkName("PxArticulationBase_releaseArticulationJoint_mut")] public static extern void ArticulationBase_releaseArticulationJoint_mut(physx_PxArticulationBase_Pod* self__pod, physx_PxArticulationJointBase_Pod* joint_pod);
		[LinkName("PxArticulation_release_mut")] public static extern void Articulation_release_mut(physx_PxArticulation_Pod* self__pod);
		[LinkName("PxArticulation_setMaxProjectionIterations_mut")] public static extern void Articulation_setMaxProjectionIterations_mut(physx_PxArticulation_Pod* self__pod, uint32 iterations);
		[LinkName("PxArticulation_getMaxProjectionIterations")] public static extern uint32 Articulation_getMaxProjectionIterations(physx_PxArticulation_Pod* self__pod);
		[LinkName("PxArticulation_setSeparationTolerance_mut")] public static extern void Articulation_setSeparationTolerance_mut(physx_PxArticulation_Pod* self__pod, float tolerance);
		[LinkName("PxArticulation_getSeparationTolerance")] public static extern float Articulation_getSeparationTolerance(physx_PxArticulation_Pod* self__pod);
		[LinkName("PxArticulation_setInternalDriveIterations_mut")] public static extern void Articulation_setInternalDriveIterations_mut(physx_PxArticulation_Pod* self__pod, uint32 iterations);
		[LinkName("PxArticulation_getInternalDriveIterations")] public static extern uint32 Articulation_getInternalDriveIterations(physx_PxArticulation_Pod* self__pod);
		[LinkName("PxArticulation_setExternalDriveIterations_mut")] public static extern void Articulation_setExternalDriveIterations_mut(physx_PxArticulation_Pod* self__pod, uint32 iterations);
		[LinkName("PxArticulation_getExternalDriveIterations")] public static extern uint32 Articulation_getExternalDriveIterations(physx_PxArticulation_Pod* self__pod);
		[LinkName("PxArticulation_createDriveCache")] public static extern physx_PxArticulationDriveCache_Pod* Articulation_createDriveCache(physx_PxArticulation_Pod* self__pod, float compliance, uint32 driveIterations);
		[LinkName("PxArticulation_updateDriveCache")] public static extern void Articulation_updateDriveCache(physx_PxArticulation_Pod* self__pod, physx_PxArticulationDriveCache_Pod* driveCache_pod, float compliance, uint32 driveIterations);
		[LinkName("PxArticulation_releaseDriveCache")] public static extern void Articulation_releaseDriveCache(physx_PxArticulation_Pod* self__pod, physx_PxArticulationDriveCache_Pod* driveCache_pod);
		[LinkName("PxArticulation_applyImpulse_mut")] public static extern void Articulation_applyImpulse_mut(physx_PxArticulation_Pod* self__pod, physx_PxArticulationLink_Pod* link_pod, physx_PxArticulationDriveCache_Pod* driveCache_pod, physx_PxVec3_Pod* linearImpulse_pod, physx_PxVec3_Pod* angularImpulse_pod);
		[LinkName("PxArticulation_computeImpulseResponse")] public static extern void Articulation_computeImpulseResponse(physx_PxArticulation_Pod* self__pod, physx_PxArticulationLink_Pod* link_pod, physx_PxVec3_Pod* linearResponse_pod, physx_PxVec3_Pod* angularResponse_pod, physx_PxArticulationDriveCache_Pod* driveCache_pod, physx_PxVec3_Pod* linearImpulse_pod, physx_PxVec3_Pod* angularImpulse_pod);
		[LinkName("PxConstraintInvMassScale_new")] public static extern physx_PxConstraintInvMassScale_Pod ConstraintInvMassScale_new();
		[LinkName("PxConstraintInvMassScale_new_1")] public static extern physx_PxConstraintInvMassScale_Pod ConstraintInvMassScale_new_1(float lin0, float ang0, float lin1, float ang1);
		[LinkName("PxConstraintVisualizer_visualizeJointFrames_mut")] public static extern void ConstraintVisualizer_visualizeJointFrames_mut(physx_PxConstraintVisualizer_Pod* self__pod, physx_PxTransform_Pod* parent_pod, physx_PxTransform_Pod* child_pod);
		[LinkName("PxConstraintVisualizer_visualizeLinearLimit_mut")] public static extern void ConstraintVisualizer_visualizeLinearLimit_mut(physx_PxConstraintVisualizer_Pod* self__pod, physx_PxTransform_Pod* t0_pod, physx_PxTransform_Pod* t1_pod, float value, bool active);
		[LinkName("PxConstraintVisualizer_visualizeAngularLimit_mut")] public static extern void ConstraintVisualizer_visualizeAngularLimit_mut(physx_PxConstraintVisualizer_Pod* self__pod, physx_PxTransform_Pod* t0_pod, float lower, float upper, bool active);
		[LinkName("PxConstraintVisualizer_visualizeLimitCone_mut")] public static extern void ConstraintVisualizer_visualizeLimitCone_mut(physx_PxConstraintVisualizer_Pod* self__pod, physx_PxTransform_Pod* t_pod, float tanQSwingY, float tanQSwingZ, bool active);
		[LinkName("PxConstraintVisualizer_visualizeDoubleCone_mut")] public static extern void ConstraintVisualizer_visualizeDoubleCone_mut(physx_PxConstraintVisualizer_Pod* self__pod, physx_PxTransform_Pod* t_pod, float angle, bool active);
		[LinkName("PxConstraintVisualizer_visualizeLine_mut")] public static extern void ConstraintVisualizer_visualizeLine_mut(physx_PxConstraintVisualizer_Pod* self__pod, physx_PxVec3_Pod* p0_pod, physx_PxVec3_Pod* p1_pod, uint32 color);
		[LinkName("PxConstraintConnector_prepareData_mut")] public static extern void* ConstraintConnector_prepareData_mut(physx_PxConstraintConnector_Pod* self__pod);
		[LinkName("PxConstraintConnector_updatePvdProperties")] public static extern bool ConstraintConnector_updatePvdProperties(physx_PxConstraintConnector_Pod* self__pod, physx_pvdsdk_PvdDataStream_Pod* pvdConnection_pod, physx_PxConstraint_Pod* c_pod, uint32 updateType_pod);
		[LinkName("PxConstraintConnector_onConstraintRelease_mut")] public static extern void ConstraintConnector_onConstraintRelease_mut(physx_PxConstraintConnector_Pod* self__pod);
		[LinkName("PxConstraintConnector_onComShift_mut")] public static extern void ConstraintConnector_onComShift_mut(physx_PxConstraintConnector_Pod* self__pod, uint32 actor);
		[LinkName("PxConstraintConnector_onOriginShift_mut")] public static extern void ConstraintConnector_onOriginShift_mut(physx_PxConstraintConnector_Pod* self__pod, physx_PxVec3_Pod* shift_pod);
		[LinkName("PxConstraintConnector_getExternalReference_mut")] public static extern void* ConstraintConnector_getExternalReference_mut(physx_PxConstraintConnector_Pod* self__pod, uint32* typeID_pod);
		[LinkName("PxConstraintConnector_getSerializable_mut")] public static extern physx_PxBase_Pod* ConstraintConnector_getSerializable_mut(physx_PxConstraintConnector_Pod* self__pod);
		[LinkName("PxConstraintConnector_getPrep")] public static extern void* ConstraintConnector_getPrep(physx_PxConstraintConnector_Pod* self__pod);
		[LinkName("PxConstraintConnector_getConstantBlock")] public static extern void* ConstraintConnector_getConstantBlock(physx_PxConstraintConnector_Pod* self__pod);
		[LinkName("PxConstraintConnector_delete")] public static extern void ConstraintConnector_delete(physx_PxConstraintConnector_Pod* self__pod);
		[LinkName("PxSolverBody_new")] public static extern physx_PxSolverBody_Pod SolverBody_new();
		[LinkName("PxSolverBodyData_projectVelocity")] public static extern float SolverBodyData_projectVelocity(physx_PxSolverBodyData_Pod* self__pod, physx_PxVec3_Pod* lin_pod, physx_PxVec3_Pod* ang_pod);
		[LinkName("PxConstraintAllocator_reserveConstraintData_mut")] public static extern uint8* ConstraintAllocator_reserveConstraintData_mut(physx_PxConstraintAllocator_Pod* self__pod, uint32 byteSize);
		[LinkName("PxConstraintAllocator_reserveFrictionData_mut")] public static extern uint8* ConstraintAllocator_reserveFrictionData_mut(physx_PxConstraintAllocator_Pod* self__pod, uint32 byteSize);
		[LinkName("PxConstraintAllocator_delete")] public static extern void ConstraintAllocator_delete(physx_PxConstraintAllocator_Pod* self__pod);
		[LinkName("PxTGSSolverBodyVel_projectVelocity")] public static extern float TGSSolverBodyVel_projectVelocity(physx_PxTGSSolverBodyVel_Pod* self__pod, physx_PxVec3_Pod* lin_pod, physx_PxVec3_Pod* ang_pod);
		[LinkName("PxTGSSolverBodyData_projectVelocity")] public static extern float TGSSolverBodyData_projectVelocity(physx_PxTGSSolverBodyData_Pod* self__pod, physx_PxVec3_Pod* linear_pod, physx_PxVec3_Pod* angular_pod);
		[LinkName("PxArticulationCache_new")] public static extern physx_PxArticulationCache_Pod ArticulationCache_new();
		[LinkName("PxArticulationReducedCoordinate_release_mut")] public static extern void ArticulationReducedCoordinate_release_mut(physx_PxArticulationReducedCoordinate_Pod* self__pod);
		[LinkName("PxArticulationReducedCoordinate_setArticulationFlags_mut")] public static extern void ArticulationReducedCoordinate_setArticulationFlags_mut(physx_PxArticulationReducedCoordinate_Pod* self__pod, physx_PxArticulationFlags_Pod flags_pod);
		[LinkName("PxArticulationReducedCoordinate_setArticulationFlag_mut")] public static extern void ArticulationReducedCoordinate_setArticulationFlag_mut(physx_PxArticulationReducedCoordinate_Pod* self__pod, uint32 flag_pod, bool value);
		[LinkName("PxArticulationReducedCoordinate_getArticulationFlags")] public static extern physx_PxArticulationFlags_Pod ArticulationReducedCoordinate_getArticulationFlags(physx_PxArticulationReducedCoordinate_Pod* self__pod);
		[LinkName("PxArticulationReducedCoordinate_getDofs")] public static extern uint32 ArticulationReducedCoordinate_getDofs(physx_PxArticulationReducedCoordinate_Pod* self__pod);
		[LinkName("PxArticulationReducedCoordinate_createCache")] public static extern physx_PxArticulationCache_Pod* ArticulationReducedCoordinate_createCache(physx_PxArticulationReducedCoordinate_Pod* self__pod);
		[LinkName("PxArticulationReducedCoordinate_getCacheDataSize")] public static extern uint32 ArticulationReducedCoordinate_getCacheDataSize(physx_PxArticulationReducedCoordinate_Pod* self__pod);
		[LinkName("PxArticulationReducedCoordinate_zeroCache_mut")] public static extern void ArticulationReducedCoordinate_zeroCache_mut(physx_PxArticulationReducedCoordinate_Pod* self__pod, physx_PxArticulationCache_Pod* cache_pod);
		[LinkName("PxArticulationReducedCoordinate_applyCache_mut")] public static extern void ArticulationReducedCoordinate_applyCache_mut(physx_PxArticulationReducedCoordinate_Pod* self__pod, physx_PxArticulationCache_Pod* cache_pod, physx_PxArticulationCacheFlags_Pod flag_pod, bool autowake);
		[LinkName("PxArticulationReducedCoordinate_copyInternalStateToCache")] public static extern void ArticulationReducedCoordinate_copyInternalStateToCache(physx_PxArticulationReducedCoordinate_Pod* self__pod, physx_PxArticulationCache_Pod* cache_pod, physx_PxArticulationCacheFlags_Pod flag_pod);
		[LinkName("PxArticulationReducedCoordinate_releaseCache")] public static extern void ArticulationReducedCoordinate_releaseCache(physx_PxArticulationReducedCoordinate_Pod* self__pod, physx_PxArticulationCache_Pod* cache_pod);
		[LinkName("PxArticulationReducedCoordinate_packJointData")] public static extern void ArticulationReducedCoordinate_packJointData(physx_PxArticulationReducedCoordinate_Pod* self__pod, float* maximum, float* reduced);
		[LinkName("PxArticulationReducedCoordinate_unpackJointData")] public static extern void ArticulationReducedCoordinate_unpackJointData(physx_PxArticulationReducedCoordinate_Pod* self__pod, float* reduced, float* maximum);
		[LinkName("PxArticulationReducedCoordinate_commonInit")] public static extern void ArticulationReducedCoordinate_commonInit(physx_PxArticulationReducedCoordinate_Pod* self__pod);
		[LinkName("PxArticulationReducedCoordinate_computeGeneralizedGravityForce")] public static extern void ArticulationReducedCoordinate_computeGeneralizedGravityForce(physx_PxArticulationReducedCoordinate_Pod* self__pod, physx_PxArticulationCache_Pod* cache_pod);
		[LinkName("PxArticulationReducedCoordinate_computeCoriolisAndCentrifugalForce")] public static extern void ArticulationReducedCoordinate_computeCoriolisAndCentrifugalForce(physx_PxArticulationReducedCoordinate_Pod* self__pod, physx_PxArticulationCache_Pod* cache_pod);
		[LinkName("PxArticulationReducedCoordinate_computeGeneralizedExternalForce")] public static extern void ArticulationReducedCoordinate_computeGeneralizedExternalForce(physx_PxArticulationReducedCoordinate_Pod* self__pod, physx_PxArticulationCache_Pod* cache_pod);
		[LinkName("PxArticulationReducedCoordinate_computeJointAcceleration")] public static extern void ArticulationReducedCoordinate_computeJointAcceleration(physx_PxArticulationReducedCoordinate_Pod* self__pod, physx_PxArticulationCache_Pod* cache_pod);
		[LinkName("PxArticulationReducedCoordinate_computeJointForce")] public static extern void ArticulationReducedCoordinate_computeJointForce(physx_PxArticulationReducedCoordinate_Pod* self__pod, physx_PxArticulationCache_Pod* cache_pod);
		[LinkName("PxArticulationReducedCoordinate_computeDenseJacobian")] public static extern void ArticulationReducedCoordinate_computeDenseJacobian(physx_PxArticulationReducedCoordinate_Pod* self__pod, physx_PxArticulationCache_Pod* cache_pod, uint32* nRows_pod, uint32* nCols_pod);
		[LinkName("PxArticulationReducedCoordinate_computeCoefficientMatrix")] public static extern void ArticulationReducedCoordinate_computeCoefficientMatrix(physx_PxArticulationReducedCoordinate_Pod* self__pod, physx_PxArticulationCache_Pod* cache_pod);
		[LinkName("PxArticulationReducedCoordinate_computeLambda")] public static extern bool ArticulationReducedCoordinate_computeLambda(physx_PxArticulationReducedCoordinate_Pod* self__pod, physx_PxArticulationCache_Pod* cache_pod, physx_PxArticulationCache_Pod* initialState_pod, float* jointTorque, uint32 maxIter);
		[LinkName("PxArticulationReducedCoordinate_computeGeneralizedMassMatrix")] public static extern void ArticulationReducedCoordinate_computeGeneralizedMassMatrix(physx_PxArticulationReducedCoordinate_Pod* self__pod, physx_PxArticulationCache_Pod* cache_pod);
		[LinkName("PxArticulationReducedCoordinate_addLoopJoint_mut")] public static extern void ArticulationReducedCoordinate_addLoopJoint_mut(physx_PxArticulationReducedCoordinate_Pod* self__pod, physx_PxJoint_Pod* joint_pod);
		[LinkName("PxArticulationReducedCoordinate_removeLoopJoint_mut")] public static extern void ArticulationReducedCoordinate_removeLoopJoint_mut(physx_PxArticulationReducedCoordinate_Pod* self__pod, physx_PxJoint_Pod* joint_pod);
		[LinkName("PxArticulationReducedCoordinate_getNbLoopJoints")] public static extern uint32 ArticulationReducedCoordinate_getNbLoopJoints(physx_PxArticulationReducedCoordinate_Pod* self__pod);
		[LinkName("PxArticulationReducedCoordinate_getLoopJoints")] public static extern uint32 ArticulationReducedCoordinate_getLoopJoints(physx_PxArticulationReducedCoordinate_Pod* self__pod, physx_PxJoint_Pod** userBuffer_pod, uint32 bufferSize, uint32 startIndex);
		[LinkName("PxArticulationReducedCoordinate_getCoefficientMatrixSize")] public static extern uint32 ArticulationReducedCoordinate_getCoefficientMatrixSize(physx_PxArticulationReducedCoordinate_Pod* self__pod);
		[LinkName("PxArticulationReducedCoordinate_teleportRootLink_mut")] public static extern void ArticulationReducedCoordinate_teleportRootLink_mut(physx_PxArticulationReducedCoordinate_Pod* self__pod, physx_PxTransform_Pod* pose_pod, bool autowake);
		[LinkName("PxArticulationJointBase_getParentArticulationLink")] public static extern physx_PxArticulationLink_Pod* ArticulationJointBase_getParentArticulationLink(physx_PxArticulationJointBase_Pod* self__pod);
		[LinkName("PxArticulationJointBase_setParentPose_mut")] public static extern void ArticulationJointBase_setParentPose_mut(physx_PxArticulationJointBase_Pod* self__pod, physx_PxTransform_Pod* pose_pod);
		[LinkName("PxArticulationJointBase_getParentPose")] public static extern physx_PxTransform_Pod ArticulationJointBase_getParentPose(physx_PxArticulationJointBase_Pod* self__pod);
		[LinkName("PxArticulationJointBase_getChildArticulationLink")] public static extern physx_PxArticulationLink_Pod* ArticulationJointBase_getChildArticulationLink(physx_PxArticulationJointBase_Pod* self__pod);
		[LinkName("PxArticulationJointBase_setChildPose_mut")] public static extern void ArticulationJointBase_setChildPose_mut(physx_PxArticulationJointBase_Pod* self__pod, physx_PxTransform_Pod* pose_pod);
		[LinkName("PxArticulationJointBase_getChildPose")] public static extern physx_PxTransform_Pod ArticulationJointBase_getChildPose(physx_PxArticulationJointBase_Pod* self__pod);
		[LinkName("PxArticulationJointBase_getImpl_mut")] public static extern physx_PxArticulationJointImpl_Pod* ArticulationJointBase_getImpl_mut(physx_PxArticulationJointBase_Pod* self__pod);
		[LinkName("PxArticulationJointBase_getImpl")] public static extern physx_PxArticulationJointImpl_Pod* ArticulationJointBase_getImpl(physx_PxArticulationJointBase_Pod* self__pod);
		[LinkName("PxArticulationJoint_setTargetOrientation_mut")] public static extern void ArticulationJoint_setTargetOrientation_mut(physx_PxArticulationJoint_Pod* self__pod, physx_PxQuat_Pod* orientation_pod);
		[LinkName("PxArticulationJoint_getTargetOrientation")] public static extern physx_PxQuat_Pod ArticulationJoint_getTargetOrientation(physx_PxArticulationJoint_Pod* self__pod);
		[LinkName("PxArticulationJoint_setTargetVelocity_mut")] public static extern void ArticulationJoint_setTargetVelocity_mut(physx_PxArticulationJoint_Pod* self__pod, physx_PxVec3_Pod* velocity_pod);
		[LinkName("PxArticulationJoint_getTargetVelocity")] public static extern physx_PxVec3_Pod ArticulationJoint_getTargetVelocity(physx_PxArticulationJoint_Pod* self__pod);
		[LinkName("PxArticulationJoint_setDriveType_mut")] public static extern void ArticulationJoint_setDriveType_mut(physx_PxArticulationJoint_Pod* self__pod, uint32 driveType_pod);
		[LinkName("PxArticulationJoint_getDriveType")] public static extern uint32 ArticulationJoint_getDriveType(physx_PxArticulationJoint_Pod* self__pod);
		[LinkName("PxArticulationJoint_setStiffness_mut")] public static extern void ArticulationJoint_setStiffness_mut(physx_PxArticulationJoint_Pod* self__pod, float spring);
		[LinkName("PxArticulationJoint_getStiffness")] public static extern float ArticulationJoint_getStiffness(physx_PxArticulationJoint_Pod* self__pod);
		[LinkName("PxArticulationJoint_setDamping_mut")] public static extern void ArticulationJoint_setDamping_mut(physx_PxArticulationJoint_Pod* self__pod, float damping);
		[LinkName("PxArticulationJoint_getDamping")] public static extern float ArticulationJoint_getDamping(physx_PxArticulationJoint_Pod* self__pod);
		[LinkName("PxArticulationJoint_setInternalCompliance_mut")] public static extern void ArticulationJoint_setInternalCompliance_mut(physx_PxArticulationJoint_Pod* self__pod, float compliance);
		[LinkName("PxArticulationJoint_getInternalCompliance")] public static extern float ArticulationJoint_getInternalCompliance(physx_PxArticulationJoint_Pod* self__pod);
		[LinkName("PxArticulationJoint_setExternalCompliance_mut")] public static extern void ArticulationJoint_setExternalCompliance_mut(physx_PxArticulationJoint_Pod* self__pod, float compliance);
		[LinkName("PxArticulationJoint_getExternalCompliance")] public static extern float ArticulationJoint_getExternalCompliance(physx_PxArticulationJoint_Pod* self__pod);
		[LinkName("PxArticulationJoint_setSwingLimit_mut")] public static extern void ArticulationJoint_setSwingLimit_mut(physx_PxArticulationJoint_Pod* self__pod, float zLimit, float yLimit);
		[LinkName("PxArticulationJoint_getSwingLimit")] public static extern void ArticulationJoint_getSwingLimit(physx_PxArticulationJoint_Pod* self__pod, float* zLimit_pod, float* yLimit_pod);
		[LinkName("PxArticulationJoint_setTangentialStiffness_mut")] public static extern void ArticulationJoint_setTangentialStiffness_mut(physx_PxArticulationJoint_Pod* self__pod, float spring);
		[LinkName("PxArticulationJoint_getTangentialStiffness")] public static extern float ArticulationJoint_getTangentialStiffness(physx_PxArticulationJoint_Pod* self__pod);
		[LinkName("PxArticulationJoint_setTangentialDamping_mut")] public static extern void ArticulationJoint_setTangentialDamping_mut(physx_PxArticulationJoint_Pod* self__pod, float damping);
		[LinkName("PxArticulationJoint_getTangentialDamping")] public static extern float ArticulationJoint_getTangentialDamping(physx_PxArticulationJoint_Pod* self__pod);
		[LinkName("PxArticulationJoint_setSwingLimitContactDistance_mut")] public static extern void ArticulationJoint_setSwingLimitContactDistance_mut(physx_PxArticulationJoint_Pod* self__pod, float contactDistance);
		[LinkName("PxArticulationJoint_getSwingLimitContactDistance")] public static extern float ArticulationJoint_getSwingLimitContactDistance(physx_PxArticulationJoint_Pod* self__pod);
		[LinkName("PxArticulationJoint_setSwingLimitEnabled_mut")] public static extern void ArticulationJoint_setSwingLimitEnabled_mut(physx_PxArticulationJoint_Pod* self__pod, bool enabled);
		[LinkName("PxArticulationJoint_getSwingLimitEnabled")] public static extern bool ArticulationJoint_getSwingLimitEnabled(physx_PxArticulationJoint_Pod* self__pod);
		[LinkName("PxArticulationJoint_setTwistLimit_mut")] public static extern void ArticulationJoint_setTwistLimit_mut(physx_PxArticulationJoint_Pod* self__pod, float lower, float upper);
		[LinkName("PxArticulationJoint_getTwistLimit")] public static extern void ArticulationJoint_getTwistLimit(physx_PxArticulationJoint_Pod* self__pod, float* lower_pod, float* upper_pod);
		[LinkName("PxArticulationJoint_setTwistLimitEnabled_mut")] public static extern void ArticulationJoint_setTwistLimitEnabled_mut(physx_PxArticulationJoint_Pod* self__pod, bool enabled);
		[LinkName("PxArticulationJoint_getTwistLimitEnabled")] public static extern bool ArticulationJoint_getTwistLimitEnabled(physx_PxArticulationJoint_Pod* self__pod);
		[LinkName("PxArticulationJoint_setTwistLimitContactDistance_mut")] public static extern void ArticulationJoint_setTwistLimitContactDistance_mut(physx_PxArticulationJoint_Pod* self__pod, float contactDistance);
		[LinkName("PxArticulationJoint_getTwistLimitContactDistance")] public static extern float ArticulationJoint_getTwistLimitContactDistance(physx_PxArticulationJoint_Pod* self__pod);
		[LinkName("PxArticulationJoint_getConcreteTypeName")] public static extern char8* ArticulationJoint_getConcreteTypeName(physx_PxArticulationJoint_Pod* self__pod);
		[LinkName("PxArticulationJointReducedCoordinate_setJointType_mut")] public static extern void ArticulationJointReducedCoordinate_setJointType_mut(physx_PxArticulationJointReducedCoordinate_Pod* self__pod, uint32 jointType_pod);
		[LinkName("PxArticulationJointReducedCoordinate_getJointType")] public static extern uint32 ArticulationJointReducedCoordinate_getJointType(physx_PxArticulationJointReducedCoordinate_Pod* self__pod);
		[LinkName("PxArticulationJointReducedCoordinate_setMotion_mut")] public static extern void ArticulationJointReducedCoordinate_setMotion_mut(physx_PxArticulationJointReducedCoordinate_Pod* self__pod, uint32 axis_pod, uint32 motion_pod);
		[LinkName("PxArticulationJointReducedCoordinate_getMotion")] public static extern uint32 ArticulationJointReducedCoordinate_getMotion(physx_PxArticulationJointReducedCoordinate_Pod* self__pod, uint32 axis_pod);
		[LinkName("PxArticulationJointReducedCoordinate_setLimit_mut")] public static extern void ArticulationJointReducedCoordinate_setLimit_mut(physx_PxArticulationJointReducedCoordinate_Pod* self__pod, uint32 axis_pod, float lowLimit, float highLimit);
		[LinkName("PxArticulationJointReducedCoordinate_getLimit_mut")] public static extern void ArticulationJointReducedCoordinate_getLimit_mut(physx_PxArticulationJointReducedCoordinate_Pod* self__pod, uint32 axis_pod, float* lowLimit_pod, float* highLimit_pod);
		[LinkName("PxArticulationJointReducedCoordinate_setDrive_mut")] public static extern void ArticulationJointReducedCoordinate_setDrive_mut(physx_PxArticulationJointReducedCoordinate_Pod* self__pod, uint32 axis_pod, float stiffness, float damping, float maxForce, uint32 driveType_pod);
		[LinkName("PxArticulationJointReducedCoordinate_getDrive_mut")] public static extern void ArticulationJointReducedCoordinate_getDrive_mut(physx_PxArticulationJointReducedCoordinate_Pod* self__pod, uint32 axis_pod, float* stiffness_pod, float* damping_pod, float* maxForce_pod, uint32* driveType_pod);
		[LinkName("PxArticulationJointReducedCoordinate_setDriveTarget_mut")] public static extern void ArticulationJointReducedCoordinate_setDriveTarget_mut(physx_PxArticulationJointReducedCoordinate_Pod* self__pod, uint32 axis_pod, float target);
		[LinkName("PxArticulationJointReducedCoordinate_setDriveVelocity_mut")] public static extern void ArticulationJointReducedCoordinate_setDriveVelocity_mut(physx_PxArticulationJointReducedCoordinate_Pod* self__pod, uint32 axis_pod, float targetVel);
		[LinkName("PxArticulationJointReducedCoordinate_getDriveTarget_mut")] public static extern float ArticulationJointReducedCoordinate_getDriveTarget_mut(physx_PxArticulationJointReducedCoordinate_Pod* self__pod, uint32 axis_pod);
		[LinkName("PxArticulationJointReducedCoordinate_getDriveVelocity_mut")] public static extern float ArticulationJointReducedCoordinate_getDriveVelocity_mut(physx_PxArticulationJointReducedCoordinate_Pod* self__pod, uint32 axis_pod);
		[LinkName("PxArticulationJointReducedCoordinate_setFrictionCoefficient_mut")] public static extern void ArticulationJointReducedCoordinate_setFrictionCoefficient_mut(physx_PxArticulationJointReducedCoordinate_Pod* self__pod, float coefficient);
		[LinkName("PxArticulationJointReducedCoordinate_getFrictionCoefficient")] public static extern float ArticulationJointReducedCoordinate_getFrictionCoefficient(physx_PxArticulationJointReducedCoordinate_Pod* self__pod);
		[LinkName("PxArticulationJointReducedCoordinate_getConcreteTypeName")] public static extern char8* ArticulationJointReducedCoordinate_getConcreteTypeName(physx_PxArticulationJointReducedCoordinate_Pod* self__pod);
		[LinkName("PxArticulationJointReducedCoordinate_setMaxJointVelocity_mut")] public static extern void ArticulationJointReducedCoordinate_setMaxJointVelocity_mut(physx_PxArticulationJointReducedCoordinate_Pod* self__pod, float maxJointV);
		[LinkName("PxArticulationJointReducedCoordinate_getMaxJointVelocity")] public static extern float ArticulationJointReducedCoordinate_getMaxJointVelocity(physx_PxArticulationJointReducedCoordinate_Pod* self__pod);
		[LinkName("PxShape_release_mut")] public static extern void Shape_release_mut(physx_PxShape_Pod* self__pod);
		[LinkName("PxShape_getReferenceCount")] public static extern uint32 Shape_getReferenceCount(physx_PxShape_Pod* self__pod);
		[LinkName("PxShape_acquireReference_mut")] public static extern void Shape_acquireReference_mut(physx_PxShape_Pod* self__pod);
		[LinkName("PxShape_getGeometryType")] public static extern int Shape_getGeometryType(physx_PxShape_Pod* self__pod);
		[LinkName("PxShape_setGeometry_mut")] public static extern void Shape_setGeometry_mut(physx_PxShape_Pod* self__pod, physx_PxGeometry_Pod* geometry_pod);
		[LinkName("PxShape_getGeometry")] public static extern physx_PxGeometryHolder_Pod Shape_getGeometry(physx_PxShape_Pod* self__pod);
		[LinkName("PxShape_getBoxGeometry")] public static extern bool Shape_getBoxGeometry(physx_PxShape_Pod* self__pod, physx_PxBoxGeometry_Pod* geometry_pod);
		[LinkName("PxShape_getSphereGeometry")] public static extern bool Shape_getSphereGeometry(physx_PxShape_Pod* self__pod, physx_PxSphereGeometry_Pod* geometry_pod);
		[LinkName("PxShape_getCapsuleGeometry")] public static extern bool Shape_getCapsuleGeometry(physx_PxShape_Pod* self__pod, physx_PxCapsuleGeometry_Pod* geometry_pod);
		[LinkName("PxShape_getPlaneGeometry")] public static extern bool Shape_getPlaneGeometry(physx_PxShape_Pod* self__pod, physx_PxPlaneGeometry_Pod* geometry_pod);
		[LinkName("PxShape_getConvexMeshGeometry")] public static extern bool Shape_getConvexMeshGeometry(physx_PxShape_Pod* self__pod, physx_PxConvexMeshGeometry_Pod* geometry_pod);
		[LinkName("PxShape_getTriangleMeshGeometry")] public static extern bool Shape_getTriangleMeshGeometry(physx_PxShape_Pod* self__pod, physx_PxTriangleMeshGeometry_Pod* geometry_pod);
		[LinkName("PxShape_getHeightFieldGeometry")] public static extern bool Shape_getHeightFieldGeometry(physx_PxShape_Pod* self__pod, physx_PxHeightFieldGeometry_Pod* geometry_pod);
		[LinkName("PxShape_getActor")] public static extern physx_PxRigidActor_Pod* Shape_getActor(physx_PxShape_Pod* self__pod);
		[LinkName("PxShape_setLocalPose_mut")] public static extern void Shape_setLocalPose_mut(physx_PxShape_Pod* self__pod, physx_PxTransform_Pod* pose_pod);
		[LinkName("PxShape_getLocalPose")] public static extern physx_PxTransform_Pod Shape_getLocalPose(physx_PxShape_Pod* self__pod);
		[LinkName("PxShape_setSimulationFilterData_mut")] public static extern void Shape_setSimulationFilterData_mut(physx_PxShape_Pod* self__pod, physx_PxFilterData_Pod* data_pod);
		[LinkName("PxShape_getSimulationFilterData")] public static extern physx_PxFilterData_Pod Shape_getSimulationFilterData(physx_PxShape_Pod* self__pod);
		[LinkName("PxShape_setQueryFilterData_mut")] public static extern void Shape_setQueryFilterData_mut(physx_PxShape_Pod* self__pod, physx_PxFilterData_Pod* data_pod);
		[LinkName("PxShape_getQueryFilterData")] public static extern physx_PxFilterData_Pod Shape_getQueryFilterData(physx_PxShape_Pod* self__pod);
		[LinkName("PxShape_setMaterials_mut")] public static extern void Shape_setMaterials_mut(physx_PxShape_Pod* self__pod, physx_PxMaterial_Pod** materials_pod, uint16 materialCount);
		[LinkName("PxShape_getNbMaterials")] public static extern uint16 Shape_getNbMaterials(physx_PxShape_Pod* self__pod);
		[LinkName("PxShape_getMaterials")] public static extern uint32 Shape_getMaterials(physx_PxShape_Pod* self__pod, physx_PxMaterial_Pod** userBuffer_pod, uint32 bufferSize, uint32 startIndex);
		[LinkName("PxShape_getMaterialFromInternalFaceIndex")] public static extern physx_PxMaterial_Pod* Shape_getMaterialFromInternalFaceIndex(physx_PxShape_Pod* self__pod, uint32 faceIndex);
		[LinkName("PxShape_setContactOffset_mut")] public static extern void Shape_setContactOffset_mut(physx_PxShape_Pod* self__pod, float contactOffset);
		[LinkName("PxShape_getContactOffset")] public static extern float Shape_getContactOffset(physx_PxShape_Pod* self__pod);
		[LinkName("PxShape_setRestOffset_mut")] public static extern void Shape_setRestOffset_mut(physx_PxShape_Pod* self__pod, float restOffset);
		[LinkName("PxShape_getRestOffset")] public static extern float Shape_getRestOffset(physx_PxShape_Pod* self__pod);
		[LinkName("PxShape_setTorsionalPatchRadius_mut")] public static extern void Shape_setTorsionalPatchRadius_mut(physx_PxShape_Pod* self__pod, float radius);
		[LinkName("PxShape_getTorsionalPatchRadius")] public static extern float Shape_getTorsionalPatchRadius(physx_PxShape_Pod* self__pod);
		[LinkName("PxShape_setMinTorsionalPatchRadius_mut")] public static extern void Shape_setMinTorsionalPatchRadius_mut(physx_PxShape_Pod* self__pod, float radius);
		[LinkName("PxShape_getMinTorsionalPatchRadius")] public static extern float Shape_getMinTorsionalPatchRadius(physx_PxShape_Pod* self__pod);
		[LinkName("PxShape_setFlag_mut")] public static extern void Shape_setFlag_mut(physx_PxShape_Pod* self__pod, uint32 flag_pod, bool value);
		[LinkName("PxShape_setFlags_mut")] public static extern void Shape_setFlags_mut(physx_PxShape_Pod* self__pod, physx_PxShapeFlags_Pod inFlags_pod);
		[LinkName("PxShape_getFlags")] public static extern physx_PxShapeFlags_Pod Shape_getFlags(physx_PxShape_Pod* self__pod);
		[LinkName("PxShape_isExclusive")] public static extern bool Shape_isExclusive(physx_PxShape_Pod* self__pod);
		[LinkName("PxShape_setName_mut")] public static extern void Shape_setName_mut(physx_PxShape_Pod* self__pod, char8* name);
		[LinkName("PxShape_getName")] public static extern char8* Shape_getName(physx_PxShape_Pod* self__pod);
		[LinkName("PxShape_getConcreteTypeName")] public static extern char8* Shape_getConcreteTypeName(physx_PxShape_Pod* self__pod);
		[LinkName("PxRigidActor_release_mut")] public static extern void RigidActor_release_mut(physx_PxRigidActor_Pod* self__pod);
		[LinkName("PxRigidActor_getGlobalPose")] public static extern physx_PxTransform_Pod RigidActor_getGlobalPose(physx_PxRigidActor_Pod* self__pod);
		[LinkName("PxRigidActor_setGlobalPose_mut")] public static extern void RigidActor_setGlobalPose_mut(physx_PxRigidActor_Pod* self__pod, physx_PxTransform_Pod* pose_pod, bool autowake);
		[LinkName("PxRigidActor_attachShape_mut")] public static extern bool RigidActor_attachShape_mut(physx_PxRigidActor_Pod* self__pod, physx_PxShape_Pod* shape_pod);
		[LinkName("PxRigidActor_detachShape_mut")] public static extern void RigidActor_detachShape_mut(physx_PxRigidActor_Pod* self__pod, physx_PxShape_Pod* shape_pod, bool wakeOnLostTouch);
		[LinkName("PxRigidActor_getNbShapes")] public static extern uint32 RigidActor_getNbShapes(physx_PxRigidActor_Pod* self__pod);
		[LinkName("PxRigidActor_getShapes")] public static extern uint32 RigidActor_getShapes(physx_PxRigidActor_Pod* self__pod, physx_PxShape_Pod** userBuffer_pod, uint32 bufferSize, uint32 startIndex);
		[LinkName("PxRigidActor_getNbConstraints")] public static extern uint32 RigidActor_getNbConstraints(physx_PxRigidActor_Pod* self__pod);
		[LinkName("PxRigidActor_getConstraints")] public static extern uint32 RigidActor_getConstraints(physx_PxRigidActor_Pod* self__pod, physx_PxConstraint_Pod** userBuffer_pod, uint32 bufferSize, uint32 startIndex);
		[LinkName("PxRigidBody_setCMassLocalPose_mut")] public static extern void RigidBody_setCMassLocalPose_mut(physx_PxRigidBody_Pod* self__pod, physx_PxTransform_Pod* pose_pod);
		[LinkName("PxRigidBody_getCMassLocalPose")] public static extern physx_PxTransform_Pod RigidBody_getCMassLocalPose(physx_PxRigidBody_Pod* self__pod);
		[LinkName("PxRigidBody_setMass_mut")] public static extern void RigidBody_setMass_mut(physx_PxRigidBody_Pod* self__pod, float mass);
		[LinkName("PxRigidBody_getMass")] public static extern float RigidBody_getMass(physx_PxRigidBody_Pod* self__pod);
		[LinkName("PxRigidBody_getInvMass")] public static extern float RigidBody_getInvMass(physx_PxRigidBody_Pod* self__pod);
		[LinkName("PxRigidBody_setMassSpaceInertiaTensor_mut")] public static extern void RigidBody_setMassSpaceInertiaTensor_mut(physx_PxRigidBody_Pod* self__pod, physx_PxVec3_Pod* m_pod);
		[LinkName("PxRigidBody_getMassSpaceInertiaTensor")] public static extern physx_PxVec3_Pod RigidBody_getMassSpaceInertiaTensor(physx_PxRigidBody_Pod* self__pod);
		[LinkName("PxRigidBody_getMassSpaceInvInertiaTensor")] public static extern physx_PxVec3_Pod RigidBody_getMassSpaceInvInertiaTensor(physx_PxRigidBody_Pod* self__pod);
		[LinkName("PxRigidBody_setLinearDamping_mut")] public static extern void RigidBody_setLinearDamping_mut(physx_PxRigidBody_Pod* self__pod, float linDamp);
		[LinkName("PxRigidBody_getLinearDamping")] public static extern float RigidBody_getLinearDamping(physx_PxRigidBody_Pod* self__pod);
		[LinkName("PxRigidBody_setAngularDamping_mut")] public static extern void RigidBody_setAngularDamping_mut(physx_PxRigidBody_Pod* self__pod, float angDamp);
		[LinkName("PxRigidBody_getAngularDamping")] public static extern float RigidBody_getAngularDamping(physx_PxRigidBody_Pod* self__pod);
		[LinkName("PxRigidBody_getLinearVelocity")] public static extern physx_PxVec3_Pod RigidBody_getLinearVelocity(physx_PxRigidBody_Pod* self__pod);
		[LinkName("PxRigidBody_setLinearVelocity_mut")] public static extern void RigidBody_setLinearVelocity_mut(physx_PxRigidBody_Pod* self__pod, physx_PxVec3_Pod* linVel_pod, bool autowake);
		[LinkName("PxRigidBody_getAngularVelocity")] public static extern physx_PxVec3_Pod RigidBody_getAngularVelocity(physx_PxRigidBody_Pod* self__pod);
		[LinkName("PxRigidBody_setAngularVelocity_mut")] public static extern void RigidBody_setAngularVelocity_mut(physx_PxRigidBody_Pod* self__pod, physx_PxVec3_Pod* angVel_pod, bool autowake);
		[LinkName("PxRigidBody_setMaxAngularVelocity_mut")] public static extern void RigidBody_setMaxAngularVelocity_mut(physx_PxRigidBody_Pod* self__pod, float maxAngVel);
		[LinkName("PxRigidBody_getMaxAngularVelocity")] public static extern float RigidBody_getMaxAngularVelocity(physx_PxRigidBody_Pod* self__pod);
		[LinkName("PxRigidBody_setMaxLinearVelocity_mut")] public static extern void RigidBody_setMaxLinearVelocity_mut(physx_PxRigidBody_Pod* self__pod, float maxLinVel);
		[LinkName("PxRigidBody_getMaxLinearVelocity")] public static extern float RigidBody_getMaxLinearVelocity(physx_PxRigidBody_Pod* self__pod);
		[LinkName("PxRigidBody_addForce_mut")] public static extern void RigidBody_addForce_mut(physx_PxRigidBody_Pod* self__pod, physx_PxVec3_Pod* force_pod, uint32 mode_pod, bool autowake);
		[LinkName("PxRigidBody_addTorque_mut")] public static extern void RigidBody_addTorque_mut(physx_PxRigidBody_Pod* self__pod, physx_PxVec3_Pod* torque_pod, uint32 mode_pod, bool autowake);
		[LinkName("PxRigidBody_clearForce_mut")] public static extern void RigidBody_clearForce_mut(physx_PxRigidBody_Pod* self__pod, uint32 mode_pod);
		[LinkName("PxRigidBody_clearTorque_mut")] public static extern void RigidBody_clearTorque_mut(physx_PxRigidBody_Pod* self__pod, uint32 mode_pod);
		[LinkName("PxRigidBody_setForceAndTorque_mut")] public static extern void RigidBody_setForceAndTorque_mut(physx_PxRigidBody_Pod* self__pod, physx_PxVec3_Pod* force_pod, physx_PxVec3_Pod* torque_pod, uint32 mode_pod);
		[LinkName("PxRigidBody_setRigidBodyFlag_mut")] public static extern void RigidBody_setRigidBodyFlag_mut(physx_PxRigidBody_Pod* self__pod, uint32 flag_pod, bool value);
		[LinkName("PxRigidBody_setRigidBodyFlags_mut")] public static extern void RigidBody_setRigidBodyFlags_mut(physx_PxRigidBody_Pod* self__pod, physx_PxRigidBodyFlags_Pod inFlags_pod);
		[LinkName("PxRigidBody_getRigidBodyFlags")] public static extern physx_PxRigidBodyFlags_Pod RigidBody_getRigidBodyFlags(physx_PxRigidBody_Pod* self__pod);
		[LinkName("PxRigidBody_setMinCCDAdvanceCoefficient_mut")] public static extern void RigidBody_setMinCCDAdvanceCoefficient_mut(physx_PxRigidBody_Pod* self__pod, float advanceCoefficient);
		[LinkName("PxRigidBody_getMinCCDAdvanceCoefficient")] public static extern float RigidBody_getMinCCDAdvanceCoefficient(physx_PxRigidBody_Pod* self__pod);
		[LinkName("PxRigidBody_setMaxDepenetrationVelocity_mut")] public static extern void RigidBody_setMaxDepenetrationVelocity_mut(physx_PxRigidBody_Pod* self__pod, float biasClamp);
		[LinkName("PxRigidBody_getMaxDepenetrationVelocity")] public static extern float RigidBody_getMaxDepenetrationVelocity(physx_PxRigidBody_Pod* self__pod);
		[LinkName("PxRigidBody_setMaxContactImpulse_mut")] public static extern void RigidBody_setMaxContactImpulse_mut(physx_PxRigidBody_Pod* self__pod, float maxImpulse);
		[LinkName("PxRigidBody_getMaxContactImpulse")] public static extern float RigidBody_getMaxContactImpulse(physx_PxRigidBody_Pod* self__pod);
		[LinkName("PxRigidBody_getInternalIslandNodeIndex")] public static extern uint32 RigidBody_getInternalIslandNodeIndex(physx_PxRigidBody_Pod* self__pod);
		[LinkName("PxArticulationLink_release_mut")] public static extern void ArticulationLink_release_mut(physx_PxArticulationLink_Pod* self__pod);
		[LinkName("PxArticulationLink_getArticulation")] public static extern physx_PxArticulationBase_Pod* ArticulationLink_getArticulation(physx_PxArticulationLink_Pod* self__pod);
		[LinkName("PxArticulationLink_getInboundJoint")] public static extern physx_PxArticulationJointBase_Pod* ArticulationLink_getInboundJoint(physx_PxArticulationLink_Pod* self__pod);
		[LinkName("PxArticulationLink_getInboundJointDof")] public static extern uint32 ArticulationLink_getInboundJointDof(physx_PxArticulationLink_Pod* self__pod);
		[LinkName("PxArticulationLink_getNbChildren")] public static extern uint32 ArticulationLink_getNbChildren(physx_PxArticulationLink_Pod* self__pod);
		[LinkName("PxArticulationLink_getLinkIndex")] public static extern uint32 ArticulationLink_getLinkIndex(physx_PxArticulationLink_Pod* self__pod);
		[LinkName("PxArticulationLink_getChildren")] public static extern uint32 ArticulationLink_getChildren(physx_PxArticulationLink_Pod* self__pod, physx_PxArticulationLink_Pod** userBuffer_pod, uint32 bufferSize, uint32 startIndex);
		[LinkName("PxArticulationLink_getConcreteTypeName")] public static extern char8* ArticulationLink_getConcreteTypeName(physx_PxArticulationLink_Pod* self__pod);
		[LinkName("PxFilterData_new")] public static extern physx_PxFilterData_Pod FilterData_new(uint32 anonymous_arg0_pod);
		[LinkName("PxFilterData_new_1")] public static extern physx_PxFilterData_Pod FilterData_new_1();
		[LinkName("PxFilterData_new_2")] public static extern physx_PxFilterData_Pod FilterData_new_2(uint32 w0, uint32 w1, uint32 w2, uint32 w3);
		[LinkName("PxFilterData_setToDefault_mut")] public static extern void FilterData_setToDefault_mut(physx_PxFilterData_Pod* self__pod);
		[LinkName("phys_PxGetFilterObjectType")] public static extern uint32 GetFilterObjectType(uint32 attr);
		[LinkName("phys_PxFilterObjectIsKinematic")] public static extern bool FilterObjectIsKinematic(uint32 attr);
		[LinkName("phys_PxFilterObjectIsTrigger")] public static extern bool FilterObjectIsTrigger(uint32 attr);
		[LinkName("PxSimulationFilterCallback_pairFound_mut")] public static extern physx_PxFilterFlags_Pod SimulationFilterCallback_pairFound_mut(physx_PxSimulationFilterCallback_Pod* self__pod, uint32 pairID, uint32 attributes0, physx_PxFilterData_Pod filterData0_pod, physx_PxActor_Pod* a0_pod, physx_PxShape_Pod* s0_pod, uint32 attributes1, physx_PxFilterData_Pod filterData1_pod, physx_PxActor_Pod* a1_pod, physx_PxShape_Pod* s1_pod, physx_PxPairFlags_Pod* pairFlags_pod);
		[LinkName("PxSimulationFilterCallback_pairLost_mut")] public static extern void SimulationFilterCallback_pairLost_mut(physx_PxSimulationFilterCallback_Pod* self__pod, uint32 pairID, uint32 attributes0, physx_PxFilterData_Pod filterData0_pod, uint32 attributes1, physx_PxFilterData_Pod filterData1_pod, bool objectRemoved);
		[LinkName("PxSimulationFilterCallback_statusChange_mut")] public static extern bool SimulationFilterCallback_statusChange_mut(physx_PxSimulationFilterCallback_Pod* self__pod, uint32* pairID_pod, physx_PxPairFlags_Pod* pairFlags_pod, physx_PxFilterFlags_Pod* filterFlags_pod);
		[LinkName("PxQueryFilterData_new")] public static extern physx_PxQueryFilterData_Pod QueryFilterData_new();
		[LinkName("PxQueryFilterData_new_1")] public static extern physx_PxQueryFilterData_Pod QueryFilterData_new_1(physx_PxFilterData_Pod* fd_pod, physx_PxQueryFlags_Pod f_pod);
		[LinkName("PxQueryFilterData_new_2")] public static extern physx_PxQueryFilterData_Pod QueryFilterData_new_2(physx_PxQueryFlags_Pod f_pod);
		[LinkName("PxQueryFilterCallback_preFilter_mut")] public static extern uint32 QueryFilterCallback_preFilter_mut(physx_PxQueryFilterCallback_Pod* self__pod, physx_PxFilterData_Pod* filterData_pod, physx_PxShape_Pod* shape_pod, physx_PxRigidActor_Pod* actor_pod, physx_PxHitFlags_Pod* queryFlags_pod);
		[LinkName("PxQueryFilterCallback_postFilter_mut")] public static extern uint32 QueryFilterCallback_postFilter_mut(physx_PxQueryFilterCallback_Pod* self__pod, physx_PxFilterData_Pod* filterData_pod, physx_PxQueryHit_Pod* hit_pod);
		[LinkName("PxQueryFilterCallback_delete")] public static extern void QueryFilterCallback_delete(physx_PxQueryFilterCallback_Pod* self__pod);
		[LinkName("PxBatchQueryMemory_getMaxRaycastsPerExecute")] public static extern uint32 BatchQueryMemory_getMaxRaycastsPerExecute(physx_PxBatchQueryMemory_Pod* self__pod);
		[LinkName("PxBatchQueryMemory_getMaxSweepsPerExecute")] public static extern uint32 BatchQueryMemory_getMaxSweepsPerExecute(physx_PxBatchQueryMemory_Pod* self__pod);
		[LinkName("PxBatchQueryMemory_getMaxOverlapsPerExecute")] public static extern uint32 BatchQueryMemory_getMaxOverlapsPerExecute(physx_PxBatchQueryMemory_Pod* self__pod);
		[LinkName("PxBatchQueryMemory_new")] public static extern physx_PxBatchQueryMemory_Pod BatchQueryMemory_new(uint32 raycastResultBufferSize_, uint32 sweepResultBufferSize_, uint32 overlapResultBufferSize_);
		[LinkName("PxBatchQueryDesc_new")] public static extern physx_PxBatchQueryDesc_Pod BatchQueryDesc_new(uint32 maxRaycastsPerExecute, uint32 maxSweepsPerExecute, uint32 maxOverlapsPerExecute);
		[LinkName("PxBatchQueryDesc_isValid")] public static extern bool BatchQueryDesc_isValid(physx_PxBatchQueryDesc_Pod* self__pod);
		[LinkName("PxBatchQueryDesc_new_1")] public static extern physx_PxBatchQueryDesc_Pod BatchQueryDesc_new_1(uint32 maxRaycastsPerExecute, uint32 maxSweepsPerExecute, uint32 maxOverlapsPerExecute);
		[LinkName("PxBatchQueryDesc_isValid_1")] public static extern bool BatchQueryDesc_isValid_1(physx_PxBatchQueryDesc_Pod* self__pod);
		[LinkName("PxBatchQuery_execute_mut")] public static extern void BatchQuery_execute_mut(physx_PxBatchQuery_Pod* self__pod);
		[LinkName("PxBatchQuery_getPreFilterShader")] public static extern void* BatchQuery_getPreFilterShader(physx_PxBatchQuery_Pod* self__pod);
		[LinkName("PxBatchQuery_getPostFilterShader")] public static extern void* BatchQuery_getPostFilterShader(physx_PxBatchQuery_Pod* self__pod);
		[LinkName("PxBatchQuery_getFilterShaderData")] public static extern void* BatchQuery_getFilterShaderData(physx_PxBatchQuery_Pod* self__pod);
		[LinkName("PxBatchQuery_getFilterShaderDataSize")] public static extern uint32 BatchQuery_getFilterShaderDataSize(physx_PxBatchQuery_Pod* self__pod);
		[LinkName("PxBatchQuery_setUserMemory_mut")] public static extern void BatchQuery_setUserMemory_mut(physx_PxBatchQuery_Pod* self__pod, physx_PxBatchQueryMemory_Pod* anonymous_arg0_pod);
		[LinkName("PxBatchQuery_getUserMemory_mut")] public static extern physx_PxBatchQueryMemory_Pod* BatchQuery_getUserMemory_mut(physx_PxBatchQuery_Pod* self__pod);
		[LinkName("PxBatchQuery_release_mut")] public static extern void BatchQuery_release_mut(physx_PxBatchQuery_Pod* self__pod);
		[LinkName("PxBatchQuery_raycast_mut")] public static extern void BatchQuery_raycast_mut(physx_PxBatchQuery_Pod* self__pod, physx_PxVec3_Pod* origin_pod, physx_PxVec3_Pod* unitDir_pod, float distance, uint16 maxTouchHits, physx_PxHitFlags_Pod hitFlags_pod, physx_PxQueryFilterData_Pod* filterData_pod, void* userData, physx_PxQueryCache_Pod* cache_pod);
		[LinkName("PxBatchQuery_overlap_mut")] public static extern void BatchQuery_overlap_mut(physx_PxBatchQuery_Pod* self__pod, physx_PxGeometry_Pod* geometry_pod, physx_PxTransform_Pod* pose_pod, uint16 maxTouchHits, physx_PxQueryFilterData_Pod* filterData_pod, void* userData, physx_PxQueryCache_Pod* cache_pod);
		[LinkName("PxBatchQuery_sweep_mut")] public static extern void BatchQuery_sweep_mut(physx_PxBatchQuery_Pod* self__pod, physx_PxGeometry_Pod* geometry_pod, physx_PxTransform_Pod* pose_pod, physx_PxVec3_Pod* unitDir_pod, float distance, uint16 maxTouchHits, physx_PxHitFlags_Pod hitFlags_pod, physx_PxQueryFilterData_Pod* filterData_pod, void* userData, physx_PxQueryCache_Pod* cache_pod, float inflation);
		[LinkName("PxConstraint_release_mut")] public static extern void Constraint_release_mut(physx_PxConstraint_Pod* self__pod);
		[LinkName("PxConstraint_getScene")] public static extern physx_PxScene_Pod* Constraint_getScene(physx_PxConstraint_Pod* self__pod);
		[LinkName("PxConstraint_getActors")] public static extern void Constraint_getActors(physx_PxConstraint_Pod* self__pod, physx_PxRigidActor_Pod** actor0_pod, physx_PxRigidActor_Pod** actor1_pod);
		[LinkName("PxConstraint_setActors_mut")] public static extern void Constraint_setActors_mut(physx_PxConstraint_Pod* self__pod, physx_PxRigidActor_Pod* actor0_pod, physx_PxRigidActor_Pod* actor1_pod);
		[LinkName("PxConstraint_markDirty_mut")] public static extern void Constraint_markDirty_mut(physx_PxConstraint_Pod* self__pod);
		[LinkName("PxConstraint_setFlags_mut")] public static extern void Constraint_setFlags_mut(physx_PxConstraint_Pod* self__pod, physx_PxConstraintFlags_Pod flags_pod);
		[LinkName("PxConstraint_getFlags")] public static extern physx_PxConstraintFlags_Pod Constraint_getFlags(physx_PxConstraint_Pod* self__pod);
		[LinkName("PxConstraint_setFlag_mut")] public static extern void Constraint_setFlag_mut(physx_PxConstraint_Pod* self__pod, uint32 flag_pod, bool value);
		[LinkName("PxConstraint_getForce")] public static extern void Constraint_getForce(physx_PxConstraint_Pod* self__pod, physx_PxVec3_Pod* linear_pod, physx_PxVec3_Pod* angular_pod);
		[LinkName("PxConstraint_isValid")] public static extern bool Constraint_isValid(physx_PxConstraint_Pod* self__pod);
		[LinkName("PxConstraint_setBreakForce_mut")] public static extern void Constraint_setBreakForce_mut(physx_PxConstraint_Pod* self__pod, float linear, float angular);
		[LinkName("PxConstraint_getBreakForce")] public static extern void Constraint_getBreakForce(physx_PxConstraint_Pod* self__pod, float* linear_pod, float* angular_pod);
		[LinkName("PxConstraint_setMinResponseThreshold_mut")] public static extern void Constraint_setMinResponseThreshold_mut(physx_PxConstraint_Pod* self__pod, float threshold);
		[LinkName("PxConstraint_getMinResponseThreshold")] public static extern float Constraint_getMinResponseThreshold(physx_PxConstraint_Pod* self__pod);
		[LinkName("PxConstraint_getExternalReference_mut")] public static extern void* Constraint_getExternalReference_mut(physx_PxConstraint_Pod* self__pod, uint32* typeID_pod);
		[LinkName("PxConstraint_setConstraintFunctions_mut")] public static extern void Constraint_setConstraintFunctions_mut(physx_PxConstraint_Pod* self__pod, physx_PxConstraintConnector_Pod* connector_pod, physx_PxConstraintShaderTable_Pod* shaders_pod);
		[LinkName("PxConstraint_getConcreteTypeName")] public static extern char8* Constraint_getConcreteTypeName(physx_PxConstraint_Pod* self__pod);
		[LinkName("PxContactStreamIterator_new")] public static extern physx_PxContactStreamIterator_Pod ContactStreamIterator_new(uint8* contactPatches, uint8* contactPoints, uint32* contactFaceIndices, uint32 nbPatches, uint32 nbContacts);
		[LinkName("PxContactStreamIterator_hasNextPatch")] public static extern bool ContactStreamIterator_hasNextPatch(physx_PxContactStreamIterator_Pod* self__pod);
		[LinkName("PxContactStreamIterator_getTotalContactCount")] public static extern uint32 ContactStreamIterator_getTotalContactCount(physx_PxContactStreamIterator_Pod* self__pod);
		[LinkName("PxContactStreamIterator_getTotalPatchCount")] public static extern uint32 ContactStreamIterator_getTotalPatchCount(physx_PxContactStreamIterator_Pod* self__pod);
		[LinkName("PxContactStreamIterator_nextPatch_mut")] public static extern void ContactStreamIterator_nextPatch_mut(physx_PxContactStreamIterator_Pod* self__pod);
		[LinkName("PxContactStreamIterator_hasNextContact")] public static extern bool ContactStreamIterator_hasNextContact(physx_PxContactStreamIterator_Pod* self__pod);
		[LinkName("PxContactStreamIterator_nextContact_mut")] public static extern void ContactStreamIterator_nextContact_mut(physx_PxContactStreamIterator_Pod* self__pod);
		[LinkName("PxContactStreamIterator_getContactNormal")] public static extern physx_PxVec3_Pod* ContactStreamIterator_getContactNormal(physx_PxContactStreamIterator_Pod* self__pod);
		[LinkName("PxContactStreamIterator_getInvMassScale0")] public static extern float ContactStreamIterator_getInvMassScale0(physx_PxContactStreamIterator_Pod* self__pod);
		[LinkName("PxContactStreamIterator_getInvMassScale1")] public static extern float ContactStreamIterator_getInvMassScale1(physx_PxContactStreamIterator_Pod* self__pod);
		[LinkName("PxContactStreamIterator_getInvInertiaScale0")] public static extern float ContactStreamIterator_getInvInertiaScale0(physx_PxContactStreamIterator_Pod* self__pod);
		[LinkName("PxContactStreamIterator_getInvInertiaScale1")] public static extern float ContactStreamIterator_getInvInertiaScale1(physx_PxContactStreamIterator_Pod* self__pod);
		[LinkName("PxContactStreamIterator_getMaxImpulse")] public static extern float ContactStreamIterator_getMaxImpulse(physx_PxContactStreamIterator_Pod* self__pod);
		[LinkName("PxContactStreamIterator_getTargetVel")] public static extern physx_PxVec3_Pod* ContactStreamIterator_getTargetVel(physx_PxContactStreamIterator_Pod* self__pod);
		[LinkName("PxContactStreamIterator_getContactPoint")] public static extern physx_PxVec3_Pod* ContactStreamIterator_getContactPoint(physx_PxContactStreamIterator_Pod* self__pod);
		[LinkName("PxContactStreamIterator_getSeparation")] public static extern float ContactStreamIterator_getSeparation(physx_PxContactStreamIterator_Pod* self__pod);
		[LinkName("PxContactStreamIterator_getFaceIndex0")] public static extern uint32 ContactStreamIterator_getFaceIndex0(physx_PxContactStreamIterator_Pod* self__pod);
		[LinkName("PxContactStreamIterator_getFaceIndex1")] public static extern uint32 ContactStreamIterator_getFaceIndex1(physx_PxContactStreamIterator_Pod* self__pod);
		[LinkName("PxContactStreamIterator_getStaticFriction")] public static extern float ContactStreamIterator_getStaticFriction(physx_PxContactStreamIterator_Pod* self__pod);
		[LinkName("PxContactStreamIterator_getDynamicFriction")] public static extern float ContactStreamIterator_getDynamicFriction(physx_PxContactStreamIterator_Pod* self__pod);
		[LinkName("PxContactStreamIterator_getRestitution")] public static extern float ContactStreamIterator_getRestitution(physx_PxContactStreamIterator_Pod* self__pod);
		[LinkName("PxContactStreamIterator_getMaterialFlags")] public static extern uint32 ContactStreamIterator_getMaterialFlags(physx_PxContactStreamIterator_Pod* self__pod);
		[LinkName("PxContactStreamIterator_getMaterialIndex0")] public static extern uint16 ContactStreamIterator_getMaterialIndex0(physx_PxContactStreamIterator_Pod* self__pod);
		[LinkName("PxContactStreamIterator_getMaterialIndex1")] public static extern uint16 ContactStreamIterator_getMaterialIndex1(physx_PxContactStreamIterator_Pod* self__pod);
		[LinkName("PxContactStreamIterator_advanceToIndex_mut")] public static extern bool ContactStreamIterator_advanceToIndex_mut(physx_PxContactStreamIterator_Pod* self__pod, uint32 initialIndex);
		[LinkName("PxContactSet_getPoint")] public static extern physx_PxVec3_Pod* ContactSet_getPoint(physx_PxContactSet_Pod* self__pod, uint32 i);
		[LinkName("PxContactSet_setPoint_mut")] public static extern void ContactSet_setPoint_mut(physx_PxContactSet_Pod* self__pod, uint32 i, physx_PxVec3_Pod* p_pod);
		[LinkName("PxContactSet_getNormal")] public static extern physx_PxVec3_Pod* ContactSet_getNormal(physx_PxContactSet_Pod* self__pod, uint32 i);
		[LinkName("PxContactSet_setNormal_mut")] public static extern void ContactSet_setNormal_mut(physx_PxContactSet_Pod* self__pod, uint32 i, physx_PxVec3_Pod* n_pod);
		[LinkName("PxContactSet_getSeparation")] public static extern float ContactSet_getSeparation(physx_PxContactSet_Pod* self__pod, uint32 i);
		[LinkName("PxContactSet_setSeparation_mut")] public static extern void ContactSet_setSeparation_mut(physx_PxContactSet_Pod* self__pod, uint32 i, float s);
		[LinkName("PxContactSet_getTargetVelocity")] public static extern physx_PxVec3_Pod* ContactSet_getTargetVelocity(physx_PxContactSet_Pod* self__pod, uint32 i);
		[LinkName("PxContactSet_setTargetVelocity_mut")] public static extern void ContactSet_setTargetVelocity_mut(physx_PxContactSet_Pod* self__pod, uint32 i, physx_PxVec3_Pod* v_pod);
		[LinkName("PxContactSet_getInternalFaceIndex0_mut")] public static extern uint32 ContactSet_getInternalFaceIndex0_mut(physx_PxContactSet_Pod* self__pod, uint32 i);
		[LinkName("PxContactSet_getInternalFaceIndex1_mut")] public static extern uint32 ContactSet_getInternalFaceIndex1_mut(physx_PxContactSet_Pod* self__pod, uint32 i);
		[LinkName("PxContactSet_getMaxImpulse")] public static extern float ContactSet_getMaxImpulse(physx_PxContactSet_Pod* self__pod, uint32 i);
		[LinkName("PxContactSet_setMaxImpulse_mut")] public static extern void ContactSet_setMaxImpulse_mut(physx_PxContactSet_Pod* self__pod, uint32 i, float s);
		[LinkName("PxContactSet_getRestitution")] public static extern float ContactSet_getRestitution(physx_PxContactSet_Pod* self__pod, uint32 i);
		[LinkName("PxContactSet_setRestitution_mut")] public static extern void ContactSet_setRestitution_mut(physx_PxContactSet_Pod* self__pod, uint32 i, float r);
		[LinkName("PxContactSet_getStaticFriction")] public static extern float ContactSet_getStaticFriction(physx_PxContactSet_Pod* self__pod, uint32 i);
		[LinkName("PxContactSet_setStaticFriction_mut")] public static extern void ContactSet_setStaticFriction_mut(physx_PxContactSet_Pod* self__pod, uint32 i, float f);
		[LinkName("PxContactSet_getDynamicFriction")] public static extern float ContactSet_getDynamicFriction(physx_PxContactSet_Pod* self__pod, uint32 i);
		[LinkName("PxContactSet_setDynamicFriction_mut")] public static extern void ContactSet_setDynamicFriction_mut(physx_PxContactSet_Pod* self__pod, uint32 i, float f);
		[LinkName("PxContactSet_ignore_mut")] public static extern void ContactSet_ignore_mut(physx_PxContactSet_Pod* self__pod, uint32 i);
		[LinkName("PxContactSet_size")] public static extern uint32 ContactSet_size(physx_PxContactSet_Pod* self__pod);
		[LinkName("PxContactSet_getInvMassScale0")] public static extern float ContactSet_getInvMassScale0(physx_PxContactSet_Pod* self__pod);
		[LinkName("PxContactSet_getInvMassScale1")] public static extern float ContactSet_getInvMassScale1(physx_PxContactSet_Pod* self__pod);
		[LinkName("PxContactSet_getInvInertiaScale0")] public static extern float ContactSet_getInvInertiaScale0(physx_PxContactSet_Pod* self__pod);
		[LinkName("PxContactSet_getInvInertiaScale1")] public static extern float ContactSet_getInvInertiaScale1(physx_PxContactSet_Pod* self__pod);
		[LinkName("PxContactSet_setInvMassScale0_mut")] public static extern void ContactSet_setInvMassScale0_mut(physx_PxContactSet_Pod* self__pod, float scale);
		[LinkName("PxContactSet_setInvMassScale1_mut")] public static extern void ContactSet_setInvMassScale1_mut(physx_PxContactSet_Pod* self__pod, float scale);
		[LinkName("PxContactSet_setInvInertiaScale0_mut")] public static extern void ContactSet_setInvInertiaScale0_mut(physx_PxContactSet_Pod* self__pod, float scale);
		[LinkName("PxContactSet_setInvInertiaScale1_mut")] public static extern void ContactSet_setInvInertiaScale1_mut(physx_PxContactSet_Pod* self__pod, float scale);
		[LinkName("PxContactModifyCallback_onContactModify_mut")] public static extern void ContactModifyCallback_onContactModify_mut(physx_PxContactModifyCallback_Pod* self__pod, physx_PxContactModifyPair_Pod* pairs_pod, uint32 count);
		[LinkName("PxCCDContactModifyCallback_onCCDContactModify_mut")] public static extern void CCDContactModifyCallback_onCCDContactModify_mut(physx_PxCCDContactModifyCallback_Pod* self__pod, physx_PxContactModifyPair_Pod* pairs_pod, uint32 count);
		[LinkName("PxDeletionListener_onRelease_mut")] public static extern void DeletionListener_onRelease_mut(physx_PxDeletionListener_Pod* self__pod, physx_PxBase_Pod* observed_pod, void* userData, uint32 deletionEvent_pod);
		[LinkName("PxLockedData_getDataAccessFlags_mut")] public static extern physx_PxDataAccessFlags_Pod LockedData_getDataAccessFlags_mut(physx_PxLockedData_Pod* self__pod);
		[LinkName("PxLockedData_unlock_mut")] public static extern void LockedData_unlock_mut(physx_PxLockedData_Pod* self__pod);
		[LinkName("PxLockedData_delete")] public static extern void LockedData_delete(physx_PxLockedData_Pod* self__pod);
		[LinkName("PxMaterial_release_mut")] public static extern void Material_release_mut(physx_PxMaterial_Pod* self__pod);
		[LinkName("PxMaterial_getReferenceCount")] public static extern uint32 Material_getReferenceCount(physx_PxMaterial_Pod* self__pod);
		[LinkName("PxMaterial_acquireReference_mut")] public static extern void Material_acquireReference_mut(physx_PxMaterial_Pod* self__pod);
		[LinkName("PxMaterial_setDynamicFriction_mut")] public static extern void Material_setDynamicFriction_mut(physx_PxMaterial_Pod* self__pod, float coef);
		[LinkName("PxMaterial_getDynamicFriction")] public static extern float Material_getDynamicFriction(physx_PxMaterial_Pod* self__pod);
		[LinkName("PxMaterial_setStaticFriction_mut")] public static extern void Material_setStaticFriction_mut(physx_PxMaterial_Pod* self__pod, float coef);
		[LinkName("PxMaterial_getStaticFriction")] public static extern float Material_getStaticFriction(physx_PxMaterial_Pod* self__pod);
		[LinkName("PxMaterial_setRestitution_mut")] public static extern void Material_setRestitution_mut(physx_PxMaterial_Pod* self__pod, float rest);
		[LinkName("PxMaterial_getRestitution")] public static extern float Material_getRestitution(physx_PxMaterial_Pod* self__pod);
		[LinkName("PxMaterial_setFlag_mut")] public static extern void Material_setFlag_mut(physx_PxMaterial_Pod* self__pod, uint32 flag_pod, bool anonymous_arg1);
		[LinkName("PxMaterial_setFlags_mut")] public static extern void Material_setFlags_mut(physx_PxMaterial_Pod* self__pod, physx_PxMaterialFlags_Pod inFlags_pod);
		[LinkName("PxMaterial_getFlags")] public static extern physx_PxMaterialFlags_Pod Material_getFlags(physx_PxMaterial_Pod* self__pod);
		[LinkName("PxMaterial_setFrictionCombineMode_mut")] public static extern void Material_setFrictionCombineMode_mut(physx_PxMaterial_Pod* self__pod, uint32 combMode_pod);
		[LinkName("PxMaterial_getFrictionCombineMode")] public static extern uint32 Material_getFrictionCombineMode(physx_PxMaterial_Pod* self__pod);
		[LinkName("PxMaterial_setRestitutionCombineMode_mut")] public static extern void Material_setRestitutionCombineMode_mut(physx_PxMaterial_Pod* self__pod, uint32 combMode_pod);
		[LinkName("PxMaterial_getRestitutionCombineMode")] public static extern uint32 Material_getRestitutionCombineMode(physx_PxMaterial_Pod* self__pod);
		[LinkName("PxMaterial_getConcreteTypeName")] public static extern char8* Material_getConcreteTypeName(physx_PxMaterial_Pod* self__pod);
		[LinkName("PxPhysics_release_mut")] public static extern void Physics_release_mut(physx_PxPhysics_Pod* self__pod);
		[LinkName("PxPhysics_getFoundation_mut")] public static extern physx_PxFoundation_Pod* Physics_getFoundation_mut(physx_PxPhysics_Pod* self__pod);
		[LinkName("PxPhysics_createAggregate_mut")] public static extern physx_PxAggregate_Pod* Physics_createAggregate_mut(physx_PxPhysics_Pod* self__pod, uint32 maxSize, bool enableSelfCollision);
		[LinkName("PxPhysics_getTolerancesScale")] public static extern physx_PxTolerancesScale_Pod* Physics_getTolerancesScale(physx_PxPhysics_Pod* self__pod);
		[LinkName("PxPhysics_createTriangleMesh_mut")] public static extern physx_PxTriangleMesh_Pod* Physics_createTriangleMesh_mut(physx_PxPhysics_Pod* self__pod, physx_PxInputStream_Pod* stream_pod);
		[LinkName("PxPhysics_getNbTriangleMeshes")] public static extern uint32 Physics_getNbTriangleMeshes(physx_PxPhysics_Pod* self__pod);
		[LinkName("PxPhysics_getTriangleMeshes")] public static extern uint32 Physics_getTriangleMeshes(physx_PxPhysics_Pod* self__pod, physx_PxTriangleMesh_Pod** userBuffer_pod, uint32 bufferSize, uint32 startIndex);
		[LinkName("PxPhysics_createHeightField_mut")] public static extern physx_PxHeightField_Pod* Physics_createHeightField_mut(physx_PxPhysics_Pod* self__pod, physx_PxInputStream_Pod* stream_pod);
		[LinkName("PxPhysics_getNbHeightFields")] public static extern uint32 Physics_getNbHeightFields(physx_PxPhysics_Pod* self__pod);
		[LinkName("PxPhysics_getHeightFields")] public static extern uint32 Physics_getHeightFields(physx_PxPhysics_Pod* self__pod, physx_PxHeightField_Pod** userBuffer_pod, uint32 bufferSize, uint32 startIndex);
		[LinkName("PxPhysics_createConvexMesh_mut")] public static extern physx_PxConvexMesh_Pod* Physics_createConvexMesh_mut(physx_PxPhysics_Pod* self__pod, physx_PxInputStream_Pod* stream_pod);
		[LinkName("PxPhysics_getNbConvexMeshes")] public static extern uint32 Physics_getNbConvexMeshes(physx_PxPhysics_Pod* self__pod);
		[LinkName("PxPhysics_getConvexMeshes")] public static extern uint32 Physics_getConvexMeshes(physx_PxPhysics_Pod* self__pod, physx_PxConvexMesh_Pod** userBuffer_pod, uint32 bufferSize, uint32 startIndex);
		[LinkName("PxPhysics_createBVHStructure_mut")] public static extern physx_PxBVHStructure_Pod* Physics_createBVHStructure_mut(physx_PxPhysics_Pod* self__pod, physx_PxInputStream_Pod* stream_pod);
		[LinkName("PxPhysics_getNbBVHStructures")] public static extern uint32 Physics_getNbBVHStructures(physx_PxPhysics_Pod* self__pod);
		[LinkName("PxPhysics_getBVHStructures")] public static extern uint32 Physics_getBVHStructures(physx_PxPhysics_Pod* self__pod, physx_PxBVHStructure_Pod** userBuffer_pod, uint32 bufferSize, uint32 startIndex);
		[LinkName("PxPhysics_createScene_mut")] public static extern physx_PxScene_Pod* Physics_createScene_mut(physx_PxPhysics_Pod* self__pod, physx_PxSceneDesc_Pod* sceneDesc_pod);
		[LinkName("PxPhysics_getNbScenes")] public static extern uint32 Physics_getNbScenes(physx_PxPhysics_Pod* self__pod);
		[LinkName("PxPhysics_getScenes")] public static extern uint32 Physics_getScenes(physx_PxPhysics_Pod* self__pod, physx_PxScene_Pod** userBuffer_pod, uint32 bufferSize, uint32 startIndex);
		[LinkName("PxPhysics_createRigidStatic_mut")] public static extern physx_PxRigidStatic_Pod* Physics_createRigidStatic_mut(physx_PxPhysics_Pod* self__pod, physx_PxTransform_Pod* pose_pod);
		[LinkName("PxPhysics_createRigidDynamic_mut")] public static extern physx_PxRigidDynamic_Pod* Physics_createRigidDynamic_mut(physx_PxPhysics_Pod* self__pod, physx_PxTransform_Pod* pose_pod);
		[LinkName("PxPhysics_createPruningStructure_mut")] public static extern physx_PxPruningStructure_Pod* Physics_createPruningStructure_mut(physx_PxPhysics_Pod* self__pod, physx_PxRigidActor_Pod** actors_pod, uint32 nbActors);
		[LinkName("PxPhysics_createShape_mut")] public static extern physx_PxShape_Pod* Physics_createShape_mut(physx_PxPhysics_Pod* self__pod, physx_PxGeometry_Pod* geometry_pod, physx_PxMaterial_Pod* material_pod, bool isExclusive, physx_PxShapeFlags_Pod shapeFlags_pod);
		[LinkName("PxPhysics_createShape_mut_1")] public static extern physx_PxShape_Pod* Physics_createShape_mut_1(physx_PxPhysics_Pod* self__pod, physx_PxGeometry_Pod* geometry_pod, physx_PxMaterial_Pod** materials_pod, uint16 materialCount, bool isExclusive, physx_PxShapeFlags_Pod shapeFlags_pod);
		[LinkName("PxPhysics_getNbShapes")] public static extern uint32 Physics_getNbShapes(physx_PxPhysics_Pod* self__pod);
		[LinkName("PxPhysics_getShapes")] public static extern uint32 Physics_getShapes(physx_PxPhysics_Pod* self__pod, physx_PxShape_Pod** userBuffer_pod, uint32 bufferSize, uint32 startIndex);
		[LinkName("PxPhysics_createConstraint_mut")] public static extern physx_PxConstraint_Pod* Physics_createConstraint_mut(physx_PxPhysics_Pod* self__pod, physx_PxRigidActor_Pod* actor0_pod, physx_PxRigidActor_Pod* actor1_pod, physx_PxConstraintConnector_Pod* connector_pod, physx_PxConstraintShaderTable_Pod* shaders_pod, uint32 dataSize);
		[LinkName("PxPhysics_createArticulation_mut")] public static extern physx_PxArticulation_Pod* Physics_createArticulation_mut(physx_PxPhysics_Pod* self__pod);
		[LinkName("PxPhysics_createArticulationReducedCoordinate_mut")] public static extern physx_PxArticulationReducedCoordinate_Pod* Physics_createArticulationReducedCoordinate_mut(physx_PxPhysics_Pod* self__pod);
		[LinkName("PxPhysics_createMaterial_mut")] public static extern physx_PxMaterial_Pod* Physics_createMaterial_mut(physx_PxPhysics_Pod* self__pod, float staticFriction, float dynamicFriction, float restitution);
		[LinkName("PxPhysics_getNbMaterials")] public static extern uint32 Physics_getNbMaterials(physx_PxPhysics_Pod* self__pod);
		[LinkName("PxPhysics_getMaterials")] public static extern uint32 Physics_getMaterials(physx_PxPhysics_Pod* self__pod, physx_PxMaterial_Pod** userBuffer_pod, uint32 bufferSize, uint32 startIndex);
		[LinkName("PxPhysics_registerDeletionListener_mut")] public static extern void Physics_registerDeletionListener_mut(physx_PxPhysics_Pod* self__pod, physx_PxDeletionListener_Pod* observer_pod, physx_PxDeletionEventFlags_Pod* deletionEvents_pod, bool restrictedObjectSet);
		[LinkName("PxPhysics_unregisterDeletionListener_mut")] public static extern void Physics_unregisterDeletionListener_mut(physx_PxPhysics_Pod* self__pod, physx_PxDeletionListener_Pod* observer_pod);
		[LinkName("PxPhysics_registerDeletionListenerObjects_mut")] public static extern void Physics_registerDeletionListenerObjects_mut(physx_PxPhysics_Pod* self__pod, physx_PxDeletionListener_Pod* observer_pod, physx_PxBase_Pod** observables_pod, uint32 observableCount);
		[LinkName("PxPhysics_unregisterDeletionListenerObjects_mut")] public static extern void Physics_unregisterDeletionListenerObjects_mut(physx_PxPhysics_Pod* self__pod, physx_PxDeletionListener_Pod* observer_pod, physx_PxBase_Pod** observables_pod, uint32 observableCount);
		[LinkName("PxPhysics_getPhysicsInsertionCallback_mut")] public static extern physx_PxPhysicsInsertionCallback_Pod* Physics_getPhysicsInsertionCallback_mut(physx_PxPhysics_Pod* self__pod);
		[LinkName("phys_PxRegisterArticulations")] public static extern void RegisterArticulations(physx_PxPhysics_Pod* physics_pod);
		[LinkName("phys_PxRegisterArticulationsReducedCoordinate")] public static extern void RegisterArticulationsReducedCoordinate(physx_PxPhysics_Pod* physics_pod);
		[LinkName("phys_PxRegisterHeightFields")] public static extern void RegisterHeightFields(physx_PxPhysics_Pod* physics_pod);
		[LinkName("phys_PxCreateBasePhysics")] public static extern physx_PxPhysics_Pod* CreateBasePhysics(uint32 version, physx_PxFoundation_Pod* foundation_pod, physx_PxTolerancesScale_Pod* scale_pod, bool trackOutstandingAllocations, physx_PxPvd_Pod* pvd_pod);
		[LinkName("phys_PxCreatePhysics")] public static extern physx_PxPhysics_Pod* CreatePhysics(uint32 version, physx_PxFoundation_Pod* foundation_pod, physx_PxTolerancesScale_Pod* scale_pod, bool trackOutstandingAllocations, physx_PxPvd_Pod* pvd_pod);
		[LinkName("phys_PxGetPhysics")] public static extern physx_PxPhysics_Pod* GetPhysics();
		[LinkName("PxRigidDynamic_setKinematicTarget_mut")] public static extern void RigidDynamic_setKinematicTarget_mut(physx_PxRigidDynamic_Pod* self__pod, physx_PxTransform_Pod* destination_pod);
		[LinkName("PxRigidDynamic_getKinematicTarget")] public static extern bool RigidDynamic_getKinematicTarget(physx_PxRigidDynamic_Pod* self__pod, physx_PxTransform_Pod* target_pod);
		[LinkName("PxRigidDynamic_isSleeping")] public static extern bool RigidDynamic_isSleeping(physx_PxRigidDynamic_Pod* self__pod);
		[LinkName("PxRigidDynamic_setSleepThreshold_mut")] public static extern void RigidDynamic_setSleepThreshold_mut(physx_PxRigidDynamic_Pod* self__pod, float threshold);
		[LinkName("PxRigidDynamic_getSleepThreshold")] public static extern float RigidDynamic_getSleepThreshold(physx_PxRigidDynamic_Pod* self__pod);
		[LinkName("PxRigidDynamic_setStabilizationThreshold_mut")] public static extern void RigidDynamic_setStabilizationThreshold_mut(physx_PxRigidDynamic_Pod* self__pod, float threshold);
		[LinkName("PxRigidDynamic_getStabilizationThreshold")] public static extern float RigidDynamic_getStabilizationThreshold(physx_PxRigidDynamic_Pod* self__pod);
		[LinkName("PxRigidDynamic_getRigidDynamicLockFlags")] public static extern physx_PxRigidDynamicLockFlags_Pod RigidDynamic_getRigidDynamicLockFlags(physx_PxRigidDynamic_Pod* self__pod);
		[LinkName("PxRigidDynamic_setRigidDynamicLockFlag_mut")] public static extern void RigidDynamic_setRigidDynamicLockFlag_mut(physx_PxRigidDynamic_Pod* self__pod, uint32 flag_pod, bool value);
		[LinkName("PxRigidDynamic_setRigidDynamicLockFlags_mut")] public static extern void RigidDynamic_setRigidDynamicLockFlags_mut(physx_PxRigidDynamic_Pod* self__pod, physx_PxRigidDynamicLockFlags_Pod flags_pod);
		[LinkName("PxRigidDynamic_setWakeCounter_mut")] public static extern void RigidDynamic_setWakeCounter_mut(physx_PxRigidDynamic_Pod* self__pod, float wakeCounterValue);
		[LinkName("PxRigidDynamic_getWakeCounter")] public static extern float RigidDynamic_getWakeCounter(physx_PxRigidDynamic_Pod* self__pod);
		[LinkName("PxRigidDynamic_wakeUp_mut")] public static extern void RigidDynamic_wakeUp_mut(physx_PxRigidDynamic_Pod* self__pod);
		[LinkName("PxRigidDynamic_putToSleep_mut")] public static extern void RigidDynamic_putToSleep_mut(physx_PxRigidDynamic_Pod* self__pod);
		[LinkName("PxRigidDynamic_setSolverIterationCounts_mut")] public static extern void RigidDynamic_setSolverIterationCounts_mut(physx_PxRigidDynamic_Pod* self__pod, uint32 minPositionIters, uint32 minVelocityIters);
		[LinkName("PxRigidDynamic_getSolverIterationCounts")] public static extern void RigidDynamic_getSolverIterationCounts(physx_PxRigidDynamic_Pod* self__pod, uint32* minPositionIters_pod, uint32* minVelocityIters_pod);
		[LinkName("PxRigidDynamic_getContactReportThreshold")] public static extern float RigidDynamic_getContactReportThreshold(physx_PxRigidDynamic_Pod* self__pod);
		[LinkName("PxRigidDynamic_setContactReportThreshold_mut")] public static extern void RigidDynamic_setContactReportThreshold_mut(physx_PxRigidDynamic_Pod* self__pod, float threshold);
		[LinkName("PxRigidDynamic_getConcreteTypeName")] public static extern char8* RigidDynamic_getConcreteTypeName(physx_PxRigidDynamic_Pod* self__pod);
		[LinkName("PxRigidStatic_getConcreteTypeName")] public static extern char8* RigidStatic_getConcreteTypeName(physx_PxRigidStatic_Pod* self__pod);
		[LinkName("PxBroadPhaseCallback_delete")] public static extern void BroadPhaseCallback_delete(physx_PxBroadPhaseCallback_Pod* self__pod);
		[LinkName("PxBroadPhaseCallback_onObjectOutOfBounds_mut")] public static extern void BroadPhaseCallback_onObjectOutOfBounds_mut(physx_PxBroadPhaseCallback_Pod* self__pod, physx_PxShape_Pod* shape_pod, physx_PxActor_Pod* actor_pod);
		[LinkName("PxBroadPhaseCallback_onObjectOutOfBounds_mut_1")] public static extern void BroadPhaseCallback_onObjectOutOfBounds_mut_1(physx_PxBroadPhaseCallback_Pod* self__pod, physx_PxAggregate_Pod* aggregate_pod);
		[LinkName("PxSceneLimits_new")] public static extern physx_PxSceneLimits_Pod SceneLimits_new();
		[LinkName("PxSceneLimits_setToDefault_mut")] public static extern void SceneLimits_setToDefault_mut(physx_PxSceneLimits_Pod* self__pod);
		[LinkName("PxSceneLimits_isValid")] public static extern bool SceneLimits_isValid(physx_PxSceneLimits_Pod* self__pod);
		[LinkName("PxSceneLimits_new_1")] public static extern physx_PxSceneLimits_Pod SceneLimits_new_1();
		[LinkName("PxSceneLimits_setToDefault_mut_1")] public static extern void SceneLimits_setToDefault_mut_1(physx_PxSceneLimits_Pod* self__pod);
		[LinkName("PxSceneLimits_isValid_1")] public static extern bool SceneLimits_isValid_1(physx_PxSceneLimits_Pod* self__pod);
		[LinkName("PxgDynamicsMemoryConfig_new")] public static extern physx_PxgDynamicsMemoryConfig_Pod gDynamicsMemoryConfig_new();
		[LinkName("PxSceneDesc_new")] public static extern physx_PxSceneDesc_Pod SceneDesc_new(physx_PxTolerancesScale_Pod* scale_pod);
		[LinkName("PxSceneDesc_setToDefault_mut")] public static extern void SceneDesc_setToDefault_mut(physx_PxSceneDesc_Pod* self__pod, physx_PxTolerancesScale_Pod* scale_pod);
		[LinkName("PxSceneDesc_isValid")] public static extern bool SceneDesc_isValid(physx_PxSceneDesc_Pod* self__pod);
		[LinkName("PxSceneDesc_getTolerancesScale")] public static extern physx_PxTolerancesScale_Pod* SceneDesc_getTolerancesScale(physx_PxSceneDesc_Pod* self__pod);
		[LinkName("PxSceneDesc_new_1")] public static extern physx_PxSceneDesc_Pod SceneDesc_new_1(physx_PxTolerancesScale_Pod* scale_pod);
		[LinkName("PxSceneDesc_setToDefault_mut_1")] public static extern void SceneDesc_setToDefault_mut_1(physx_PxSceneDesc_Pod* self__pod, physx_PxTolerancesScale_Pod* scale_pod);
		[LinkName("PxSceneDesc_isValid_1")] public static extern bool SceneDesc_isValid_1(physx_PxSceneDesc_Pod* self__pod);
		[LinkName("PxSimulationStatistics_getNbBroadPhaseAdds")] public static extern uint32 SimulationStatistics_getNbBroadPhaseAdds(physx_PxSimulationStatistics_Pod* self__pod);
		[LinkName("PxSimulationStatistics_getNbBroadPhaseRemoves")] public static extern uint32 SimulationStatistics_getNbBroadPhaseRemoves(physx_PxSimulationStatistics_Pod* self__pod);
		[LinkName("PxSimulationStatistics_getRbPairStats")] public static extern uint32 SimulationStatistics_getRbPairStats(physx_PxSimulationStatistics_Pod* self__pod, uint32 pairType_pod, int g0_pod, int g1_pod);
		[LinkName("PxSimulationStatistics_new")] public static extern physx_PxSimulationStatistics_Pod SimulationStatistics_new();
		[LinkName("PxPvdSceneClient_setScenePvdFlag_mut")] public static extern void PvdSceneClient_setScenePvdFlag_mut(physx_PxPvdSceneClient_Pod* self__pod, uint32 flag_pod, bool value);
		[LinkName("PxPvdSceneClient_setScenePvdFlags_mut")] public static extern void PvdSceneClient_setScenePvdFlags_mut(physx_PxPvdSceneClient_Pod* self__pod, physx_PxPvdSceneFlags_Pod flags_pod);
		[LinkName("PxPvdSceneClient_getScenePvdFlags")] public static extern physx_PxPvdSceneFlags_Pod PvdSceneClient_getScenePvdFlags(physx_PxPvdSceneClient_Pod* self__pod);
		[LinkName("PxPvdSceneClient_updateCamera_mut")] public static extern void PvdSceneClient_updateCamera_mut(physx_PxPvdSceneClient_Pod* self__pod, char8* name, physx_PxVec3_Pod* origin_pod, physx_PxVec3_Pod* up_pod, physx_PxVec3_Pod* target_pod);
		[LinkName("PxPvdSceneClient_drawPoints_mut")] public static extern void PvdSceneClient_drawPoints_mut(physx_PxPvdSceneClient_Pod* self__pod, physx_pvdsdk_PvdDebugPoint_Pod* points_pod, uint32 count);
		[LinkName("PxPvdSceneClient_drawLines_mut")] public static extern void PvdSceneClient_drawLines_mut(physx_PxPvdSceneClient_Pod* self__pod, physx_pvdsdk_PvdDebugLine_Pod* lines_pod, uint32 count);
		[LinkName("PxPvdSceneClient_drawTriangles_mut")] public static extern void PvdSceneClient_drawTriangles_mut(physx_PxPvdSceneClient_Pod* self__pod, physx_pvdsdk_PvdDebugTriangle_Pod* triangles_pod, uint32 count);
		[LinkName("PxPvdSceneClient_drawText_mut")] public static extern void PvdSceneClient_drawText_mut(physx_PxPvdSceneClient_Pod* self__pod, physx_pvdsdk_PvdDebugText_Pod* text_pod);
		[LinkName("PxPvdSceneClient_getClientInternal_mut")] public static extern physx_pvdsdk_PvdClient_Pod* PvdSceneClient_getClientInternal_mut(physx_PxPvdSceneClient_Pod* self__pod);
		[LinkName("PxDominanceGroupPair_new")] public static extern physx_PxDominanceGroupPair_Pod DominanceGroupPair_new(uint8 a, uint8 b);
		[LinkName("PxQueryCache_new")] public static extern physx_PxQueryCache_Pod QueryCache_new();
		[LinkName("PxQueryCache_new_1")] public static extern physx_PxQueryCache_Pod QueryCache_new_1(physx_PxShape_Pod* s_pod, uint32 findex);
		[LinkName("PxScene_release_mut")] public static extern void Scene_release_mut(physx_PxScene_Pod* self__pod);
		[LinkName("PxScene_setFlag_mut")] public static extern void Scene_setFlag_mut(physx_PxScene_Pod* self__pod, uint32 flag_pod, bool value);
		[LinkName("PxScene_getFlags")] public static extern physx_PxSceneFlags_Pod Scene_getFlags(physx_PxScene_Pod* self__pod);
		[LinkName("PxScene_setLimits_mut")] public static extern void Scene_setLimits_mut(physx_PxScene_Pod* self__pod, physx_PxSceneLimits_Pod* limits_pod);
		[LinkName("PxScene_getLimits")] public static extern physx_PxSceneLimits_Pod Scene_getLimits(physx_PxScene_Pod* self__pod);
		[LinkName("PxScene_getPhysics_mut")] public static extern physx_PxPhysics_Pod* Scene_getPhysics_mut(physx_PxScene_Pod* self__pod);
		[LinkName("PxScene_getTimestamp")] public static extern uint32 Scene_getTimestamp(physx_PxScene_Pod* self__pod);
		[LinkName("PxScene_addArticulation_mut")] public static extern void Scene_addArticulation_mut(physx_PxScene_Pod* self__pod, physx_PxArticulationBase_Pod* articulation_pod);
		[LinkName("PxScene_removeArticulation_mut")] public static extern void Scene_removeArticulation_mut(physx_PxScene_Pod* self__pod, physx_PxArticulationBase_Pod* articulation_pod, bool wakeOnLostTouch);
		[LinkName("PxScene_addActor_mut")] public static extern void Scene_addActor_mut(physx_PxScene_Pod* self__pod, physx_PxActor_Pod* actor_pod, physx_PxBVHStructure_Pod* bvhStructure_pod);
		[LinkName("PxScene_addActors_mut")] public static extern void Scene_addActors_mut(physx_PxScene_Pod* self__pod, physx_PxActor_Pod** actors_pod, uint32 nbActors);
		[LinkName("PxScene_addActors_mut_1")] public static extern void Scene_addActors_mut_1(physx_PxScene_Pod* self__pod, physx_PxPruningStructure_Pod* pruningStructure_pod);
		[LinkName("PxScene_removeActor_mut")] public static extern void Scene_removeActor_mut(physx_PxScene_Pod* self__pod, physx_PxActor_Pod* actor_pod, bool wakeOnLostTouch);
		[LinkName("PxScene_removeActors_mut")] public static extern void Scene_removeActors_mut(physx_PxScene_Pod* self__pod, physx_PxActor_Pod** actors_pod, uint32 nbActors, bool wakeOnLostTouch);
		[LinkName("PxScene_addAggregate_mut")] public static extern void Scene_addAggregate_mut(physx_PxScene_Pod* self__pod, physx_PxAggregate_Pod* aggregate_pod);
		[LinkName("PxScene_removeAggregate_mut")] public static extern void Scene_removeAggregate_mut(physx_PxScene_Pod* self__pod, physx_PxAggregate_Pod* aggregate_pod, bool wakeOnLostTouch);
		[LinkName("PxScene_addCollection_mut")] public static extern void Scene_addCollection_mut(physx_PxScene_Pod* self__pod, physx_PxCollection_Pod* collection_pod);
		[LinkName("PxScene_getNbActors")] public static extern uint32 Scene_getNbActors(physx_PxScene_Pod* self__pod, physx_PxActorTypeFlags_Pod types_pod);
		[LinkName("PxScene_getActors")] public static extern uint32 Scene_getActors(physx_PxScene_Pod* self__pod, physx_PxActorTypeFlags_Pod types_pod, physx_PxActor_Pod** userBuffer_pod, uint32 bufferSize, uint32 startIndex);
		[LinkName("PxScene_getActiveActors_mut")] public static extern physx_PxActor_Pod** Scene_getActiveActors_mut(physx_PxScene_Pod* self__pod, uint32* nbActorsOut_pod);
		[LinkName("PxScene_getNbArticulations")] public static extern uint32 Scene_getNbArticulations(physx_PxScene_Pod* self__pod);
		[LinkName("PxScene_getArticulations")] public static extern uint32 Scene_getArticulations(physx_PxScene_Pod* self__pod, physx_PxArticulationBase_Pod** userBuffer_pod, uint32 bufferSize, uint32 startIndex);
		[LinkName("PxScene_getNbConstraints")] public static extern uint32 Scene_getNbConstraints(physx_PxScene_Pod* self__pod);
		[LinkName("PxScene_getConstraints")] public static extern uint32 Scene_getConstraints(physx_PxScene_Pod* self__pod, physx_PxConstraint_Pod** userBuffer_pod, uint32 bufferSize, uint32 startIndex);
		[LinkName("PxScene_getNbAggregates")] public static extern uint32 Scene_getNbAggregates(physx_PxScene_Pod* self__pod);
		[LinkName("PxScene_getAggregates")] public static extern uint32 Scene_getAggregates(physx_PxScene_Pod* self__pod, physx_PxAggregate_Pod** userBuffer_pod, uint32 bufferSize, uint32 startIndex);
		[LinkName("PxScene_setDominanceGroupPair_mut")] public static extern void Scene_setDominanceGroupPair_mut(physx_PxScene_Pod* self__pod, uint8 group1, uint8 group2, physx_PxDominanceGroupPair_Pod* dominance_pod);
		[LinkName("PxScene_getDominanceGroupPair")] public static extern physx_PxDominanceGroupPair_Pod Scene_getDominanceGroupPair(physx_PxScene_Pod* self__pod, uint8 group1, uint8 group2);
		[LinkName("PxScene_getCpuDispatcher")] public static extern physx_PxCpuDispatcher_Pod* Scene_getCpuDispatcher(physx_PxScene_Pod* self__pod);
		[LinkName("PxScene_getCudaContextManager")] public static extern physx_PxCudaContextManager_Pod* Scene_getCudaContextManager(physx_PxScene_Pod* self__pod);
		[LinkName("PxScene_createClient_mut")] public static extern uint8 Scene_createClient_mut(physx_PxScene_Pod* self__pod);
		[LinkName("PxScene_setSimulationEventCallback_mut")] public static extern void Scene_setSimulationEventCallback_mut(physx_PxScene_Pod* self__pod, physx_PxSimulationEventCallback_Pod* callback_pod);
		[LinkName("PxScene_getSimulationEventCallback")] public static extern physx_PxSimulationEventCallback_Pod* Scene_getSimulationEventCallback(physx_PxScene_Pod* self__pod);
		[LinkName("PxScene_setContactModifyCallback_mut")] public static extern void Scene_setContactModifyCallback_mut(physx_PxScene_Pod* self__pod, physx_PxContactModifyCallback_Pod* callback_pod);
		[LinkName("PxScene_setCCDContactModifyCallback_mut")] public static extern void Scene_setCCDContactModifyCallback_mut(physx_PxScene_Pod* self__pod, physx_PxCCDContactModifyCallback_Pod* callback_pod);
		[LinkName("PxScene_getContactModifyCallback")] public static extern physx_PxContactModifyCallback_Pod* Scene_getContactModifyCallback(physx_PxScene_Pod* self__pod);
		[LinkName("PxScene_getCCDContactModifyCallback")] public static extern physx_PxCCDContactModifyCallback_Pod* Scene_getCCDContactModifyCallback(physx_PxScene_Pod* self__pod);
		[LinkName("PxScene_setBroadPhaseCallback_mut")] public static extern void Scene_setBroadPhaseCallback_mut(physx_PxScene_Pod* self__pod, physx_PxBroadPhaseCallback_Pod* callback_pod);
		[LinkName("PxScene_getBroadPhaseCallback")] public static extern physx_PxBroadPhaseCallback_Pod* Scene_getBroadPhaseCallback(physx_PxScene_Pod* self__pod);
		[LinkName("PxScene_setFilterShaderData_mut")] public static extern void Scene_setFilterShaderData_mut(physx_PxScene_Pod* self__pod, void* data, uint32 dataSize);
		[LinkName("PxScene_getFilterShaderData")] public static extern void* Scene_getFilterShaderData(physx_PxScene_Pod* self__pod);
		[LinkName("PxScene_getFilterShaderDataSize")] public static extern uint32 Scene_getFilterShaderDataSize(physx_PxScene_Pod* self__pod);
		[LinkName("PxScene_getFilterShader")] public static extern void* Scene_getFilterShader(physx_PxScene_Pod* self__pod);
		[LinkName("PxScene_getFilterCallback")] public static extern physx_PxSimulationFilterCallback_Pod* Scene_getFilterCallback(physx_PxScene_Pod* self__pod);
		[LinkName("PxScene_resetFiltering_mut")] public static extern void Scene_resetFiltering_mut(physx_PxScene_Pod* self__pod, physx_PxActor_Pod* actor_pod);
		[LinkName("PxScene_resetFiltering_mut_1")] public static extern void Scene_resetFiltering_mut_1(physx_PxScene_Pod* self__pod, physx_PxRigidActor_Pod* actor_pod, physx_PxShape_Pod** shapes_pod, uint32 shapeCount);
		[LinkName("PxScene_getKinematicKinematicFilteringMode")] public static extern uint32 Scene_getKinematicKinematicFilteringMode(physx_PxScene_Pod* self__pod);
		[LinkName("PxScene_getStaticKinematicFilteringMode")] public static extern uint32 Scene_getStaticKinematicFilteringMode(physx_PxScene_Pod* self__pod);
		[LinkName("PxScene_simulate_mut")] public static extern void Scene_simulate_mut(physx_PxScene_Pod* self__pod, float elapsedTime, physx_PxBaseTask_Pod* completionTask_pod, void* scratchMemBlock, uint32 scratchMemBlockSize, bool controlSimulation);
		[LinkName("PxScene_advance_mut")] public static extern void Scene_advance_mut(physx_PxScene_Pod* self__pod, physx_PxBaseTask_Pod* completionTask_pod);
		[LinkName("PxScene_collide_mut")] public static extern void Scene_collide_mut(physx_PxScene_Pod* self__pod, float elapsedTime, physx_PxBaseTask_Pod* completionTask_pod, void* scratchMemBlock, uint32 scratchMemBlockSize, bool controlSimulation);
		[LinkName("PxScene_checkResults_mut")] public static extern bool Scene_checkResults_mut(physx_PxScene_Pod* self__pod, bool block);
		[LinkName("PxScene_fetchCollision_mut")] public static extern bool Scene_fetchCollision_mut(physx_PxScene_Pod* self__pod, bool block);
		[LinkName("PxScene_fetchResults_mut")] public static extern bool Scene_fetchResults_mut(physx_PxScene_Pod* self__pod, bool block, uint32* errorState);
		[LinkName("PxScene_fetchResultsStart_mut")] public static extern bool Scene_fetchResultsStart_mut(physx_PxScene_Pod* self__pod, physx_PxContactPairHeader_Pod** contactPairs_pod, uint32* nbContactPairs_pod, bool block);
		[LinkName("PxScene_processCallbacks_mut")] public static extern void Scene_processCallbacks_mut(physx_PxScene_Pod* self__pod, physx_PxBaseTask_Pod* continuation_pod);
		[LinkName("PxScene_fetchResultsFinish_mut")] public static extern void Scene_fetchResultsFinish_mut(physx_PxScene_Pod* self__pod, uint32* errorState);
		[LinkName("PxScene_flushSimulation_mut")] public static extern void Scene_flushSimulation_mut(physx_PxScene_Pod* self__pod, bool sendPendingReports);
		[LinkName("PxScene_setGravity_mut")] public static extern void Scene_setGravity_mut(physx_PxScene_Pod* self__pod, physx_PxVec3_Pod* vec_pod);
		[LinkName("PxScene_getGravity")] public static extern physx_PxVec3_Pod Scene_getGravity(physx_PxScene_Pod* self__pod);
		[LinkName("PxScene_setBounceThresholdVelocity_mut")] public static extern void Scene_setBounceThresholdVelocity_mut(physx_PxScene_Pod* self__pod, float t);
		[LinkName("PxScene_getBounceThresholdVelocity")] public static extern float Scene_getBounceThresholdVelocity(physx_PxScene_Pod* self__pod);
		[LinkName("PxScene_setCCDMaxPasses_mut")] public static extern void Scene_setCCDMaxPasses_mut(physx_PxScene_Pod* self__pod, uint32 ccdMaxPasses);
		[LinkName("PxScene_getCCDMaxPasses")] public static extern uint32 Scene_getCCDMaxPasses(physx_PxScene_Pod* self__pod);
		[LinkName("PxScene_getFrictionOffsetThreshold")] public static extern float Scene_getFrictionOffsetThreshold(physx_PxScene_Pod* self__pod);
		[LinkName("PxScene_setFrictionType_mut")] public static extern void Scene_setFrictionType_mut(physx_PxScene_Pod* self__pod, uint32 frictionType_pod);
		[LinkName("PxScene_getFrictionType")] public static extern uint32 Scene_getFrictionType(physx_PxScene_Pod* self__pod);
		[LinkName("PxScene_setVisualizationParameter_mut")] public static extern bool Scene_setVisualizationParameter_mut(physx_PxScene_Pod* self__pod, uint32 param_pod, float value);
		[LinkName("PxScene_getVisualizationParameter")] public static extern float Scene_getVisualizationParameter(physx_PxScene_Pod* self__pod, uint32 paramEnum_pod);
		[LinkName("PxScene_setVisualizationCullingBox_mut")] public static extern void Scene_setVisualizationCullingBox_mut(physx_PxScene_Pod* self__pod, physx_PxBounds3_Pod* box_pod);
		[LinkName("PxScene_getVisualizationCullingBox")] public static extern physx_PxBounds3_Pod Scene_getVisualizationCullingBox(physx_PxScene_Pod* self__pod);
		[LinkName("PxScene_getRenderBuffer_mut")] public static extern physx_PxRenderBuffer_Pod* Scene_getRenderBuffer_mut(physx_PxScene_Pod* self__pod);
		[LinkName("PxScene_getSimulationStatistics")] public static extern void Scene_getSimulationStatistics(physx_PxScene_Pod* self__pod, physx_PxSimulationStatistics_Pod* stats_pod);
		[LinkName("PxScene_getStaticStructure")] public static extern uint32 Scene_getStaticStructure(physx_PxScene_Pod* self__pod);
		[LinkName("PxScene_getDynamicStructure")] public static extern uint32 Scene_getDynamicStructure(physx_PxScene_Pod* self__pod);
		[LinkName("PxScene_flushQueryUpdates_mut")] public static extern void Scene_flushQueryUpdates_mut(physx_PxScene_Pod* self__pod);
		[LinkName("PxScene_createBatchQuery_mut")] public static extern physx_PxBatchQuery_Pod* Scene_createBatchQuery_mut(physx_PxScene_Pod* self__pod, physx_PxBatchQueryDesc_Pod* desc_pod);
		[LinkName("PxScene_setDynamicTreeRebuildRateHint_mut")] public static extern void Scene_setDynamicTreeRebuildRateHint_mut(physx_PxScene_Pod* self__pod, uint32 dynamicTreeRebuildRateHint);
		[LinkName("PxScene_getDynamicTreeRebuildRateHint")] public static extern uint32 Scene_getDynamicTreeRebuildRateHint(physx_PxScene_Pod* self__pod);
		[LinkName("PxScene_forceDynamicTreeRebuild_mut")] public static extern void Scene_forceDynamicTreeRebuild_mut(physx_PxScene_Pod* self__pod, bool rebuildStaticStructure, bool rebuildDynamicStructure);
		[LinkName("PxScene_setSceneQueryUpdateMode_mut")] public static extern void Scene_setSceneQueryUpdateMode_mut(physx_PxScene_Pod* self__pod, uint32 updateMode_pod);
		[LinkName("PxScene_getSceneQueryUpdateMode")] public static extern uint32 Scene_getSceneQueryUpdateMode(physx_PxScene_Pod* self__pod);
		[LinkName("PxScene_sceneQueriesUpdate_mut")] public static extern void Scene_sceneQueriesUpdate_mut(physx_PxScene_Pod* self__pod, physx_PxBaseTask_Pod* completionTask_pod, bool controlSimulation);
		[LinkName("PxScene_checkQueries_mut")] public static extern bool Scene_checkQueries_mut(physx_PxScene_Pod* self__pod, bool block);
		[LinkName("PxScene_fetchQueries_mut")] public static extern bool Scene_fetchQueries_mut(physx_PxScene_Pod* self__pod, bool block);
		[LinkName("PxScene_raycast")] public static extern bool Scene_raycast(physx_PxScene_Pod* self__pod, physx_PxVec3_Pod* origin_pod, physx_PxVec3_Pod* unitDir_pod, float distance, physx_PxRaycastCallback_Pod* hitCall_pod, physx_PxHitFlags_Pod hitFlags_pod, physx_PxQueryFilterData_Pod* filterData_pod, physx_PxQueryFilterCallback_Pod* filterCall_pod, physx_PxQueryCache_Pod* cache_pod);
		[LinkName("PxScene_sweep")] public static extern bool Scene_sweep(physx_PxScene_Pod* self__pod, physx_PxGeometry_Pod* geometry_pod, physx_PxTransform_Pod* pose_pod, physx_PxVec3_Pod* unitDir_pod, float distance, physx_PxSweepCallback_Pod* hitCall_pod, physx_PxHitFlags_Pod hitFlags_pod, physx_PxQueryFilterData_Pod* filterData_pod, physx_PxQueryFilterCallback_Pod* filterCall_pod, physx_PxQueryCache_Pod* cache_pod, float inflation);
		[LinkName("PxScene_overlap")] public static extern bool Scene_overlap(physx_PxScene_Pod* self__pod, physx_PxGeometry_Pod* geometry_pod, physx_PxTransform_Pod* pose_pod, physx_PxOverlapCallback_Pod* hitCall_pod, physx_PxQueryFilterData_Pod* filterData_pod, physx_PxQueryFilterCallback_Pod* filterCall_pod);
		[LinkName("PxScene_getSceneQueryStaticTimestamp")] public static extern uint32 Scene_getSceneQueryStaticTimestamp(physx_PxScene_Pod* self__pod);
		[LinkName("PxScene_getBroadPhaseType")] public static extern uint32 Scene_getBroadPhaseType(physx_PxScene_Pod* self__pod);
		[LinkName("PxScene_getBroadPhaseCaps")] public static extern bool Scene_getBroadPhaseCaps(physx_PxScene_Pod* self__pod, physx_PxBroadPhaseCaps_Pod* caps_pod);
		[LinkName("PxScene_getNbBroadPhaseRegions")] public static extern uint32 Scene_getNbBroadPhaseRegions(physx_PxScene_Pod* self__pod);
		[LinkName("PxScene_getBroadPhaseRegions")] public static extern uint32 Scene_getBroadPhaseRegions(physx_PxScene_Pod* self__pod, physx_PxBroadPhaseRegionInfo_Pod* userBuffer_pod, uint32 bufferSize, uint32 startIndex);
		[LinkName("PxScene_addBroadPhaseRegion_mut")] public static extern uint32 Scene_addBroadPhaseRegion_mut(physx_PxScene_Pod* self__pod, physx_PxBroadPhaseRegion_Pod* region_pod, bool populateRegion);
		[LinkName("PxScene_removeBroadPhaseRegion_mut")] public static extern bool Scene_removeBroadPhaseRegion_mut(physx_PxScene_Pod* self__pod, uint32 handle);
		[LinkName("PxScene_getTaskManager")] public static extern physx_PxTaskManager_Pod* Scene_getTaskManager(physx_PxScene_Pod* self__pod);
		[LinkName("PxScene_lockRead_mut")] public static extern void Scene_lockRead_mut(physx_PxScene_Pod* self__pod, char8* file, uint32 line);
		[LinkName("PxScene_unlockRead_mut")] public static extern void Scene_unlockRead_mut(physx_PxScene_Pod* self__pod);
		[LinkName("PxScene_lockWrite_mut")] public static extern void Scene_lockWrite_mut(physx_PxScene_Pod* self__pod, char8* file, uint32 line);
		[LinkName("PxScene_unlockWrite_mut")] public static extern void Scene_unlockWrite_mut(physx_PxScene_Pod* self__pod);
		[LinkName("PxScene_setNbContactDataBlocks_mut")] public static extern void Scene_setNbContactDataBlocks_mut(physx_PxScene_Pod* self__pod, uint32 numBlocks);
		[LinkName("PxScene_getNbContactDataBlocksUsed")] public static extern uint32 Scene_getNbContactDataBlocksUsed(physx_PxScene_Pod* self__pod);
		[LinkName("PxScene_getMaxNbContactDataBlocksUsed")] public static extern uint32 Scene_getMaxNbContactDataBlocksUsed(physx_PxScene_Pod* self__pod);
		[LinkName("PxScene_getContactReportStreamBufferSize")] public static extern uint32 Scene_getContactReportStreamBufferSize(physx_PxScene_Pod* self__pod);
		[LinkName("PxScene_setSolverBatchSize_mut")] public static extern void Scene_setSolverBatchSize_mut(physx_PxScene_Pod* self__pod, uint32 solverBatchSize);
		[LinkName("PxScene_getSolverBatchSize")] public static extern uint32 Scene_getSolverBatchSize(physx_PxScene_Pod* self__pod);
		[LinkName("PxScene_setSolverArticulationBatchSize_mut")] public static extern void Scene_setSolverArticulationBatchSize_mut(physx_PxScene_Pod* self__pod, uint32 solverBatchSize);
		[LinkName("PxScene_getSolverArticulationBatchSize")] public static extern uint32 Scene_getSolverArticulationBatchSize(physx_PxScene_Pod* self__pod);
		[LinkName("PxScene_getWakeCounterResetValue")] public static extern float Scene_getWakeCounterResetValue(physx_PxScene_Pod* self__pod);
		[LinkName("PxScene_shiftOrigin_mut")] public static extern void Scene_shiftOrigin_mut(physx_PxScene_Pod* self__pod, physx_PxVec3_Pod* shift_pod);
		[LinkName("PxScene_getScenePvdClient_mut")] public static extern physx_PxPvdSceneClient_Pod* Scene_getScenePvdClient_mut(physx_PxScene_Pod* self__pod);
		[LinkName("PxSceneReadLock_new_alloc")] public static extern physx_PxSceneReadLock_Pod* SceneReadLock_new_alloc(physx_PxScene_Pod* scene_pod, char8* file, uint32 line);
		[LinkName("PxSceneReadLock_delete")] public static extern void SceneReadLock_delete(physx_PxSceneReadLock_Pod* self__pod);
		[LinkName("PxSceneWriteLock_new_alloc")] public static extern physx_PxSceneWriteLock_Pod* SceneWriteLock_new_alloc(physx_PxScene_Pod* scene_pod, char8* file, uint32 line);
		[LinkName("PxSceneWriteLock_delete")] public static extern void SceneWriteLock_delete(physx_PxSceneWriteLock_Pod* self__pod);
		[LinkName("PxContactPairExtraDataItem_new")] public static extern physx_PxContactPairExtraDataItem_Pod ContactPairExtraDataItem_new();
		[LinkName("PxContactPairVelocity_new")] public static extern physx_PxContactPairVelocity_Pod ContactPairVelocity_new();
		[LinkName("PxContactPairPose_new")] public static extern physx_PxContactPairPose_Pod ContactPairPose_new();
		[LinkName("PxContactPairIndex_new")] public static extern physx_PxContactPairIndex_Pod ContactPairIndex_new();
		[LinkName("PxContactPairExtraDataIterator_new")] public static extern physx_PxContactPairExtraDataIterator_Pod ContactPairExtraDataIterator_new(uint8* stream, uint32 size);
		[LinkName("PxContactPairExtraDataIterator_nextItemSet_mut")] public static extern bool ContactPairExtraDataIterator_nextItemSet_mut(physx_PxContactPairExtraDataIterator_Pod* self__pod);
		[LinkName("PxContactPairHeader_new")] public static extern physx_PxContactPairHeader_Pod ContactPairHeader_new();
		[LinkName("PxContactPair_new")] public static extern physx_PxContactPair_Pod ContactPair_new();
		[LinkName("PxContactPair_extractContacts")] public static extern uint32 ContactPair_extractContacts(physx_PxContactPair_Pod* self__pod, physx_PxContactPairPoint_Pod* userBuffer_pod, uint32 bufferSize);
		[LinkName("PxContactPair_bufferContacts")] public static extern void ContactPair_bufferContacts(physx_PxContactPair_Pod* self__pod, physx_PxContactPair_Pod* newPair_pod, uint8* bufferMemory);
		[LinkName("PxContactPair_getInternalFaceIndices")] public static extern uint32* ContactPair_getInternalFaceIndices(physx_PxContactPair_Pod* self__pod);
		[LinkName("PxContactPair_extractContacts_1")] public static extern uint32 ContactPair_extractContacts_1(physx_PxContactPair_Pod* self__pod, physx_PxContactPairPoint_Pod* userBuffer_pod, uint32 bufferSize);
		[LinkName("PxContactPair_bufferContacts_1")] public static extern void ContactPair_bufferContacts_1(physx_PxContactPair_Pod* self__pod, physx_PxContactPair_Pod* newPair_pod, uint8* bufferMemory);
		[LinkName("PxContactPair_getInternalFaceIndices_1")] public static extern uint32* ContactPair_getInternalFaceIndices_1(physx_PxContactPair_Pod* self__pod);
		[LinkName("PxTriggerPair_new")] public static extern physx_PxTriggerPair_Pod TriggerPair_new();
		[LinkName("PxConstraintInfo_new")] public static extern physx_PxConstraintInfo_Pod ConstraintInfo_new();
		[LinkName("PxConstraintInfo_new_1")] public static extern physx_PxConstraintInfo_Pod ConstraintInfo_new_1(physx_PxConstraint_Pod* c_pod, void* extRef, uint32 t);
		[LinkName("PxSimulationEventCallback_onConstraintBreak_mut")] public static extern void SimulationEventCallback_onConstraintBreak_mut(physx_PxSimulationEventCallback_Pod* self__pod, physx_PxConstraintInfo_Pod* constraints_pod, uint32 count);
		[LinkName("PxSimulationEventCallback_onWake_mut")] public static extern void SimulationEventCallback_onWake_mut(physx_PxSimulationEventCallback_Pod* self__pod, physx_PxActor_Pod** actors_pod, uint32 count);
		[LinkName("PxSimulationEventCallback_onSleep_mut")] public static extern void SimulationEventCallback_onSleep_mut(physx_PxSimulationEventCallback_Pod* self__pod, physx_PxActor_Pod** actors_pod, uint32 count);
		[LinkName("PxSimulationEventCallback_onContact_mut")] public static extern void SimulationEventCallback_onContact_mut(physx_PxSimulationEventCallback_Pod* self__pod, physx_PxContactPairHeader_Pod* pairHeader_pod, physx_PxContactPair_Pod* pairs_pod, uint32 nbPairs);
		[LinkName("PxSimulationEventCallback_onTrigger_mut")] public static extern void SimulationEventCallback_onTrigger_mut(physx_PxSimulationEventCallback_Pod* self__pod, physx_PxTriggerPair_Pod* pairs_pod, uint32 count);
		[LinkName("PxSimulationEventCallback_onAdvance_mut")] public static extern void SimulationEventCallback_onAdvance_mut(physx_PxSimulationEventCallback_Pod* self__pod, physx_PxRigidBody_Pod** bodyBuffer_pod, physx_PxTransform_Pod* poseBuffer_pod, uint32 count);
		[LinkName("PxSimulationEventCallback_delete")] public static extern void SimulationEventCallback_delete(physx_PxSimulationEventCallback_Pod* self__pod);
		[LinkName("PxPruningStructure_release_mut")] public static extern void PruningStructure_release_mut(physx_PxPruningStructure_Pod* self__pod);
		[LinkName("PxPruningStructure_getRigidActors")] public static extern uint32 PruningStructure_getRigidActors(physx_PxPruningStructure_Pod* self__pod, physx_PxRigidActor_Pod** userBuffer_pod, uint32 bufferSize, uint32 startIndex);
		[LinkName("PxPruningStructure_getNbRigidActors")] public static extern uint32 PruningStructure_getNbRigidActors(physx_PxPruningStructure_Pod* self__pod);
		[LinkName("PxPruningStructure_getConcreteTypeName")] public static extern char8* PruningStructure_getConcreteTypeName(physx_PxPruningStructure_Pod* self__pod);
		[LinkName("PxExtendedVec3_new")] public static extern physx_PxExtendedVec3_Pod ExtendedVec3_new();
		[LinkName("PxExtendedVec3_new_1")] public static extern physx_PxExtendedVec3_Pod ExtendedVec3_new_1(double _x, double _y, double _z);
		[LinkName("PxExtendedVec3_isZero")] public static extern bool ExtendedVec3_isZero(physx_PxExtendedVec3_Pod* self__pod);
		[LinkName("PxExtendedVec3_dot")] public static extern double ExtendedVec3_dot(physx_PxExtendedVec3_Pod* self__pod, physx_PxVec3_Pod* v_pod);
		[LinkName("PxExtendedVec3_distanceSquared")] public static extern double ExtendedVec3_distanceSquared(physx_PxExtendedVec3_Pod* self__pod, physx_PxExtendedVec3_Pod* v_pod);
		[LinkName("PxExtendedVec3_magnitudeSquared")] public static extern double ExtendedVec3_magnitudeSquared(physx_PxExtendedVec3_Pod* self__pod);
		[LinkName("PxExtendedVec3_magnitude")] public static extern double ExtendedVec3_magnitude(physx_PxExtendedVec3_Pod* self__pod);
		[LinkName("PxExtendedVec3_normalize_mut")] public static extern double ExtendedVec3_normalize_mut(physx_PxExtendedVec3_Pod* self__pod);
		[LinkName("PxExtendedVec3_isFinite")] public static extern bool ExtendedVec3_isFinite(physx_PxExtendedVec3_Pod* self__pod);
		[LinkName("PxExtendedVec3_maximum_mut")] public static extern void ExtendedVec3_maximum_mut(physx_PxExtendedVec3_Pod* self__pod, physx_PxExtendedVec3_Pod* v_pod);
		[LinkName("PxExtendedVec3_minimum_mut")] public static extern void ExtendedVec3_minimum_mut(physx_PxExtendedVec3_Pod* self__pod, physx_PxExtendedVec3_Pod* v_pod);
		[LinkName("PxExtendedVec3_set_mut")] public static extern void ExtendedVec3_set_mut(physx_PxExtendedVec3_Pod* self__pod, double x_, double y_, double z_);
		[LinkName("PxExtendedVec3_setPlusInfinity_mut")] public static extern void ExtendedVec3_setPlusInfinity_mut(physx_PxExtendedVec3_Pod* self__pod);
		[LinkName("PxExtendedVec3_setMinusInfinity_mut")] public static extern void ExtendedVec3_setMinusInfinity_mut(physx_PxExtendedVec3_Pod* self__pod);
		[LinkName("PxExtendedVec3_cross_mut")] public static extern void ExtendedVec3_cross_mut(physx_PxExtendedVec3_Pod* self__pod, physx_PxExtendedVec3_Pod* left_pod, physx_PxVec3_Pod* right_pod);
		[LinkName("PxExtendedVec3_cross_mut_1")] public static extern void ExtendedVec3_cross_mut_1(physx_PxExtendedVec3_Pod* self__pod, physx_PxExtendedVec3_Pod* left_pod, physx_PxExtendedVec3_Pod* right_pod);
		[LinkName("PxExtendedVec3_cross")] public static extern physx_PxExtendedVec3_Pod ExtendedVec3_cross(physx_PxExtendedVec3_Pod* self__pod, physx_PxExtendedVec3_Pod* v_pod);
		[LinkName("PxExtendedVec3_cross_mut_2")] public static extern void ExtendedVec3_cross_mut_2(physx_PxExtendedVec3_Pod* self__pod, physx_PxVec3_Pod* left_pod, physx_PxExtendedVec3_Pod* right_pod);
		[LinkName("PxObstacle_getType")] public static extern int Obstacle_getType(physx_PxObstacle_Pod* self__pod);
		[LinkName("PxBoxObstacle_new")] public static extern physx_PxBoxObstacle_Pod BoxObstacle_new();
		[LinkName("PxCapsuleObstacle_new")] public static extern physx_PxCapsuleObstacle_Pod CapsuleObstacle_new();
		[LinkName("PxObstacleContext_release_mut")] public static extern void ObstacleContext_release_mut(physx_PxObstacleContext_Pod* self__pod);
		[LinkName("PxObstacleContext_getControllerManager")] public static extern physx_PxControllerManager_Pod* ObstacleContext_getControllerManager(physx_PxObstacleContext_Pod* self__pod);
		[LinkName("PxObstacleContext_addObstacle_mut")] public static extern uint32 ObstacleContext_addObstacle_mut(physx_PxObstacleContext_Pod* self__pod, physx_PxObstacle_Pod* obstacle_pod);
		[LinkName("PxObstacleContext_removeObstacle_mut")] public static extern bool ObstacleContext_removeObstacle_mut(physx_PxObstacleContext_Pod* self__pod, uint32 handle);
		[LinkName("PxObstacleContext_updateObstacle_mut")] public static extern bool ObstacleContext_updateObstacle_mut(physx_PxObstacleContext_Pod* self__pod, uint32 handle, physx_PxObstacle_Pod* obstacle_pod);
		[LinkName("PxObstacleContext_getNbObstacles")] public static extern uint32 ObstacleContext_getNbObstacles(physx_PxObstacleContext_Pod* self__pod);
		[LinkName("PxObstacleContext_getObstacle")] public static extern physx_PxObstacle_Pod* ObstacleContext_getObstacle(physx_PxObstacleContext_Pod* self__pod, uint32 i);
		[LinkName("PxObstacleContext_getObstacleByHandle")] public static extern physx_PxObstacle_Pod* ObstacleContext_getObstacleByHandle(physx_PxObstacleContext_Pod* self__pod, uint32 handle);
		[LinkName("PxUserControllerHitReport_onShapeHit_mut")] public static extern void UserControllerHitReport_onShapeHit_mut(physx_PxUserControllerHitReport_Pod* self__pod, physx_PxControllerShapeHit_Pod* hit_pod);
		[LinkName("PxUserControllerHitReport_onControllerHit_mut")] public static extern void UserControllerHitReport_onControllerHit_mut(physx_PxUserControllerHitReport_Pod* self__pod, physx_PxControllersHit_Pod* hit_pod);
		[LinkName("PxUserControllerHitReport_onObstacleHit_mut")] public static extern void UserControllerHitReport_onObstacleHit_mut(physx_PxUserControllerHitReport_Pod* self__pod, physx_PxControllerObstacleHit_Pod* hit_pod);
		[LinkName("PxControllerFilterCallback_delete")] public static extern void ControllerFilterCallback_delete(physx_PxControllerFilterCallback_Pod* self__pod);
		[LinkName("PxControllerFilterCallback_filter_mut")] public static extern bool ControllerFilterCallback_filter_mut(physx_PxControllerFilterCallback_Pod* self__pod, physx_PxController_Pod* a_pod, physx_PxController_Pod* b_pod);
		[LinkName("PxControllerFilters_new")] public static extern physx_PxControllerFilters_Pod ControllerFilters_new(physx_PxFilterData_Pod* filterData_pod, physx_PxQueryFilterCallback_Pod* cb_pod, physx_PxControllerFilterCallback_Pod* cctFilterCb_pod);
		[LinkName("PxControllerDesc_isValid")] public static extern bool ControllerDesc_isValid(physx_PxControllerDesc_Pod* self__pod);
		[LinkName("PxControllerDesc_getType")] public static extern uint32 ControllerDesc_getType(physx_PxControllerDesc_Pod* self__pod);
		[LinkName("PxControllerDesc_isValid_1")] public static extern bool ControllerDesc_isValid_1(physx_PxControllerDesc_Pod* self__pod);
		[LinkName("PxController_getType")] public static extern uint32 Controller_getType(physx_PxController_Pod* self__pod);
		[LinkName("PxController_release_mut")] public static extern void Controller_release_mut(physx_PxController_Pod* self__pod);
		[LinkName("PxController_move_mut")] public static extern physx_PxControllerCollisionFlags_Pod Controller_move_mut(physx_PxController_Pod* self__pod, physx_PxVec3_Pod* disp_pod, float minDist, float elapsedTime, physx_PxControllerFilters_Pod* filters_pod, physx_PxObstacleContext_Pod* obstacles_pod);
		[LinkName("PxController_setPosition_mut")] public static extern bool Controller_setPosition_mut(physx_PxController_Pod* self__pod, physx_PxExtendedVec3_Pod* position_pod);
		[LinkName("PxController_getPosition")] public static extern physx_PxExtendedVec3_Pod* Controller_getPosition(physx_PxController_Pod* self__pod);
		[LinkName("PxController_setFootPosition_mut")] public static extern bool Controller_setFootPosition_mut(physx_PxController_Pod* self__pod, physx_PxExtendedVec3_Pod* position_pod);
		[LinkName("PxController_getFootPosition")] public static extern physx_PxExtendedVec3_Pod Controller_getFootPosition(physx_PxController_Pod* self__pod);
		[LinkName("PxController_getActor")] public static extern physx_PxRigidDynamic_Pod* Controller_getActor(physx_PxController_Pod* self__pod);
		[LinkName("PxController_setStepOffset_mut")] public static extern void Controller_setStepOffset_mut(physx_PxController_Pod* self__pod, float offset);
		[LinkName("PxController_getStepOffset")] public static extern float Controller_getStepOffset(physx_PxController_Pod* self__pod);
		[LinkName("PxController_setNonWalkableMode_mut")] public static extern void Controller_setNonWalkableMode_mut(physx_PxController_Pod* self__pod, uint32 flag_pod);
		[LinkName("PxController_getNonWalkableMode")] public static extern uint32 Controller_getNonWalkableMode(physx_PxController_Pod* self__pod);
		[LinkName("PxController_getContactOffset")] public static extern float Controller_getContactOffset(physx_PxController_Pod* self__pod);
		[LinkName("PxController_setContactOffset_mut")] public static extern void Controller_setContactOffset_mut(physx_PxController_Pod* self__pod, float offset);
		[LinkName("PxController_getUpDirection")] public static extern physx_PxVec3_Pod Controller_getUpDirection(physx_PxController_Pod* self__pod);
		[LinkName("PxController_setUpDirection_mut")] public static extern void Controller_setUpDirection_mut(physx_PxController_Pod* self__pod, physx_PxVec3_Pod* up_pod);
		[LinkName("PxController_getSlopeLimit")] public static extern float Controller_getSlopeLimit(physx_PxController_Pod* self__pod);
		[LinkName("PxController_setSlopeLimit_mut")] public static extern void Controller_setSlopeLimit_mut(physx_PxController_Pod* self__pod, float slopeLimit);
		[LinkName("PxController_invalidateCache_mut")] public static extern void Controller_invalidateCache_mut(physx_PxController_Pod* self__pod);
		[LinkName("PxController_getScene_mut")] public static extern physx_PxScene_Pod* Controller_getScene_mut(physx_PxController_Pod* self__pod);
		[LinkName("PxController_getUserData")] public static extern void* Controller_getUserData(physx_PxController_Pod* self__pod);
		[LinkName("PxController_setUserData_mut")] public static extern void Controller_setUserData_mut(physx_PxController_Pod* self__pod, void* userData);
		[LinkName("PxController_getState")] public static extern void Controller_getState(physx_PxController_Pod* self__pod, physx_PxControllerState_Pod* state_pod);
		[LinkName("PxController_getStats")] public static extern void Controller_getStats(physx_PxController_Pod* self__pod, physx_PxControllerStats_Pod* stats_pod);
		[LinkName("PxController_resize_mut")] public static extern void Controller_resize_mut(physx_PxController_Pod* self__pod, float height);
		[LinkName("PxBoxControllerDesc_new_alloc")] public static extern physx_PxBoxControllerDesc_Pod* BoxControllerDesc_new_alloc();
		[LinkName("PxBoxControllerDesc_delete")] public static extern void BoxControllerDesc_delete(physx_PxBoxControllerDesc_Pod* self__pod);
		[LinkName("PxBoxControllerDesc_setToDefault_mut")] public static extern void BoxControllerDesc_setToDefault_mut(physx_PxBoxControllerDesc_Pod* self__pod);
		[LinkName("PxBoxControllerDesc_isValid")] public static extern bool BoxControllerDesc_isValid(physx_PxBoxControllerDesc_Pod* self__pod);
		[LinkName("PxBoxControllerDesc_new_alloc_1")] public static extern physx_PxBoxControllerDesc_Pod* BoxControllerDesc_new_alloc_1();
		[LinkName("PxBoxControllerDesc_setToDefault_mut_1")] public static extern void BoxControllerDesc_setToDefault_mut_1(physx_PxBoxControllerDesc_Pod* self__pod);
		[LinkName("PxBoxControllerDesc_isValid_1")] public static extern bool BoxControllerDesc_isValid_1(physx_PxBoxControllerDesc_Pod* self__pod);
		[LinkName("PxBoxController_getHalfHeight")] public static extern float BoxController_getHalfHeight(physx_PxBoxController_Pod* self__pod);
		[LinkName("PxBoxController_getHalfSideExtent")] public static extern float BoxController_getHalfSideExtent(physx_PxBoxController_Pod* self__pod);
		[LinkName("PxBoxController_getHalfForwardExtent")] public static extern float BoxController_getHalfForwardExtent(physx_PxBoxController_Pod* self__pod);
		[LinkName("PxBoxController_setHalfHeight_mut")] public static extern bool BoxController_setHalfHeight_mut(physx_PxBoxController_Pod* self__pod, float halfHeight);
		[LinkName("PxBoxController_setHalfSideExtent_mut")] public static extern bool BoxController_setHalfSideExtent_mut(physx_PxBoxController_Pod* self__pod, float halfSideExtent);
		[LinkName("PxBoxController_setHalfForwardExtent_mut")] public static extern bool BoxController_setHalfForwardExtent_mut(physx_PxBoxController_Pod* self__pod, float halfForwardExtent);
		[LinkName("PxCapsuleControllerDesc_new_alloc")] public static extern physx_PxCapsuleControllerDesc_Pod* CapsuleControllerDesc_new_alloc();
		[LinkName("PxCapsuleControllerDesc_delete")] public static extern void CapsuleControllerDesc_delete(physx_PxCapsuleControllerDesc_Pod* self__pod);
		[LinkName("PxCapsuleControllerDesc_setToDefault_mut")] public static extern void CapsuleControllerDesc_setToDefault_mut(physx_PxCapsuleControllerDesc_Pod* self__pod);
		[LinkName("PxCapsuleControllerDesc_isValid")] public static extern bool CapsuleControllerDesc_isValid(physx_PxCapsuleControllerDesc_Pod* self__pod);
		[LinkName("PxCapsuleControllerDesc_new_alloc_1")] public static extern physx_PxCapsuleControllerDesc_Pod* CapsuleControllerDesc_new_alloc_1();
		[LinkName("PxCapsuleControllerDesc_setToDefault_mut_1")] public static extern void CapsuleControllerDesc_setToDefault_mut_1(physx_PxCapsuleControllerDesc_Pod* self__pod);
		[LinkName("PxCapsuleControllerDesc_isValid_1")] public static extern bool CapsuleControllerDesc_isValid_1(physx_PxCapsuleControllerDesc_Pod* self__pod);
		[LinkName("PxCapsuleController_getRadius")] public static extern float CapsuleController_getRadius(physx_PxCapsuleController_Pod* self__pod);
		[LinkName("PxCapsuleController_setRadius_mut")] public static extern bool CapsuleController_setRadius_mut(physx_PxCapsuleController_Pod* self__pod, float radius);
		[LinkName("PxCapsuleController_getHeight")] public static extern float CapsuleController_getHeight(physx_PxCapsuleController_Pod* self__pod);
		[LinkName("PxCapsuleController_setHeight_mut")] public static extern bool CapsuleController_setHeight_mut(physx_PxCapsuleController_Pod* self__pod, float height);
		[LinkName("PxCapsuleController_getClimbingMode")] public static extern uint32 CapsuleController_getClimbingMode(physx_PxCapsuleController_Pod* self__pod);
		[LinkName("PxCapsuleController_setClimbingMode_mut")] public static extern bool CapsuleController_setClimbingMode_mut(physx_PxCapsuleController_Pod* self__pod, uint32 mode_pod);
		[LinkName("PxControllerBehaviorCallback_getBehaviorFlags_mut")] public static extern physx_PxControllerBehaviorFlags_Pod ControllerBehaviorCallback_getBehaviorFlags_mut(physx_PxControllerBehaviorCallback_Pod* self__pod, physx_PxShape_Pod* shape_pod, physx_PxActor_Pod* actor_pod);
		[LinkName("PxControllerBehaviorCallback_getBehaviorFlags_mut_1")] public static extern physx_PxControllerBehaviorFlags_Pod ControllerBehaviorCallback_getBehaviorFlags_mut_1(physx_PxControllerBehaviorCallback_Pod* self__pod, physx_PxController_Pod* controller_pod);
		[LinkName("PxControllerBehaviorCallback_getBehaviorFlags_mut_2")] public static extern physx_PxControllerBehaviorFlags_Pod ControllerBehaviorCallback_getBehaviorFlags_mut_2(physx_PxControllerBehaviorCallback_Pod* self__pod, physx_PxObstacle_Pod* obstacle_pod);
		[LinkName("PxControllerManager_release_mut")] public static extern void ControllerManager_release_mut(physx_PxControllerManager_Pod* self__pod);
		[LinkName("PxControllerManager_getScene")] public static extern physx_PxScene_Pod* ControllerManager_getScene(physx_PxControllerManager_Pod* self__pod);
		[LinkName("PxControllerManager_getNbControllers")] public static extern uint32 ControllerManager_getNbControllers(physx_PxControllerManager_Pod* self__pod);
		[LinkName("PxControllerManager_getController_mut")] public static extern physx_PxController_Pod* ControllerManager_getController_mut(physx_PxControllerManager_Pod* self__pod, uint32 index);
		[LinkName("PxControllerManager_createController_mut")] public static extern physx_PxController_Pod* ControllerManager_createController_mut(physx_PxControllerManager_Pod* self__pod, physx_PxControllerDesc_Pod* desc_pod);
		[LinkName("PxControllerManager_purgeControllers_mut")] public static extern void ControllerManager_purgeControllers_mut(physx_PxControllerManager_Pod* self__pod);
		[LinkName("PxControllerManager_getRenderBuffer_mut")] public static extern physx_PxRenderBuffer_Pod* ControllerManager_getRenderBuffer_mut(physx_PxControllerManager_Pod* self__pod);
		[LinkName("PxControllerManager_setDebugRenderingFlags_mut")] public static extern void ControllerManager_setDebugRenderingFlags_mut(physx_PxControllerManager_Pod* self__pod, physx_PxControllerDebugRenderFlags_Pod flags_pod);
		[LinkName("PxControllerManager_getNbObstacleContexts")] public static extern uint32 ControllerManager_getNbObstacleContexts(physx_PxControllerManager_Pod* self__pod);
		[LinkName("PxControllerManager_getObstacleContext_mut")] public static extern physx_PxObstacleContext_Pod* ControllerManager_getObstacleContext_mut(physx_PxControllerManager_Pod* self__pod, uint32 index);
		[LinkName("PxControllerManager_createObstacleContext_mut")] public static extern physx_PxObstacleContext_Pod* ControllerManager_createObstacleContext_mut(physx_PxControllerManager_Pod* self__pod);
		[LinkName("PxControllerManager_computeInteractions_mut")] public static extern void ControllerManager_computeInteractions_mut(physx_PxControllerManager_Pod* self__pod, float elapsedTime, physx_PxControllerFilterCallback_Pod* cctFilterCb_pod);
		[LinkName("PxControllerManager_setTessellation_mut")] public static extern void ControllerManager_setTessellation_mut(physx_PxControllerManager_Pod* self__pod, bool flag, float maxEdgeLength);
		[LinkName("PxControllerManager_setOverlapRecoveryModule_mut")] public static extern void ControllerManager_setOverlapRecoveryModule_mut(physx_PxControllerManager_Pod* self__pod, bool flag);
		[LinkName("PxControllerManager_setPreciseSweeps_mut")] public static extern void ControllerManager_setPreciseSweeps_mut(physx_PxControllerManager_Pod* self__pod, bool flag);
		[LinkName("PxControllerManager_setPreventVerticalSlidingAgainstCeiling_mut")] public static extern void ControllerManager_setPreventVerticalSlidingAgainstCeiling_mut(physx_PxControllerManager_Pod* self__pod, bool flag);
		[LinkName("PxControllerManager_shiftOrigin_mut")] public static extern void ControllerManager_shiftOrigin_mut(physx_PxControllerManager_Pod* self__pod, physx_PxVec3_Pod* shift_pod);
		[LinkName("phys_PxCreateControllerManager")] public static extern physx_PxControllerManager_Pod* CreateControllerManager(physx_PxScene_Pod* scene_pod, bool lockingEnabled);
		[LinkName("PxConvexMeshDesc_new")] public static extern physx_PxConvexMeshDesc_Pod ConvexMeshDesc_new();
		[LinkName("PxConvexMeshDesc_setToDefault_mut")] public static extern void ConvexMeshDesc_setToDefault_mut(physx_PxConvexMeshDesc_Pod* self__pod);
		[LinkName("PxConvexMeshDesc_isValid")] public static extern bool ConvexMeshDesc_isValid(physx_PxConvexMeshDesc_Pod* self__pod);
		[LinkName("PxConvexMeshDesc_new_1")] public static extern physx_PxConvexMeshDesc_Pod ConvexMeshDesc_new_1();
		[LinkName("PxConvexMeshDesc_setToDefault_mut_1")] public static extern void ConvexMeshDesc_setToDefault_mut_1(physx_PxConvexMeshDesc_Pod* self__pod);
		[LinkName("PxConvexMeshDesc_isValid_1")] public static extern bool ConvexMeshDesc_isValid_1(physx_PxConvexMeshDesc_Pod* self__pod);
		[LinkName("PxTriangleMeshDesc_new")] public static extern physx_PxTriangleMeshDesc_Pod TriangleMeshDesc_new();
		[LinkName("PxTriangleMeshDesc_setToDefault_mut")] public static extern void TriangleMeshDesc_setToDefault_mut(physx_PxTriangleMeshDesc_Pod* self__pod);
		[LinkName("PxTriangleMeshDesc_isValid")] public static extern bool TriangleMeshDesc_isValid(physx_PxTriangleMeshDesc_Pod* self__pod);
		[LinkName("PxTriangleMeshDesc_new_1")] public static extern physx_PxTriangleMeshDesc_Pod TriangleMeshDesc_new_1();
		[LinkName("PxTriangleMeshDesc_setToDefault_mut_1")] public static extern void TriangleMeshDesc_setToDefault_mut_1(physx_PxTriangleMeshDesc_Pod* self__pod);
		[LinkName("PxTriangleMeshDesc_isValid_1")] public static extern bool TriangleMeshDesc_isValid_1(physx_PxTriangleMeshDesc_Pod* self__pod);
		[LinkName("PxBVH33MidphaseDesc_setToDefault_mut")] public static extern void BVH33MidphaseDesc_setToDefault_mut(physx_PxBVH33MidphaseDesc_Pod* self__pod);
		[LinkName("PxBVH33MidphaseDesc_isValid")] public static extern bool BVH33MidphaseDesc_isValid(physx_PxBVH33MidphaseDesc_Pod* self__pod);
		[LinkName("PxBVH34MidphaseDesc_setToDefault_mut")] public static extern void BVH34MidphaseDesc_setToDefault_mut(physx_PxBVH34MidphaseDesc_Pod* self__pod);
		[LinkName("PxBVH34MidphaseDesc_isValid")] public static extern bool BVH34MidphaseDesc_isValid(physx_PxBVH34MidphaseDesc_Pod* self__pod);
		[LinkName("PxMidphaseDesc_new")] public static extern physx_PxMidphaseDesc_Pod MidphaseDesc_new();
		[LinkName("PxMidphaseDesc_getType")] public static extern uint32 MidphaseDesc_getType(physx_PxMidphaseDesc_Pod* self__pod);
		[LinkName("PxMidphaseDesc_setToDefault_mut")] public static extern void MidphaseDesc_setToDefault_mut(physx_PxMidphaseDesc_Pod* self__pod, uint32 type_pod);
		[LinkName("PxMidphaseDesc_isValid")] public static extern bool MidphaseDesc_isValid(physx_PxMidphaseDesc_Pod* self__pod);
		[LinkName("PxBVHStructureDesc_new")] public static extern physx_PxBVHStructureDesc_Pod BVHStructureDesc_new();
		[LinkName("PxBVHStructureDesc_setToDefault_mut")] public static extern void BVHStructureDesc_setToDefault_mut(physx_PxBVHStructureDesc_Pod* self__pod);
		[LinkName("PxBVHStructureDesc_isValid")] public static extern bool BVHStructureDesc_isValid(physx_PxBVHStructureDesc_Pod* self__pod);
		[LinkName("PxBVHStructureDesc_new_1")] public static extern physx_PxBVHStructureDesc_Pod BVHStructureDesc_new_1();
		[LinkName("PxBVHStructureDesc_setToDefault_mut_1")] public static extern void BVHStructureDesc_setToDefault_mut_1(physx_PxBVHStructureDesc_Pod* self__pod);
		[LinkName("PxBVHStructureDesc_isValid_1")] public static extern bool BVHStructureDesc_isValid_1(physx_PxBVHStructureDesc_Pod* self__pod);
		[LinkName("PxCookingParams_new")] public static extern physx_PxCookingParams_Pod CookingParams_new(physx_PxTolerancesScale_Pod* sc_pod);
		[LinkName("PxCooking_release_mut")] public static extern void Cooking_release_mut(physx_PxCooking_Pod* self__pod);
		[LinkName("PxCooking_setParams_mut")] public static extern void Cooking_setParams_mut(physx_PxCooking_Pod* self__pod, physx_PxCookingParams_Pod* params_pod);
		[LinkName("PxCooking_getParams")] public static extern physx_PxCookingParams_Pod* Cooking_getParams(physx_PxCooking_Pod* self__pod);
		[LinkName("PxCooking_platformMismatch")] public static extern bool Cooking_platformMismatch(physx_PxCooking_Pod* self__pod);
		[LinkName("PxCooking_cookTriangleMesh")] public static extern bool Cooking_cookTriangleMesh(physx_PxCooking_Pod* self__pod, physx_PxTriangleMeshDesc_Pod* desc_pod, physx_PxOutputStream_Pod* stream_pod, uint32* condition_pod);
		[LinkName("PxCooking_createTriangleMesh")] public static extern physx_PxTriangleMesh_Pod* Cooking_createTriangleMesh(physx_PxCooking_Pod* self__pod, physx_PxTriangleMeshDesc_Pod* desc_pod, physx_PxPhysicsInsertionCallback_Pod* insertionCallback_pod, uint32* condition_pod);
		[LinkName("PxCooking_validateTriangleMesh")] public static extern bool Cooking_validateTriangleMesh(physx_PxCooking_Pod* self__pod, physx_PxTriangleMeshDesc_Pod* desc_pod);
		[LinkName("PxCooking_cookConvexMesh")] public static extern bool Cooking_cookConvexMesh(physx_PxCooking_Pod* self__pod, physx_PxConvexMeshDesc_Pod* desc_pod, physx_PxOutputStream_Pod* stream_pod, uint32* condition_pod);
		[LinkName("PxCooking_createConvexMesh")] public static extern physx_PxConvexMesh_Pod* Cooking_createConvexMesh(physx_PxCooking_Pod* self__pod, physx_PxConvexMeshDesc_Pod* desc_pod, physx_PxPhysicsInsertionCallback_Pod* insertionCallback_pod, uint32* condition_pod);
		[LinkName("PxCooking_validateConvexMesh")] public static extern bool Cooking_validateConvexMesh(physx_PxCooking_Pod* self__pod, physx_PxConvexMeshDesc_Pod* desc_pod);
		[LinkName("PxCooking_computeHullPolygons")] public static extern bool Cooking_computeHullPolygons(physx_PxCooking_Pod* self__pod, physx_PxSimpleTriangleMesh_Pod* mesh_pod, physx_PxAllocatorCallback_Pod* inCallback_pod, uint32* nbVerts_pod, physx_PxVec3_Pod** vertices_pod, uint32* nbIndices_pod, uint32** indices_pod, uint32* nbPolygons_pod, physx_PxHullPolygon_Pod** hullPolygons_pod);
		[LinkName("PxCooking_cookHeightField")] public static extern bool Cooking_cookHeightField(physx_PxCooking_Pod* self__pod, physx_PxHeightFieldDesc_Pod* desc_pod, physx_PxOutputStream_Pod* stream_pod);
		[LinkName("PxCooking_createHeightField")] public static extern physx_PxHeightField_Pod* Cooking_createHeightField(physx_PxCooking_Pod* self__pod, physx_PxHeightFieldDesc_Pod* desc_pod, physx_PxPhysicsInsertionCallback_Pod* insertionCallback_pod);
		[LinkName("PxCooking_cookBVHStructure")] public static extern bool Cooking_cookBVHStructure(physx_PxCooking_Pod* self__pod, physx_PxBVHStructureDesc_Pod* desc_pod, physx_PxOutputStream_Pod* stream_pod);
		[LinkName("PxCooking_createBVHStructure")] public static extern physx_PxBVHStructure_Pod* Cooking_createBVHStructure(physx_PxCooking_Pod* self__pod, physx_PxBVHStructureDesc_Pod* desc_pod, physx_PxPhysicsInsertionCallback_Pod* insertionCallback_pod);
		[LinkName("phys_PxCreateCooking")] public static extern physx_PxCooking_Pod* CreateCooking(uint32 version, physx_PxFoundation_Pod* foundation_pod, physx_PxCookingParams_Pod* params_pod);
		[LinkName("PxDefaultMemoryOutputStream_new_alloc")] public static extern physx_PxDefaultMemoryOutputStream_Pod* DefaultMemoryOutputStream_new_alloc(physx_PxAllocatorCallback_Pod* allocator_pod);
		[LinkName("PxDefaultMemoryOutputStream_delete")] public static extern void DefaultMemoryOutputStream_delete(physx_PxDefaultMemoryOutputStream_Pod* self__pod);
		[LinkName("PxDefaultMemoryOutputStream_write_mut")] public static extern uint32 DefaultMemoryOutputStream_write_mut(physx_PxDefaultMemoryOutputStream_Pod* self__pod, void* src, uint32 count);
		[LinkName("PxDefaultMemoryOutputStream_getSize")] public static extern uint32 DefaultMemoryOutputStream_getSize(physx_PxDefaultMemoryOutputStream_Pod* self__pod);
		[LinkName("PxDefaultMemoryOutputStream_getData")] public static extern uint8* DefaultMemoryOutputStream_getData(physx_PxDefaultMemoryOutputStream_Pod* self__pod);
		[LinkName("PxDefaultMemoryInputData_new_alloc")] public static extern physx_PxDefaultMemoryInputData_Pod* DefaultMemoryInputData_new_alloc(uint8* data, uint32 length);
		[LinkName("PxDefaultMemoryInputData_read_mut")] public static extern uint32 DefaultMemoryInputData_read_mut(physx_PxDefaultMemoryInputData_Pod* self__pod, void* dest, uint32 count);
		[LinkName("PxDefaultMemoryInputData_getLength")] public static extern uint32 DefaultMemoryInputData_getLength(physx_PxDefaultMemoryInputData_Pod* self__pod);
		[LinkName("PxDefaultMemoryInputData_seek_mut")] public static extern void DefaultMemoryInputData_seek_mut(physx_PxDefaultMemoryInputData_Pod* self__pod, uint32 pos);
		[LinkName("PxDefaultMemoryInputData_tell")] public static extern uint32 DefaultMemoryInputData_tell(physx_PxDefaultMemoryInputData_Pod* self__pod);
		[LinkName("PxDefaultMemoryInputData_delete")] public static extern void DefaultMemoryInputData_delete(physx_PxDefaultMemoryInputData_Pod* self__pod);
		[LinkName("PxDefaultFileOutputStream_new_alloc")] public static extern physx_PxDefaultFileOutputStream_Pod* DefaultFileOutputStream_new_alloc(char8* name);
		[LinkName("PxDefaultFileOutputStream_delete")] public static extern void DefaultFileOutputStream_delete(physx_PxDefaultFileOutputStream_Pod* self__pod);
		[LinkName("PxDefaultFileOutputStream_write_mut")] public static extern uint32 DefaultFileOutputStream_write_mut(physx_PxDefaultFileOutputStream_Pod* self__pod, void* src, uint32 count);
		[LinkName("PxDefaultFileOutputStream_isValid_mut")] public static extern bool DefaultFileOutputStream_isValid_mut(physx_PxDefaultFileOutputStream_Pod* self__pod);
		[LinkName("PxDefaultFileInputData_new_alloc")] public static extern physx_PxDefaultFileInputData_Pod* DefaultFileInputData_new_alloc(char8* name);
		[LinkName("PxDefaultFileInputData_delete")] public static extern void DefaultFileInputData_delete(physx_PxDefaultFileInputData_Pod* self__pod);
		[LinkName("PxDefaultFileInputData_read_mut")] public static extern uint32 DefaultFileInputData_read_mut(physx_PxDefaultFileInputData_Pod* self__pod, void* dest, uint32 count);
		[LinkName("PxDefaultFileInputData_seek_mut")] public static extern void DefaultFileInputData_seek_mut(physx_PxDefaultFileInputData_Pod* self__pod, uint32 pos);
		[LinkName("PxDefaultFileInputData_tell")] public static extern uint32 DefaultFileInputData_tell(physx_PxDefaultFileInputData_Pod* self__pod);
		[LinkName("PxDefaultFileInputData_getLength")] public static extern uint32 DefaultFileInputData_getLength(physx_PxDefaultFileInputData_Pod* self__pod);
		[LinkName("PxDefaultFileInputData_isValid")] public static extern bool DefaultFileInputData_isValid(physx_PxDefaultFileInputData_Pod* self__pod);
		[LinkName("PxJoint_setActors_mut")] public static extern void Joint_setActors_mut(physx_PxJoint_Pod* self__pod, physx_PxRigidActor_Pod* actor0_pod, physx_PxRigidActor_Pod* actor1_pod);
		[LinkName("PxJoint_getActors")] public static extern void Joint_getActors(physx_PxJoint_Pod* self__pod, physx_PxRigidActor_Pod** actor0_pod, physx_PxRigidActor_Pod** actor1_pod);
		[LinkName("PxJoint_setLocalPose_mut")] public static extern void Joint_setLocalPose_mut(physx_PxJoint_Pod* self__pod, uint32 actor_pod, physx_PxTransform_Pod* localPose_pod);
		[LinkName("PxJoint_getLocalPose")] public static extern physx_PxTransform_Pod Joint_getLocalPose(physx_PxJoint_Pod* self__pod, uint32 actor_pod);
		[LinkName("PxJoint_getRelativeTransform")] public static extern physx_PxTransform_Pod Joint_getRelativeTransform(physx_PxJoint_Pod* self__pod);
		[LinkName("PxJoint_getRelativeLinearVelocity")] public static extern physx_PxVec3_Pod Joint_getRelativeLinearVelocity(physx_PxJoint_Pod* self__pod);
		[LinkName("PxJoint_getRelativeAngularVelocity")] public static extern physx_PxVec3_Pod Joint_getRelativeAngularVelocity(physx_PxJoint_Pod* self__pod);
		[LinkName("PxJoint_setBreakForce_mut")] public static extern void Joint_setBreakForce_mut(physx_PxJoint_Pod* self__pod, float force, float torque);
		[LinkName("PxJoint_getBreakForce")] public static extern void Joint_getBreakForce(physx_PxJoint_Pod* self__pod, float* force_pod, float* torque_pod);
		[LinkName("PxJoint_setConstraintFlags_mut")] public static extern void Joint_setConstraintFlags_mut(physx_PxJoint_Pod* self__pod, physx_PxConstraintFlags_Pod flags_pod);
		[LinkName("PxJoint_setConstraintFlag_mut")] public static extern void Joint_setConstraintFlag_mut(physx_PxJoint_Pod* self__pod, uint32 flag_pod, bool value);
		[LinkName("PxJoint_getConstraintFlags")] public static extern physx_PxConstraintFlags_Pod Joint_getConstraintFlags(physx_PxJoint_Pod* self__pod);
		[LinkName("PxJoint_setInvMassScale0_mut")] public static extern void Joint_setInvMassScale0_mut(physx_PxJoint_Pod* self__pod, float invMassScale);
		[LinkName("PxJoint_getInvMassScale0")] public static extern float Joint_getInvMassScale0(physx_PxJoint_Pod* self__pod);
		[LinkName("PxJoint_setInvInertiaScale0_mut")] public static extern void Joint_setInvInertiaScale0_mut(physx_PxJoint_Pod* self__pod, float invInertiaScale);
		[LinkName("PxJoint_getInvInertiaScale0")] public static extern float Joint_getInvInertiaScale0(physx_PxJoint_Pod* self__pod);
		[LinkName("PxJoint_setInvMassScale1_mut")] public static extern void Joint_setInvMassScale1_mut(physx_PxJoint_Pod* self__pod, float invMassScale);
		[LinkName("PxJoint_getInvMassScale1")] public static extern float Joint_getInvMassScale1(physx_PxJoint_Pod* self__pod);
		[LinkName("PxJoint_setInvInertiaScale1_mut")] public static extern void Joint_setInvInertiaScale1_mut(physx_PxJoint_Pod* self__pod, float invInertiaScale);
		[LinkName("PxJoint_getInvInertiaScale1")] public static extern float Joint_getInvInertiaScale1(physx_PxJoint_Pod* self__pod);
		[LinkName("PxJoint_getConstraint")] public static extern physx_PxConstraint_Pod* Joint_getConstraint(physx_PxJoint_Pod* self__pod);
		[LinkName("PxJoint_setName_mut")] public static extern void Joint_setName_mut(physx_PxJoint_Pod* self__pod, char8* name);
		[LinkName("PxJoint_getName")] public static extern char8* Joint_getName(physx_PxJoint_Pod* self__pod);
		[LinkName("PxJoint_release_mut")] public static extern void Joint_release_mut(physx_PxJoint_Pod* self__pod);
		[LinkName("PxJoint_getScene")] public static extern physx_PxScene_Pod* Joint_getScene(physx_PxJoint_Pod* self__pod);
		[LinkName("PxJoint_getBinaryMetaData_mut")] public static extern void Joint_getBinaryMetaData_mut(physx_PxOutputStream_Pod* stream_pod);
		[LinkName("PxSpring_new")] public static extern physx_PxSpring_Pod Spring_new(float stiffness_, float damping_);
		[LinkName("phys_PxSetJointGlobalFrame")] public static extern void SetJointGlobalFrame(physx_PxJoint_Pod* joint_pod, physx_PxVec3_Pod* wsAnchor_pod, physx_PxVec3_Pod* wsAxis_pod);
		[LinkName("phys_PxDistanceJointCreate")] public static extern physx_PxDistanceJoint_Pod* DistanceJointCreate(physx_PxPhysics_Pod* physics_pod, physx_PxRigidActor_Pod* actor0_pod, physx_PxTransform_Pod* localFrame0_pod, physx_PxRigidActor_Pod* actor1_pod, physx_PxTransform_Pod* localFrame1_pod);
		[LinkName("PxDistanceJoint_getDistance")] public static extern float DistanceJoint_getDistance(physx_PxDistanceJoint_Pod* self__pod);
		[LinkName("PxDistanceJoint_setMinDistance_mut")] public static extern void DistanceJoint_setMinDistance_mut(physx_PxDistanceJoint_Pod* self__pod, float distance);
		[LinkName("PxDistanceJoint_getMinDistance")] public static extern float DistanceJoint_getMinDistance(physx_PxDistanceJoint_Pod* self__pod);
		[LinkName("PxDistanceJoint_setMaxDistance_mut")] public static extern void DistanceJoint_setMaxDistance_mut(physx_PxDistanceJoint_Pod* self__pod, float distance);
		[LinkName("PxDistanceJoint_getMaxDistance")] public static extern float DistanceJoint_getMaxDistance(physx_PxDistanceJoint_Pod* self__pod);
		[LinkName("PxDistanceJoint_setTolerance_mut")] public static extern void DistanceJoint_setTolerance_mut(physx_PxDistanceJoint_Pod* self__pod, float tolerance);
		[LinkName("PxDistanceJoint_getTolerance")] public static extern float DistanceJoint_getTolerance(physx_PxDistanceJoint_Pod* self__pod);
		[LinkName("PxDistanceJoint_setStiffness_mut")] public static extern void DistanceJoint_setStiffness_mut(physx_PxDistanceJoint_Pod* self__pod, float stiffness);
		[LinkName("PxDistanceJoint_getStiffness")] public static extern float DistanceJoint_getStiffness(physx_PxDistanceJoint_Pod* self__pod);
		[LinkName("PxDistanceJoint_setDamping_mut")] public static extern void DistanceJoint_setDamping_mut(physx_PxDistanceJoint_Pod* self__pod, float damping);
		[LinkName("PxDistanceJoint_getDamping")] public static extern float DistanceJoint_getDamping(physx_PxDistanceJoint_Pod* self__pod);
		[LinkName("PxDistanceJoint_setDistanceJointFlags_mut")] public static extern void DistanceJoint_setDistanceJointFlags_mut(physx_PxDistanceJoint_Pod* self__pod, physx_PxDistanceJointFlags_Pod flags_pod);
		[LinkName("PxDistanceJoint_setDistanceJointFlag_mut")] public static extern void DistanceJoint_setDistanceJointFlag_mut(physx_PxDistanceJoint_Pod* self__pod, uint32 flag_pod, bool value);
		[LinkName("PxDistanceJoint_getDistanceJointFlags")] public static extern physx_PxDistanceJointFlags_Pod DistanceJoint_getDistanceJointFlags(physx_PxDistanceJoint_Pod* self__pod);
		[LinkName("PxDistanceJoint_getConcreteTypeName")] public static extern char8* DistanceJoint_getConcreteTypeName(physx_PxDistanceJoint_Pod* self__pod);
		[LinkName("PxDefaultAllocator_allocate_mut")] public static extern void* DefaultAllocator_allocate_mut(physx_PxDefaultAllocator_Pod* self__pod, uint64 size, char8* anonymous_arg1, char8* anonymous_arg2, int32 anonymous_arg3);
		[LinkName("PxDefaultAllocator_deallocate_mut")] public static extern void DefaultAllocator_deallocate_mut(physx_PxDefaultAllocator_Pod* self__pod, void* ptr);
		[LinkName("PxDefaultAllocator_delete")] public static extern void DefaultAllocator_delete(physx_PxDefaultAllocator_Pod* self__pod);
		[LinkName("phys_PxContactJointCreate")] public static extern physx_PxContactJoint_Pod* ContactJointCreate(physx_PxPhysics_Pod* physics_pod, physx_PxRigidActor_Pod* actor0_pod, physx_PxTransform_Pod* localFrame0_pod, physx_PxRigidActor_Pod* actor1_pod, physx_PxTransform_Pod* localFrame1_pod);
		[LinkName("PxJacobianRow_new")] public static extern physx_PxJacobianRow_Pod JacobianRow_new();
		[LinkName("PxJacobianRow_new_1")] public static extern physx_PxJacobianRow_Pod JacobianRow_new_1(physx_PxVec3_Pod* lin0_pod, physx_PxVec3_Pod* lin1_pod, physx_PxVec3_Pod* ang0_pod, physx_PxVec3_Pod* ang1_pod);
		[LinkName("PxContactJoint_setContact_mut")] public static extern void ContactJoint_setContact_mut(physx_PxContactJoint_Pod* self__pod, physx_PxVec3_Pod* contact_pod);
		[LinkName("PxContactJoint_setContactNormal_mut")] public static extern void ContactJoint_setContactNormal_mut(physx_PxContactJoint_Pod* self__pod, physx_PxVec3_Pod* contactNormal_pod);
		[LinkName("PxContactJoint_setPenetration_mut")] public static extern void ContactJoint_setPenetration_mut(physx_PxContactJoint_Pod* self__pod, float penetration);
		[LinkName("PxContactJoint_getContact")] public static extern physx_PxVec3_Pod ContactJoint_getContact(physx_PxContactJoint_Pod* self__pod);
		[LinkName("PxContactJoint_getContactNormal")] public static extern physx_PxVec3_Pod ContactJoint_getContactNormal(physx_PxContactJoint_Pod* self__pod);
		[LinkName("PxContactJoint_getPenetration")] public static extern float ContactJoint_getPenetration(physx_PxContactJoint_Pod* self__pod);
		[LinkName("PxContactJoint_getResititution")] public static extern float ContactJoint_getResititution(physx_PxContactJoint_Pod* self__pod);
		[LinkName("PxContactJoint_setResititution_mut")] public static extern void ContactJoint_setResititution_mut(physx_PxContactJoint_Pod* self__pod, float resititution);
		[LinkName("PxContactJoint_getBounceThreshold")] public static extern float ContactJoint_getBounceThreshold(physx_PxContactJoint_Pod* self__pod);
		[LinkName("PxContactJoint_setBounceThreshold_mut")] public static extern void ContactJoint_setBounceThreshold_mut(physx_PxContactJoint_Pod* self__pod, float bounceThreshold);
		[LinkName("PxContactJoint_getConcreteTypeName")] public static extern char8* ContactJoint_getConcreteTypeName(physx_PxContactJoint_Pod* self__pod);
		[LinkName("PxContactJoint_computeJacobians")] public static extern void ContactJoint_computeJacobians(physx_PxContactJoint_Pod* self__pod, physx_PxJacobianRow_Pod* jacobian_pod);
		[LinkName("PxContactJoint_getNbJacobianRows")] public static extern uint32 ContactJoint_getNbJacobianRows(physx_PxContactJoint_Pod* self__pod);
		[LinkName("phys_PxFixedJointCreate")] public static extern physx_PxFixedJoint_Pod* FixedJointCreate(physx_PxPhysics_Pod* physics_pod, physx_PxRigidActor_Pod* actor0_pod, physx_PxTransform_Pod* localFrame0_pod, physx_PxRigidActor_Pod* actor1_pod, physx_PxTransform_Pod* localFrame1_pod);
		[LinkName("PxFixedJoint_setProjectionLinearTolerance_mut")] public static extern void FixedJoint_setProjectionLinearTolerance_mut(physx_PxFixedJoint_Pod* self__pod, float tolerance);
		[LinkName("PxFixedJoint_getProjectionLinearTolerance")] public static extern float FixedJoint_getProjectionLinearTolerance(physx_PxFixedJoint_Pod* self__pod);
		[LinkName("PxFixedJoint_setProjectionAngularTolerance_mut")] public static extern void FixedJoint_setProjectionAngularTolerance_mut(physx_PxFixedJoint_Pod* self__pod, float tolerance);
		[LinkName("PxFixedJoint_getProjectionAngularTolerance")] public static extern float FixedJoint_getProjectionAngularTolerance(physx_PxFixedJoint_Pod* self__pod);
		[LinkName("PxFixedJoint_getConcreteTypeName")] public static extern char8* FixedJoint_getConcreteTypeName(physx_PxFixedJoint_Pod* self__pod);
		[LinkName("PxJointLimitParameters_new_alloc")] public static extern physx_PxJointLimitParameters_Pod* JointLimitParameters_new_alloc();
		[LinkName("PxJointLimitParameters_isValid")] public static extern bool JointLimitParameters_isValid(physx_PxJointLimitParameters_Pod* self__pod);
		[LinkName("PxJointLimitParameters_isSoft")] public static extern bool JointLimitParameters_isSoft(physx_PxJointLimitParameters_Pod* self__pod);
		[LinkName("PxJointLinearLimit_new")] public static extern physx_PxJointLinearLimit_Pod JointLinearLimit_new(physx_PxTolerancesScale_Pod* scale_pod, float extent, float contactDist);
		[LinkName("PxJointLinearLimit_new_1")] public static extern physx_PxJointLinearLimit_Pod JointLinearLimit_new_1(float extent, physx_PxSpring_Pod* spring_pod);
		[LinkName("PxJointLinearLimit_isValid")] public static extern bool JointLinearLimit_isValid(physx_PxJointLinearLimit_Pod* self__pod);
		[LinkName("PxJointLinearLimit_delete")] public static extern void JointLinearLimit_delete(physx_PxJointLinearLimit_Pod* self__pod);
		[LinkName("PxJointLinearLimitPair_new")] public static extern physx_PxJointLinearLimitPair_Pod JointLinearLimitPair_new(physx_PxTolerancesScale_Pod* scale_pod, float lowerLimit, float upperLimit, float contactDist);
		[LinkName("PxJointLinearLimitPair_new_1")] public static extern physx_PxJointLinearLimitPair_Pod JointLinearLimitPair_new_1(float lowerLimit, float upperLimit, physx_PxSpring_Pod* spring_pod);
		[LinkName("PxJointLinearLimitPair_isValid")] public static extern bool JointLinearLimitPair_isValid(physx_PxJointLinearLimitPair_Pod* self__pod);
		[LinkName("PxJointLinearLimitPair_delete")] public static extern void JointLinearLimitPair_delete(physx_PxJointLinearLimitPair_Pod* self__pod);
		[LinkName("PxJointAngularLimitPair_new")] public static extern physx_PxJointAngularLimitPair_Pod JointAngularLimitPair_new(float lowerLimit, float upperLimit, float contactDist);
		[LinkName("PxJointAngularLimitPair_new_1")] public static extern physx_PxJointAngularLimitPair_Pod JointAngularLimitPair_new_1(float lowerLimit, float upperLimit, physx_PxSpring_Pod* spring_pod);
		[LinkName("PxJointAngularLimitPair_isValid")] public static extern bool JointAngularLimitPair_isValid(physx_PxJointAngularLimitPair_Pod* self__pod);
		[LinkName("PxJointAngularLimitPair_delete")] public static extern void JointAngularLimitPair_delete(physx_PxJointAngularLimitPair_Pod* self__pod);
		[LinkName("PxJointLimitCone_new")] public static extern physx_PxJointLimitCone_Pod JointLimitCone_new(float yLimitAngle, float zLimitAngle, float contactDist);
		[LinkName("PxJointLimitCone_new_1")] public static extern physx_PxJointLimitCone_Pod JointLimitCone_new_1(float yLimitAngle, float zLimitAngle, physx_PxSpring_Pod* spring_pod);
		[LinkName("PxJointLimitCone_isValid")] public static extern bool JointLimitCone_isValid(physx_PxJointLimitCone_Pod* self__pod);
		[LinkName("PxJointLimitCone_delete")] public static extern void JointLimitCone_delete(physx_PxJointLimitCone_Pod* self__pod);
		[LinkName("PxJointLimitPyramid_new")] public static extern physx_PxJointLimitPyramid_Pod JointLimitPyramid_new(float yLimitAngleMin, float yLimitAngleMax, float zLimitAngleMin, float zLimitAngleMax, float contactDist);
		[LinkName("PxJointLimitPyramid_new_1")] public static extern physx_PxJointLimitPyramid_Pod JointLimitPyramid_new_1(float yLimitAngleMin, float yLimitAngleMax, float zLimitAngleMin, float zLimitAngleMax, physx_PxSpring_Pod* spring_pod);
		[LinkName("PxJointLimitPyramid_isValid")] public static extern bool JointLimitPyramid_isValid(physx_PxJointLimitPyramid_Pod* self__pod);
		[LinkName("PxJointLimitPyramid_delete")] public static extern void JointLimitPyramid_delete(physx_PxJointLimitPyramid_Pod* self__pod);
		[LinkName("phys_PxPrismaticJointCreate")] public static extern physx_PxPrismaticJoint_Pod* PrismaticJointCreate(physx_PxPhysics_Pod* physics_pod, physx_PxRigidActor_Pod* actor0_pod, physx_PxTransform_Pod* localFrame0_pod, physx_PxRigidActor_Pod* actor1_pod, physx_PxTransform_Pod* localFrame1_pod);
		[LinkName("PxPrismaticJoint_getPosition")] public static extern float PrismaticJoint_getPosition(physx_PxPrismaticJoint_Pod* self__pod);
		[LinkName("PxPrismaticJoint_getVelocity")] public static extern float PrismaticJoint_getVelocity(physx_PxPrismaticJoint_Pod* self__pod);
		[LinkName("PxPrismaticJoint_setLimit_mut")] public static extern void PrismaticJoint_setLimit_mut(physx_PxPrismaticJoint_Pod* self__pod, physx_PxJointLinearLimitPair_Pod* anonymous_arg0_pod);
		[LinkName("PxPrismaticJoint_getLimit")] public static extern physx_PxJointLinearLimitPair_Pod PrismaticJoint_getLimit(physx_PxPrismaticJoint_Pod* self__pod);
		[LinkName("PxPrismaticJoint_setPrismaticJointFlags_mut")] public static extern void PrismaticJoint_setPrismaticJointFlags_mut(physx_PxPrismaticJoint_Pod* self__pod, physx_PxPrismaticJointFlags_Pod flags_pod);
		[LinkName("PxPrismaticJoint_setPrismaticJointFlag_mut")] public static extern void PrismaticJoint_setPrismaticJointFlag_mut(physx_PxPrismaticJoint_Pod* self__pod, uint32 flag_pod, bool value);
		[LinkName("PxPrismaticJoint_getPrismaticJointFlags")] public static extern physx_PxPrismaticJointFlags_Pod PrismaticJoint_getPrismaticJointFlags(physx_PxPrismaticJoint_Pod* self__pod);
		[LinkName("PxPrismaticJoint_setProjectionLinearTolerance_mut")] public static extern void PrismaticJoint_setProjectionLinearTolerance_mut(physx_PxPrismaticJoint_Pod* self__pod, float tolerance);
		[LinkName("PxPrismaticJoint_getProjectionLinearTolerance")] public static extern float PrismaticJoint_getProjectionLinearTolerance(physx_PxPrismaticJoint_Pod* self__pod);
		[LinkName("PxPrismaticJoint_setProjectionAngularTolerance_mut")] public static extern void PrismaticJoint_setProjectionAngularTolerance_mut(physx_PxPrismaticJoint_Pod* self__pod, float tolerance);
		[LinkName("PxPrismaticJoint_getProjectionAngularTolerance")] public static extern float PrismaticJoint_getProjectionAngularTolerance(physx_PxPrismaticJoint_Pod* self__pod);
		[LinkName("PxPrismaticJoint_getConcreteTypeName")] public static extern char8* PrismaticJoint_getConcreteTypeName(physx_PxPrismaticJoint_Pod* self__pod);
		[LinkName("phys_PxRevoluteJointCreate")] public static extern physx_PxRevoluteJoint_Pod* RevoluteJointCreate(physx_PxPhysics_Pod* physics_pod, physx_PxRigidActor_Pod* actor0_pod, physx_PxTransform_Pod* localFrame0_pod, physx_PxRigidActor_Pod* actor1_pod, physx_PxTransform_Pod* localFrame1_pod);
		[LinkName("PxRevoluteJoint_getAngle")] public static extern float RevoluteJoint_getAngle(physx_PxRevoluteJoint_Pod* self__pod);
		[LinkName("PxRevoluteJoint_getVelocity")] public static extern float RevoluteJoint_getVelocity(physx_PxRevoluteJoint_Pod* self__pod);
		[LinkName("PxRevoluteJoint_setLimit_mut")] public static extern void RevoluteJoint_setLimit_mut(physx_PxRevoluteJoint_Pod* self__pod, physx_PxJointAngularLimitPair_Pod* limits_pod);
		[LinkName("PxRevoluteJoint_getLimit")] public static extern physx_PxJointAngularLimitPair_Pod RevoluteJoint_getLimit(physx_PxRevoluteJoint_Pod* self__pod);
		[LinkName("PxRevoluteJoint_setDriveVelocity_mut")] public static extern void RevoluteJoint_setDriveVelocity_mut(physx_PxRevoluteJoint_Pod* self__pod, float velocity, bool autowake);
		[LinkName("PxRevoluteJoint_getDriveVelocity")] public static extern float RevoluteJoint_getDriveVelocity(physx_PxRevoluteJoint_Pod* self__pod);
		[LinkName("PxRevoluteJoint_setDriveForceLimit_mut")] public static extern void RevoluteJoint_setDriveForceLimit_mut(physx_PxRevoluteJoint_Pod* self__pod, float limit);
		[LinkName("PxRevoluteJoint_getDriveForceLimit")] public static extern float RevoluteJoint_getDriveForceLimit(physx_PxRevoluteJoint_Pod* self__pod);
		[LinkName("PxRevoluteJoint_setDriveGearRatio_mut")] public static extern void RevoluteJoint_setDriveGearRatio_mut(physx_PxRevoluteJoint_Pod* self__pod, float ratio);
		[LinkName("PxRevoluteJoint_getDriveGearRatio")] public static extern float RevoluteJoint_getDriveGearRatio(physx_PxRevoluteJoint_Pod* self__pod);
		[LinkName("PxRevoluteJoint_setRevoluteJointFlags_mut")] public static extern void RevoluteJoint_setRevoluteJointFlags_mut(physx_PxRevoluteJoint_Pod* self__pod, physx_PxRevoluteJointFlags_Pod flags_pod);
		[LinkName("PxRevoluteJoint_setRevoluteJointFlag_mut")] public static extern void RevoluteJoint_setRevoluteJointFlag_mut(physx_PxRevoluteJoint_Pod* self__pod, uint32 flag_pod, bool value);
		[LinkName("PxRevoluteJoint_getRevoluteJointFlags")] public static extern physx_PxRevoluteJointFlags_Pod RevoluteJoint_getRevoluteJointFlags(physx_PxRevoluteJoint_Pod* self__pod);
		[LinkName("PxRevoluteJoint_setProjectionLinearTolerance_mut")] public static extern void RevoluteJoint_setProjectionLinearTolerance_mut(physx_PxRevoluteJoint_Pod* self__pod, float tolerance);
		[LinkName("PxRevoluteJoint_getProjectionLinearTolerance")] public static extern float RevoluteJoint_getProjectionLinearTolerance(physx_PxRevoluteJoint_Pod* self__pod);
		[LinkName("PxRevoluteJoint_setProjectionAngularTolerance_mut")] public static extern void RevoluteJoint_setProjectionAngularTolerance_mut(physx_PxRevoluteJoint_Pod* self__pod, float tolerance);
		[LinkName("PxRevoluteJoint_getProjectionAngularTolerance")] public static extern float RevoluteJoint_getProjectionAngularTolerance(physx_PxRevoluteJoint_Pod* self__pod);
		[LinkName("PxRevoluteJoint_getConcreteTypeName")] public static extern char8* RevoluteJoint_getConcreteTypeName(physx_PxRevoluteJoint_Pod* self__pod);
		[LinkName("phys_PxSphericalJointCreate")] public static extern physx_PxSphericalJoint_Pod* SphericalJointCreate(physx_PxPhysics_Pod* physics_pod, physx_PxRigidActor_Pod* actor0_pod, physx_PxTransform_Pod* localFrame0_pod, physx_PxRigidActor_Pod* actor1_pod, physx_PxTransform_Pod* localFrame1_pod);
		[LinkName("PxSphericalJoint_getLimitCone")] public static extern physx_PxJointLimitCone_Pod SphericalJoint_getLimitCone(physx_PxSphericalJoint_Pod* self__pod);
		[LinkName("PxSphericalJoint_setLimitCone_mut")] public static extern void SphericalJoint_setLimitCone_mut(physx_PxSphericalJoint_Pod* self__pod, physx_PxJointLimitCone_Pod* limit_pod);
		[LinkName("PxSphericalJoint_getSwingYAngle")] public static extern float SphericalJoint_getSwingYAngle(physx_PxSphericalJoint_Pod* self__pod);
		[LinkName("PxSphericalJoint_getSwingZAngle")] public static extern float SphericalJoint_getSwingZAngle(physx_PxSphericalJoint_Pod* self__pod);
		[LinkName("PxSphericalJoint_setSphericalJointFlags_mut")] public static extern void SphericalJoint_setSphericalJointFlags_mut(physx_PxSphericalJoint_Pod* self__pod, physx_PxSphericalJointFlags_Pod flags_pod);
		[LinkName("PxSphericalJoint_setSphericalJointFlag_mut")] public static extern void SphericalJoint_setSphericalJointFlag_mut(physx_PxSphericalJoint_Pod* self__pod, uint32 flag_pod, bool value);
		[LinkName("PxSphericalJoint_getSphericalJointFlags")] public static extern physx_PxSphericalJointFlags_Pod SphericalJoint_getSphericalJointFlags(physx_PxSphericalJoint_Pod* self__pod);
		[LinkName("PxSphericalJoint_setProjectionLinearTolerance_mut")] public static extern void SphericalJoint_setProjectionLinearTolerance_mut(physx_PxSphericalJoint_Pod* self__pod, float tolerance);
		[LinkName("PxSphericalJoint_getProjectionLinearTolerance")] public static extern float SphericalJoint_getProjectionLinearTolerance(physx_PxSphericalJoint_Pod* self__pod);
		[LinkName("PxSphericalJoint_getConcreteTypeName")] public static extern char8* SphericalJoint_getConcreteTypeName(physx_PxSphericalJoint_Pod* self__pod);
		[LinkName("phys_PxD6JointCreate")] public static extern physx_PxD6Joint_Pod* D6JointCreate(physx_PxPhysics_Pod* physics_pod, physx_PxRigidActor_Pod* actor0_pod, physx_PxTransform_Pod* localFrame0_pod, physx_PxRigidActor_Pod* actor1_pod, physx_PxTransform_Pod* localFrame1_pod);
		[LinkName("PxD6JointDrive_new")] public static extern physx_PxD6JointDrive_Pod D6JointDrive_new();
		[LinkName("PxD6JointDrive_new_1")] public static extern physx_PxD6JointDrive_Pod D6JointDrive_new_1(float driveStiffness, float driveDamping, float driveForceLimit, bool isAcceleration);
		[LinkName("PxD6JointDrive_isValid")] public static extern bool D6JointDrive_isValid(physx_PxD6JointDrive_Pod* self__pod);
		[LinkName("PxD6Joint_setMotion_mut")] public static extern void D6Joint_setMotion_mut(physx_PxD6Joint_Pod* self__pod, uint32 axis_pod, uint32 type_pod);
		[LinkName("PxD6Joint_getMotion")] public static extern uint32 D6Joint_getMotion(physx_PxD6Joint_Pod* self__pod, uint32 axis_pod);
		[LinkName("PxD6Joint_getTwistAngle")] public static extern float D6Joint_getTwistAngle(physx_PxD6Joint_Pod* self__pod);
		[LinkName("PxD6Joint_getTwist")] public static extern float D6Joint_getTwist(physx_PxD6Joint_Pod* self__pod);
		[LinkName("PxD6Joint_getSwingYAngle")] public static extern float D6Joint_getSwingYAngle(physx_PxD6Joint_Pod* self__pod);
		[LinkName("PxD6Joint_getSwingZAngle")] public static extern float D6Joint_getSwingZAngle(physx_PxD6Joint_Pod* self__pod);
		[LinkName("PxD6Joint_setDistanceLimit_mut")] public static extern void D6Joint_setDistanceLimit_mut(physx_PxD6Joint_Pod* self__pod, physx_PxJointLinearLimit_Pod* limit_pod);
		[LinkName("PxD6Joint_getDistanceLimit")] public static extern physx_PxJointLinearLimit_Pod D6Joint_getDistanceLimit(physx_PxD6Joint_Pod* self__pod);
		[LinkName("PxD6Joint_setLinearLimit_mut")] public static extern void D6Joint_setLinearLimit_mut(physx_PxD6Joint_Pod* self__pod, physx_PxJointLinearLimit_Pod* limit_pod);
		[LinkName("PxD6Joint_getLinearLimit")] public static extern physx_PxJointLinearLimit_Pod D6Joint_getLinearLimit(physx_PxD6Joint_Pod* self__pod);
		[LinkName("PxD6Joint_setLinearLimit_mut_1")] public static extern void D6Joint_setLinearLimit_mut_1(physx_PxD6Joint_Pod* self__pod, uint32 axis_pod, physx_PxJointLinearLimitPair_Pod* limit_pod);
		[LinkName("PxD6Joint_getLinearLimit_1")] public static extern physx_PxJointLinearLimitPair_Pod D6Joint_getLinearLimit_1(physx_PxD6Joint_Pod* self__pod, uint32 axis_pod);
		[LinkName("PxD6Joint_setTwistLimit_mut")] public static extern void D6Joint_setTwistLimit_mut(physx_PxD6Joint_Pod* self__pod, physx_PxJointAngularLimitPair_Pod* limit_pod);
		[LinkName("PxD6Joint_getTwistLimit")] public static extern physx_PxJointAngularLimitPair_Pod D6Joint_getTwistLimit(physx_PxD6Joint_Pod* self__pod);
		[LinkName("PxD6Joint_setSwingLimit_mut")] public static extern void D6Joint_setSwingLimit_mut(physx_PxD6Joint_Pod* self__pod, physx_PxJointLimitCone_Pod* limit_pod);
		[LinkName("PxD6Joint_getSwingLimit")] public static extern physx_PxJointLimitCone_Pod D6Joint_getSwingLimit(physx_PxD6Joint_Pod* self__pod);
		[LinkName("PxD6Joint_setPyramidSwingLimit_mut")] public static extern void D6Joint_setPyramidSwingLimit_mut(physx_PxD6Joint_Pod* self__pod, physx_PxJointLimitPyramid_Pod* limit_pod);
		[LinkName("PxD6Joint_getPyramidSwingLimit")] public static extern physx_PxJointLimitPyramid_Pod D6Joint_getPyramidSwingLimit(physx_PxD6Joint_Pod* self__pod);
		[LinkName("PxD6Joint_setDrive_mut")] public static extern void D6Joint_setDrive_mut(physx_PxD6Joint_Pod* self__pod, uint32 index_pod, physx_PxD6JointDrive_Pod* drive_pod);
		[LinkName("PxD6Joint_getDrive")] public static extern physx_PxD6JointDrive_Pod D6Joint_getDrive(physx_PxD6Joint_Pod* self__pod, uint32 index_pod);
		[LinkName("PxD6Joint_setDrivePosition_mut")] public static extern void D6Joint_setDrivePosition_mut(physx_PxD6Joint_Pod* self__pod, physx_PxTransform_Pod* pose_pod, bool autowake);
		[LinkName("PxD6Joint_getDrivePosition")] public static extern physx_PxTransform_Pod D6Joint_getDrivePosition(physx_PxD6Joint_Pod* self__pod);
		[LinkName("PxD6Joint_setDriveVelocity_mut")] public static extern void D6Joint_setDriveVelocity_mut(physx_PxD6Joint_Pod* self__pod, physx_PxVec3_Pod* linear_pod, physx_PxVec3_Pod* angular_pod, bool autowake);
		[LinkName("PxD6Joint_getDriveVelocity")] public static extern void D6Joint_getDriveVelocity(physx_PxD6Joint_Pod* self__pod, physx_PxVec3_Pod* linear_pod, physx_PxVec3_Pod* angular_pod);
		[LinkName("PxD6Joint_setProjectionLinearTolerance_mut")] public static extern void D6Joint_setProjectionLinearTolerance_mut(physx_PxD6Joint_Pod* self__pod, float tolerance);
		[LinkName("PxD6Joint_getProjectionLinearTolerance")] public static extern float D6Joint_getProjectionLinearTolerance(physx_PxD6Joint_Pod* self__pod);
		[LinkName("PxD6Joint_setProjectionAngularTolerance_mut")] public static extern void D6Joint_setProjectionAngularTolerance_mut(physx_PxD6Joint_Pod* self__pod, float tolerance);
		[LinkName("PxD6Joint_getProjectionAngularTolerance")] public static extern float D6Joint_getProjectionAngularTolerance(physx_PxD6Joint_Pod* self__pod);
		[LinkName("PxD6Joint_getConcreteTypeName")] public static extern char8* D6Joint_getConcreteTypeName(physx_PxD6Joint_Pod* self__pod);
		[LinkName("PxGroupsMask_new_alloc")] public static extern physx_PxGroupsMask_Pod* GroupsMask_new_alloc();
		[LinkName("PxGroupsMask_delete")] public static extern void GroupsMask_delete(physx_PxGroupsMask_Pod* self__pod);
		[LinkName("phys_PxDefaultSimulationFilterShader")] public static extern physx_PxFilterFlags_Pod DefaultSimulationFilterShader(uint32 attributes0, physx_PxFilterData_Pod filterData0_pod, uint32 attributes1, physx_PxFilterData_Pod filterData1_pod, physx_PxPairFlags_Pod* pairFlags_pod, void* constantBlock, uint32 constantBlockSize);
		[LinkName("phys_PxGetGroupCollisionFlag")] public static extern bool GetGroupCollisionFlag(uint16 group1, uint16 group2);
		[LinkName("phys_PxSetGroupCollisionFlag")] public static extern void SetGroupCollisionFlag(uint16 group1, uint16 group2, bool enable);
		[LinkName("phys_PxGetGroup")] public static extern uint16 GetGroup(physx_PxActor_Pod* actor_pod);
		[LinkName("phys_PxSetGroup")] public static extern void SetGroup(physx_PxActor_Pod* actor_pod, uint16 collisionGroup);
		[LinkName("phys_PxGetFilterOps")] public static extern void GetFilterOps(uint32* op0_pod, uint32* op1_pod, uint32* op2_pod);
		[LinkName("phys_PxSetFilterOps")] public static extern void SetFilterOps(uint32* op0_pod, uint32* op1_pod, uint32* op2_pod);
		[LinkName("phys_PxGetFilterBool")] public static extern bool GetFilterBool();
		[LinkName("phys_PxSetFilterBool")] public static extern void SetFilterBool(bool enable);
		[LinkName("phys_PxGetFilterConstants")] public static extern void GetFilterConstants(physx_PxGroupsMask_Pod* c0_pod, physx_PxGroupsMask_Pod* c1_pod);
		[LinkName("phys_PxSetFilterConstants")] public static extern void SetFilterConstants(physx_PxGroupsMask_Pod* c0_pod, physx_PxGroupsMask_Pod* c1_pod);
		[LinkName("phys_PxGetGroupsMask")] public static extern physx_PxGroupsMask_Pod GetGroupsMask(physx_PxActor_Pod* actor_pod);
		[LinkName("phys_PxSetGroupsMask")] public static extern void SetGroupsMask(physx_PxActor_Pod* actor_pod, physx_PxGroupsMask_Pod* mask_pod);
		[LinkName("PxDefaultErrorCallback_new_alloc")] public static extern physx_PxDefaultErrorCallback_Pod* DefaultErrorCallback_new_alloc();
		[LinkName("PxDefaultErrorCallback_delete")] public static extern void DefaultErrorCallback_delete(physx_PxDefaultErrorCallback_Pod* self__pod);
		[LinkName("PxDefaultErrorCallback_reportError_mut")] public static extern void DefaultErrorCallback_reportError_mut(physx_PxDefaultErrorCallback_Pod* self__pod, int code_pod, char8* message, char8* file, int32 line);
		[LinkName("PxRigidActorExt_createExclusiveShape_mut")] public static extern physx_PxShape_Pod* RigidActorExt_createExclusiveShape_mut(physx_PxRigidActor_Pod* actor_pod, physx_PxGeometry_Pod* geometry_pod, physx_PxMaterial_Pod** materials_pod, uint16 materialCount, physx_PxShapeFlags_Pod shapeFlags_pod);
		[LinkName("PxRigidActorExt_createExclusiveShape_mut_1")] public static extern physx_PxShape_Pod* RigidActorExt_createExclusiveShape_mut_1(physx_PxRigidActor_Pod* actor_pod, physx_PxGeometry_Pod* geometry_pod, physx_PxMaterial_Pod* material_pod, physx_PxShapeFlags_Pod shapeFlags_pod);
		[LinkName("PxRigidActorExt_getRigidActorShapeLocalBoundsList_mut")] public static extern physx_PxBounds3_Pod* RigidActorExt_getRigidActorShapeLocalBoundsList_mut(physx_PxRigidActor_Pod* actor_pod, uint32* numBounds_pod);
		[LinkName("PxMassProperties_new")] public static extern physx_PxMassProperties_Pod MassProperties_new();
		[LinkName("PxMassProperties_new_1")] public static extern physx_PxMassProperties_Pod MassProperties_new_1(float m, physx_PxMat33_Pod* inertiaT_pod, physx_PxVec3_Pod* com_pod);
		[LinkName("PxMassProperties_new_2")] public static extern physx_PxMassProperties_Pod MassProperties_new_2(physx_PxGeometry_Pod* geometry_pod);
		[LinkName("PxMassProperties_translate_mut")] public static extern void MassProperties_translate_mut(physx_PxMassProperties_Pod* self__pod, physx_PxVec3_Pod* t_pod);
		[LinkName("PxMassProperties_getMassSpaceInertia_mut")] public static extern physx_PxVec3_Pod MassProperties_getMassSpaceInertia_mut(physx_PxMat33_Pod* inertia_pod, physx_PxQuat_Pod* massFrame_pod);
		[LinkName("PxMassProperties_translateInertia_mut")] public static extern physx_PxMat33_Pod MassProperties_translateInertia_mut(physx_PxMat33_Pod* inertia_pod, float mass, physx_PxVec3_Pod* t_pod);
		[LinkName("PxMassProperties_rotateInertia_mut")] public static extern physx_PxMat33_Pod MassProperties_rotateInertia_mut(physx_PxMat33_Pod* inertia_pod, physx_PxQuat_Pod* q_pod);
		[LinkName("PxMassProperties_scaleInertia_mut")] public static extern physx_PxMat33_Pod MassProperties_scaleInertia_mut(physx_PxMat33_Pod* inertia_pod, physx_PxQuat_Pod* scaleRotation_pod, physx_PxVec3_Pod* scale_pod);
		[LinkName("PxMassProperties_sum_mut")] public static extern physx_PxMassProperties_Pod MassProperties_sum_mut(physx_PxMassProperties_Pod* props_pod, physx_PxTransform_Pod* transforms_pod, uint32 count);
		[LinkName("PxRigidBodyExt_updateMassAndInertia_mut")] public static extern bool RigidBodyExt_updateMassAndInertia_mut(physx_PxRigidBody_Pod* body_pod, float* shapeDensities, uint32 shapeDensityCount, physx_PxVec3_Pod* massLocalPose_pod, bool includeNonSimShapes);
		[LinkName("PxRigidBodyExt_updateMassAndInertia_mut_1")] public static extern bool RigidBodyExt_updateMassAndInertia_mut_1(physx_PxRigidBody_Pod* body_pod, float density, physx_PxVec3_Pod* massLocalPose_pod, bool includeNonSimShapes);
		[LinkName("PxRigidBodyExt_setMassAndUpdateInertia_mut")] public static extern bool RigidBodyExt_setMassAndUpdateInertia_mut(physx_PxRigidBody_Pod* body_pod, float* shapeMasses, uint32 shapeMassCount, physx_PxVec3_Pod* massLocalPose_pod, bool includeNonSimShapes);
		[LinkName("PxRigidBodyExt_setMassAndUpdateInertia_mut_1")] public static extern bool RigidBodyExt_setMassAndUpdateInertia_mut_1(physx_PxRigidBody_Pod* body_pod, float mass, physx_PxVec3_Pod* massLocalPose_pod, bool includeNonSimShapes);
		[LinkName("PxRigidBodyExt_computeMassPropertiesFromShapes_mut")] public static extern physx_PxMassProperties_Pod RigidBodyExt_computeMassPropertiesFromShapes_mut(physx_PxShape_Pod** shapes_pod, uint32 shapeCount);
		[LinkName("PxRigidBodyExt_addForceAtPos_mut")] public static extern void RigidBodyExt_addForceAtPos_mut(physx_PxRigidBody_Pod* body_pod, physx_PxVec3_Pod* force_pod, physx_PxVec3_Pod* pos_pod, uint32 mode_pod, bool wakeup);
		[LinkName("PxRigidBodyExt_addForceAtLocalPos_mut")] public static extern void RigidBodyExt_addForceAtLocalPos_mut(physx_PxRigidBody_Pod* body_pod, physx_PxVec3_Pod* force_pod, physx_PxVec3_Pod* pos_pod, uint32 mode_pod, bool wakeup);
		[LinkName("PxRigidBodyExt_addLocalForceAtPos_mut")] public static extern void RigidBodyExt_addLocalForceAtPos_mut(physx_PxRigidBody_Pod* body_pod, physx_PxVec3_Pod* force_pod, physx_PxVec3_Pod* pos_pod, uint32 mode_pod, bool wakeup);
		[LinkName("PxRigidBodyExt_addLocalForceAtLocalPos_mut")] public static extern void RigidBodyExt_addLocalForceAtLocalPos_mut(physx_PxRigidBody_Pod* body_pod, physx_PxVec3_Pod* force_pod, physx_PxVec3_Pod* pos_pod, uint32 mode_pod, bool wakeup);
		[LinkName("PxRigidBodyExt_getVelocityAtPos_mut")] public static extern physx_PxVec3_Pod RigidBodyExt_getVelocityAtPos_mut(physx_PxRigidBody_Pod* body_pod, physx_PxVec3_Pod* pos_pod);
		[LinkName("PxRigidBodyExt_getLocalVelocityAtLocalPos_mut")] public static extern physx_PxVec3_Pod RigidBodyExt_getLocalVelocityAtLocalPos_mut(physx_PxRigidBody_Pod* body_pod, physx_PxVec3_Pod* pos_pod);
		[LinkName("PxRigidBodyExt_getVelocityAtOffset_mut")] public static extern physx_PxVec3_Pod RigidBodyExt_getVelocityAtOffset_mut(physx_PxRigidBody_Pod* body_pod, physx_PxVec3_Pod* pos_pod);
		[LinkName("PxRigidBodyExt_linearSweepSingle_mut")] public static extern bool RigidBodyExt_linearSweepSingle_mut(physx_PxRigidBody_Pod* body_pod, physx_PxScene_Pod* scene_pod, physx_PxVec3_Pod* unitDir_pod, float distance, physx_PxHitFlags_Pod outputFlags_pod, physx_PxSweepHit_Pod* closestHit_pod, uint32* shapeIndex_pod, physx_PxQueryFilterData_Pod* filterData_pod, physx_PxQueryFilterCallback_Pod* filterCall_pod, physx_PxQueryCache_Pod* cache_pod, float inflation);
		[LinkName("PxRigidBodyExt_linearSweepMultiple_mut")] public static extern uint32 RigidBodyExt_linearSweepMultiple_mut(physx_PxRigidBody_Pod* body_pod, physx_PxScene_Pod* scene_pod, physx_PxVec3_Pod* unitDir_pod, float distance, physx_PxHitFlags_Pod outputFlags_pod, physx_PxSweepHit_Pod* touchHitBuffer_pod, uint32* touchHitShapeIndices, uint32 touchHitBufferSize, physx_PxSweepHit_Pod* block_pod, int32* blockingShapeIndex_pod, bool* overflow_pod, physx_PxQueryFilterData_Pod* filterData_pod, physx_PxQueryFilterCallback_Pod* filterCall_pod, physx_PxQueryCache_Pod* cache_pod, float inflation);
		[LinkName("PxRigidBodyExt_computeVelocityDeltaFromImpulse_mut")] public static extern void RigidBodyExt_computeVelocityDeltaFromImpulse_mut(physx_PxRigidBody_Pod* body_pod, physx_PxVec3_Pod* impulsiveForce_pod, physx_PxVec3_Pod* impulsiveTorque_pod, physx_PxVec3_Pod* deltaLinearVelocity_pod, physx_PxVec3_Pod* deltaAngularVelocity_pod);
		[LinkName("PxRigidBodyExt_computeVelocityDeltaFromImpulse_mut_1")] public static extern void RigidBodyExt_computeVelocityDeltaFromImpulse_mut_1(physx_PxRigidBody_Pod* body_pod, physx_PxTransform_Pod* globalPose_pod, physx_PxVec3_Pod* point_pod, physx_PxVec3_Pod* impulse_pod, float invMassScale, float invInertiaScale, physx_PxVec3_Pod* deltaLinearVelocity_pod, physx_PxVec3_Pod* deltaAngularVelocity_pod);
		[LinkName("PxRigidBodyExt_computeLinearAngularImpulse_mut")] public static extern void RigidBodyExt_computeLinearAngularImpulse_mut(physx_PxRigidBody_Pod* body_pod, physx_PxTransform_Pod* globalPose_pod, physx_PxVec3_Pod* point_pod, physx_PxVec3_Pod* impulse_pod, float invMassScale, float invInertiaScale, physx_PxVec3_Pod* linearImpulse_pod, physx_PxVec3_Pod* angularImpulse_pod);
		[LinkName("PxShapeExt_getGlobalPose_mut")] public static extern physx_PxTransform_Pod ShapeExt_getGlobalPose_mut(physx_PxShape_Pod* shape_pod, physx_PxRigidActor_Pod* actor_pod);
		[LinkName("PxShapeExt_raycast_mut")] public static extern uint32 ShapeExt_raycast_mut(physx_PxShape_Pod* shape_pod, physx_PxRigidActor_Pod* actor_pod, physx_PxVec3_Pod* rayOrigin_pod, physx_PxVec3_Pod* rayDir_pod, float maxDist, physx_PxHitFlags_Pod hitFlags_pod, uint32 maxHits, physx_PxRaycastHit_Pod* rayHits_pod);
		[LinkName("PxShapeExt_overlap_mut")] public static extern bool ShapeExt_overlap_mut(physx_PxShape_Pod* shape_pod, physx_PxRigidActor_Pod* actor_pod, physx_PxGeometry_Pod* otherGeom_pod, physx_PxTransform_Pod* otherGeomPose_pod);
		[LinkName("PxShapeExt_sweep_mut")] public static extern bool ShapeExt_sweep_mut(physx_PxShape_Pod* shape_pod, physx_PxRigidActor_Pod* actor_pod, physx_PxVec3_Pod* unitDir_pod, float distance, physx_PxGeometry_Pod* otherGeom_pod, physx_PxTransform_Pod* otherGeomPose_pod, physx_PxSweepHit_Pod* sweepHit_pod, physx_PxHitFlags_Pod hitFlags_pod);
		[LinkName("PxShapeExt_getWorldBounds_mut")] public static extern physx_PxBounds3_Pod ShapeExt_getWorldBounds_mut(physx_PxShape_Pod* shape_pod, physx_PxRigidActor_Pod* actor_pod, float inflation);
		[LinkName("PxMeshOverlapUtil_new_alloc")] public static extern physx_PxMeshOverlapUtil_Pod* MeshOverlapUtil_new_alloc();
		[LinkName("PxMeshOverlapUtil_delete")] public static extern void MeshOverlapUtil_delete(physx_PxMeshOverlapUtil_Pod* self__pod);
		[LinkName("PxMeshOverlapUtil_findOverlap_mut")] public static extern uint32 MeshOverlapUtil_findOverlap_mut(physx_PxMeshOverlapUtil_Pod* self__pod, physx_PxGeometry_Pod* geom_pod, physx_PxTransform_Pod* geomPose_pod, physx_PxTriangleMeshGeometry_Pod* meshGeom_pod, physx_PxTransform_Pod* meshPose_pod);
		[LinkName("PxMeshOverlapUtil_findOverlap_mut_1")] public static extern uint32 MeshOverlapUtil_findOverlap_mut_1(physx_PxMeshOverlapUtil_Pod* self__pod, physx_PxGeometry_Pod* geom_pod, physx_PxTransform_Pod* geomPose_pod, physx_PxHeightFieldGeometry_Pod* hfGeom_pod, physx_PxTransform_Pod* hfPose_pod);
		[LinkName("PxMeshOverlapUtil_getResults")] public static extern uint32* MeshOverlapUtil_getResults(physx_PxMeshOverlapUtil_Pod* self__pod);
		[LinkName("PxMeshOverlapUtil_getNbResults")] public static extern uint32 MeshOverlapUtil_getNbResults(physx_PxMeshOverlapUtil_Pod* self__pod);
		[LinkName("phys_PxComputeTriangleMeshPenetration")] public static extern bool ComputeTriangleMeshPenetration(physx_PxVec3_Pod* direction_pod, float* depth_pod, physx_PxGeometry_Pod* geom_pod, physx_PxTransform_Pod* geomPose_pod, physx_PxTriangleMeshGeometry_Pod* meshGeom_pod, physx_PxTransform_Pod* meshPose_pod, uint32 maxIter, uint32* usedIter);
		[LinkName("phys_PxComputeHeightFieldPenetration")] public static extern bool ComputeHeightFieldPenetration(physx_PxVec3_Pod* direction_pod, float* depth_pod, physx_PxGeometry_Pod* geom_pod, physx_PxTransform_Pod* geomPose_pod, physx_PxHeightFieldGeometry_Pod* heightFieldGeom_pod, physx_PxTransform_Pod* heightFieldPose_pod, uint32 maxIter, uint32* usedIter);
		[LinkName("PxXmlMiscParameter_new")] public static extern physx_PxSerialization_PxXmlMiscParameter_Pod XmlMiscParameter_new();
		[LinkName("PxXmlMiscParameter_new_1")] public static extern physx_PxSerialization_PxXmlMiscParameter_Pod XmlMiscParameter_new_1(physx_PxVec3_Pod* inUpVector_pod, physx_PxTolerancesScale_Pod inScale_pod);
		[LinkName("PxSerialization_isSerializable_mut")] public static extern bool Serialization_isSerializable_mut(physx_PxCollection_Pod* collection_pod, physx_PxSerializationRegistry_Pod* sr_pod, physx_PxCollection_Pod* externalReferences_pod);
		[LinkName("PxSerialization_complete_mut")] public static extern void Serialization_complete_mut(physx_PxCollection_Pod* collection_pod, physx_PxSerializationRegistry_Pod* sr_pod, physx_PxCollection_Pod* exceptFor_pod, bool followJoints);
		[LinkName("PxSerialization_createSerialObjectIds_mut")] public static extern void Serialization_createSerialObjectIds_mut(physx_PxCollection_Pod* collection_pod, uint64 baseValue);
		[LinkName("PxSerialization_createCollectionFromXml_mut")] public static extern physx_PxCollection_Pod* Serialization_createCollectionFromXml_mut(physx_PxInputData_Pod* inputData_pod, physx_PxCooking_Pod* cooking_pod, physx_PxSerializationRegistry_Pod* sr_pod, physx_PxCollection_Pod* externalRefs_pod, physx_PxStringTable_Pod* stringTable_pod, physx_PxSerialization_PxXmlMiscParameter_Pod* outArgs_pod);
		[LinkName("PxSerialization_createCollectionFromBinary_mut")] public static extern physx_PxCollection_Pod* Serialization_createCollectionFromBinary_mut(void* memBlock, physx_PxSerializationRegistry_Pod* sr_pod, physx_PxCollection_Pod* externalRefs_pod);
		[LinkName("PxSerialization_serializeCollectionToXml_mut")] public static extern bool Serialization_serializeCollectionToXml_mut(physx_PxOutputStream_Pod* outputStream_pod, physx_PxCollection_Pod* collection_pod, physx_PxSerializationRegistry_Pod* sr_pod, physx_PxCooking_Pod* cooking_pod, physx_PxCollection_Pod* externalRefs_pod, physx_PxSerialization_PxXmlMiscParameter_Pod* inArgs_pod);
		[LinkName("PxSerialization_serializeCollectionToBinary_mut")] public static extern bool Serialization_serializeCollectionToBinary_mut(physx_PxOutputStream_Pod* outputStream_pod, physx_PxCollection_Pod* collection_pod, physx_PxSerializationRegistry_Pod* sr_pod, physx_PxCollection_Pod* externalRefs_pod, bool exportNames);
		[LinkName("PxSerialization_serializeCollectionToBinaryDeterministic_mut")] public static extern bool Serialization_serializeCollectionToBinaryDeterministic_mut(physx_PxOutputStream_Pod* outputStream_pod, physx_PxCollection_Pod* collection_pod, physx_PxSerializationRegistry_Pod* sr_pod, physx_PxCollection_Pod* externalRefs_pod, bool exportNames);
		[LinkName("PxSerialization_dumpBinaryMetaData_mut")] public static extern void Serialization_dumpBinaryMetaData_mut(physx_PxOutputStream_Pod* outputStream_pod, physx_PxSerializationRegistry_Pod* sr_pod);
		[LinkName("PxSerialization_createBinaryConverter_mut")] public static extern physx_PxBinaryConverter_Pod* Serialization_createBinaryConverter_mut();
		[LinkName("PxSerialization_createSerializationRegistry_mut")] public static extern physx_PxSerializationRegistry_Pod* Serialization_createSerializationRegistry_mut(physx_PxPhysics_Pod* physics_pod);
		[LinkName("PxDefaultCpuDispatcher_release_mut")] public static extern void DefaultCpuDispatcher_release_mut(physx_PxDefaultCpuDispatcher_Pod* self__pod);
		[LinkName("PxDefaultCpuDispatcher_setRunProfiled_mut")] public static extern void DefaultCpuDispatcher_setRunProfiled_mut(physx_PxDefaultCpuDispatcher_Pod* self__pod, bool runProfiled);
		[LinkName("PxDefaultCpuDispatcher_getRunProfiled")] public static extern bool DefaultCpuDispatcher_getRunProfiled(physx_PxDefaultCpuDispatcher_Pod* self__pod);
		[LinkName("phys_PxDefaultCpuDispatcherCreate")] public static extern physx_PxDefaultCpuDispatcher_Pod* DefaultCpuDispatcherCreate(uint32 numThreads, uint32* affinityMasks);
		[LinkName("phys_PxBuildSmoothNormals")] public static extern bool BuildSmoothNormals(uint32 nbTris, uint32 nbVerts, physx_PxVec3_Pod* verts_pod, uint32* dFaces, uint16* wFaces, physx_PxVec3_Pod* normals_pod, bool flip);
		[LinkName("phys_PxCreateDynamic")] public static extern physx_PxRigidDynamic_Pod* CreateDynamic(physx_PxPhysics_Pod* sdk_pod, physx_PxTransform_Pod* transform_pod, physx_PxGeometry_Pod* geometry_pod, physx_PxMaterial_Pod* material_pod, float density, physx_PxTransform_Pod* shapeOffset_pod);
		[LinkName("phys_PxCreateDynamic_1")] public static extern physx_PxRigidDynamic_Pod* CreateDynamic_1(physx_PxPhysics_Pod* sdk_pod, physx_PxTransform_Pod* transform_pod, physx_PxShape_Pod* shape_pod, float density);
		[LinkName("phys_PxCreateKinematic")] public static extern physx_PxRigidDynamic_Pod* CreateKinematic(physx_PxPhysics_Pod* sdk_pod, physx_PxTransform_Pod* transform_pod, physx_PxGeometry_Pod* geometry_pod, physx_PxMaterial_Pod* material_pod, float density, physx_PxTransform_Pod* shapeOffset_pod);
		[LinkName("phys_PxCreateKinematic_1")] public static extern physx_PxRigidDynamic_Pod* CreateKinematic_1(physx_PxPhysics_Pod* sdk_pod, physx_PxTransform_Pod* transform_pod, physx_PxShape_Pod* shape_pod, float density);
		[LinkName("phys_PxCreateStatic")] public static extern physx_PxRigidStatic_Pod* CreateStatic(physx_PxPhysics_Pod* sdk_pod, physx_PxTransform_Pod* transform_pod, physx_PxGeometry_Pod* geometry_pod, physx_PxMaterial_Pod* material_pod, physx_PxTransform_Pod* shapeOffset_pod);
		[LinkName("phys_PxCreateStatic_1")] public static extern physx_PxRigidStatic_Pod* CreateStatic_1(physx_PxPhysics_Pod* sdk_pod, physx_PxTransform_Pod* transform_pod, physx_PxShape_Pod* shape_pod);
		[LinkName("phys_PxCreateStatic_2")] public static extern physx_PxRigidStatic_Pod* CreateStatic_2(physx_PxPhysics_Pod* sdk_pod, physx_PxTransform_Pod* transform_pod, physx_PxShape_Pod* shape_pod);
		[LinkName("phys_PxCloneShape")] public static extern physx_PxShape_Pod* CloneShape(physx_PxPhysics_Pod* physicsSDK_pod, physx_PxShape_Pod* shape_pod, bool isExclusive);
		[LinkName("phys_PxCloneStatic")] public static extern physx_PxRigidStatic_Pod* CloneStatic(physx_PxPhysics_Pod* physicsSDK_pod, physx_PxTransform_Pod* transform_pod, physx_PxRigidActor_Pod* actor_pod);
		[LinkName("phys_PxCloneDynamic")] public static extern physx_PxRigidDynamic_Pod* CloneDynamic(physx_PxPhysics_Pod* physicsSDK_pod, physx_PxTransform_Pod* transform_pod, physx_PxRigidDynamic_Pod* body_pod);
		[LinkName("phys_PxCreatePlane")] public static extern physx_PxRigidStatic_Pod* CreatePlane(physx_PxPhysics_Pod* sdk_pod, physx_PxPlane_Pod* plane_pod, physx_PxMaterial_Pod* material_pod);
		[LinkName("phys_PxScaleRigidActor")] public static extern void ScaleRigidActor(physx_PxRigidActor_Pod* actor_pod, float scale, bool scaleMassProps);
		[LinkName("PxStringTableExt_createStringTable_mut")] public static extern physx_PxStringTable_Pod* StringTableExt_createStringTable_mut(physx_PxAllocatorCallback_Pod* inAllocator_pod);
		[LinkName("PxBroadPhaseExt_createRegionsFromWorldBounds_mut")] public static extern uint32 BroadPhaseExt_createRegionsFromWorldBounds_mut(physx_PxBounds3_Pod* regions_pod, physx_PxBounds3_Pod* globalBounds_pod, uint32 nbSubdiv, uint32 upAxis);
		[LinkName("PxSceneQueryExt_raycastAny_mut")] public static extern bool SceneQueryExt_raycastAny_mut(physx_PxScene_Pod* scene_pod, physx_PxVec3_Pod* origin_pod, physx_PxVec3_Pod* unitDir_pod, float distance, physx_PxSceneQueryHit_Pod* hit_pod, physx_PxSceneQueryFilterData_Pod* filterData_pod, physx_PxSceneQueryFilterCallback_Pod* filterCall_pod, physx_PxSceneQueryCache_Pod* cache_pod);
		[LinkName("PxSceneQueryExt_raycastSingle_mut")] public static extern bool SceneQueryExt_raycastSingle_mut(physx_PxScene_Pod* scene_pod, physx_PxVec3_Pod* origin_pod, physx_PxVec3_Pod* unitDir_pod, float distance, physx_PxSceneQueryFlags_Pod outputFlags_pod, physx_PxRaycastHit_Pod* hit_pod, physx_PxSceneQueryFilterData_Pod* filterData_pod, physx_PxSceneQueryFilterCallback_Pod* filterCall_pod, physx_PxSceneQueryCache_Pod* cache_pod);
		[LinkName("PxSceneQueryExt_raycastMultiple_mut")] public static extern int32 SceneQueryExt_raycastMultiple_mut(physx_PxScene_Pod* scene_pod, physx_PxVec3_Pod* origin_pod, physx_PxVec3_Pod* unitDir_pod, float distance, physx_PxSceneQueryFlags_Pod outputFlags_pod, physx_PxRaycastHit_Pod* hitBuffer_pod, uint32 hitBufferSize, bool* blockingHit_pod, physx_PxSceneQueryFilterData_Pod* filterData_pod, physx_PxSceneQueryFilterCallback_Pod* filterCall_pod, physx_PxSceneQueryCache_Pod* cache_pod);
		[LinkName("PxSceneQueryExt_sweepAny_mut")] public static extern bool SceneQueryExt_sweepAny_mut(physx_PxScene_Pod* scene_pod, physx_PxGeometry_Pod* geometry_pod, physx_PxTransform_Pod* pose_pod, physx_PxVec3_Pod* unitDir_pod, float distance, physx_PxSceneQueryFlags_Pod queryFlags_pod, physx_PxSceneQueryHit_Pod* hit_pod, physx_PxSceneQueryFilterData_Pod* filterData_pod, physx_PxSceneQueryFilterCallback_Pod* filterCall_pod, physx_PxSceneQueryCache_Pod* cache_pod, float inflation);
		[LinkName("PxSceneQueryExt_sweepSingle_mut")] public static extern bool SceneQueryExt_sweepSingle_mut(physx_PxScene_Pod* scene_pod, physx_PxGeometry_Pod* geometry_pod, physx_PxTransform_Pod* pose_pod, physx_PxVec3_Pod* unitDir_pod, float distance, physx_PxSceneQueryFlags_Pod outputFlags_pod, physx_PxSweepHit_Pod* hit_pod, physx_PxSceneQueryFilterData_Pod* filterData_pod, physx_PxSceneQueryFilterCallback_Pod* filterCall_pod, physx_PxSceneQueryCache_Pod* cache_pod, float inflation);
		[LinkName("PxSceneQueryExt_sweepMultiple_mut")] public static extern int32 SceneQueryExt_sweepMultiple_mut(physx_PxScene_Pod* scene_pod, physx_PxGeometry_Pod* geometry_pod, physx_PxTransform_Pod* pose_pod, physx_PxVec3_Pod* unitDir_pod, float distance, physx_PxSceneQueryFlags_Pod outputFlags_pod, physx_PxSweepHit_Pod* hitBuffer_pod, uint32 hitBufferSize, bool* blockingHit_pod, physx_PxSceneQueryFilterData_Pod* filterData_pod, physx_PxSceneQueryFilterCallback_Pod* filterCall_pod, physx_PxSceneQueryCache_Pod* cache_pod, float inflation);
		[LinkName("PxSceneQueryExt_overlapMultiple_mut")] public static extern int32 SceneQueryExt_overlapMultiple_mut(physx_PxScene_Pod* scene_pod, physx_PxGeometry_Pod* geometry_pod, physx_PxTransform_Pod* pose_pod, physx_PxOverlapHit_Pod* hitBuffer_pod, uint32 hitBufferSize, physx_PxSceneQueryFilterData_Pod* filterData_pod, physx_PxSceneQueryFilterCallback_Pod* filterCall_pod);
		[LinkName("PxSceneQueryExt_overlapAny_mut")] public static extern bool SceneQueryExt_overlapAny_mut(physx_PxScene_Pod* scene_pod, physx_PxGeometry_Pod* geometry_pod, physx_PxTransform_Pod* pose_pod, physx_PxOverlapHit_Pod* hit_pod, physx_PxSceneQueryFilterData_Pod* filterData_pod, physx_PxSceneQueryFilterCallback_Pod* filterCall_pod);
		[LinkName("phys_PxInitExtensions")] public static extern bool InitExtensions(physx_PxPhysics_Pod* physics_pod, physx_PxPvd_Pod* pvd_pod);
		[LinkName("phys_PxCloseExtensions")] public static extern void CloseExtensions();
		[LinkName("phys_PxFindFaceIndex")] public static extern uint32 FindFaceIndex(physx_PxConvexMeshGeometry_Pod* convexGeom_pod, physx_PxTransform_Pod* geomPose_pod, physx_PxVec3_Pod* impactPos_pod, physx_PxVec3_Pod* unitDir_pod);
		[LinkName("PxBinaryConverter_release_mut")] public static extern void BinaryConverter_release_mut(physx_PxBinaryConverter_Pod* self__pod);
		[LinkName("PxBinaryConverter_setReportMode_mut")] public static extern void BinaryConverter_setReportMode_mut(physx_PxBinaryConverter_Pod* self__pod, uint32 mode_pod);
		[LinkName("PxBinaryConverter_setMetaData_mut")] public static extern bool BinaryConverter_setMetaData_mut(physx_PxBinaryConverter_Pod* self__pod, physx_PxInputStream_Pod* srcMetaData_pod, physx_PxInputStream_Pod* dstMetaData_pod);
		[LinkName("PxBinaryConverter_compareMetaData")] public static extern bool BinaryConverter_compareMetaData(physx_PxBinaryConverter_Pod* self__pod);
		[LinkName("PxBinaryConverter_convert_mut")] public static extern bool BinaryConverter_convert_mut(physx_PxBinaryConverter_Pod* self__pod, physx_PxInputStream_Pod* srcStream_pod, uint32 srcSize, physx_PxOutputStream_Pod* targetStream_pod);
		[LinkName("PxRepXObject_new")] public static extern physx_PxRepXObject_Pod RepXObject_new(char8* inTypeName, void* inSerializable, uint64 inId);
		[LinkName("PxRepXObject_isValid")] public static extern bool RepXObject_isValid(physx_PxRepXObject_Pod* self__pod);
		[LinkName("PxRepXInstantiationArgs_new")] public static extern physx_PxRepXInstantiationArgs_Pod RepXInstantiationArgs_new(physx_PxPhysics_Pod* inPhysics_pod, physx_PxCooking_Pod* inCooking_pod, physx_PxStringTable_Pod* inStringTable_pod);
		[LinkName("PxRepXSerializer_getTypeName_mut")] public static extern char8* RepXSerializer_getTypeName_mut(physx_PxRepXSerializer_Pod* self__pod);
		[LinkName("PxRepXSerializer_objectToFile_mut")] public static extern void RepXSerializer_objectToFile_mut(physx_PxRepXSerializer_Pod* self__pod, physx_PxRepXObject_Pod* inLiveObject_pod, physx_PxCollection_Pod* inCollection_pod, physx_XmlWriter_Pod* inWriter_pod, physx_MemoryBuffer_Pod* inTempBuffer_pod, physx_PxRepXInstantiationArgs_Pod* inArgs_pod);
		[LinkName("PxRepXSerializer_fileToObject_mut")] public static extern physx_PxRepXObject_Pod RepXSerializer_fileToObject_mut(physx_PxRepXSerializer_Pod* self__pod, physx_XmlReader_Pod* inReader_pod, physx_XmlMemoryAllocator_Pod* inAllocator_pod, physx_PxRepXInstantiationArgs_Pod* inArgs_pod, physx_PxCollection_Pod* inCollection_pod);
		[LinkName("phys_PxCreateRepXObject")] public static extern physx_PxRepXObject_Pod CreateRepXObject(physx_PxBase_Pod* inType_pod, uint64 inId);
		[LinkName("phys_PxInitVehicleSDK")] public static extern bool InitVehicleSDK(physx_PxPhysics_Pod* physics_pod, physx_PxSerializationRegistry_Pod* serializationRegistry_pod);
		[LinkName("phys_PxCloseVehicleSDK")] public static extern void CloseVehicleSDK(physx_PxSerializationRegistry_Pod* serializationRegistry_pod);
		[LinkName("phys_PxVehicleSetBasisVectors")] public static extern void VehicleSetBasisVectors(physx_PxVec3_Pod* up_pod, physx_PxVec3_Pod* forward_pod);
		[LinkName("phys_PxVehicleSetUpdateMode")] public static extern void VehicleSetUpdateMode(uint32 vehicleUpdateMode_pod);
		[LinkName("phys_PxVehicleSetSweepHitRejectionAngles")] public static extern void VehicleSetSweepHitRejectionAngles(float pointRejectAngle, float normalRejectAngle);
		[LinkName("phys_PxVehicleSetMaxHitActorAcceleration")] public static extern void VehicleSetMaxHitActorAcceleration(float maxHitActorAcceleration);
		[LinkName("PxVehicleChassisData_new")] public static extern physx_PxVehicleChassisData_Pod VehicleChassisData_new();
		[LinkName("PxVehicleEngineData_new")] public static extern physx_PxVehicleEngineData_Pod VehicleEngineData_new();
		[LinkName("PxVehicleEngineData_getRecipMOI")] public static extern float VehicleEngineData_getRecipMOI(physx_PxVehicleEngineData_Pod* self__pod);
		[LinkName("PxVehicleEngineData_getRecipMaxOmega")] public static extern float VehicleEngineData_getRecipMaxOmega(physx_PxVehicleEngineData_Pod* self__pod);
		[LinkName("PxVehicleEngineData_new_1")] public static extern physx_PxVehicleEngineData_Pod VehicleEngineData_new_1(uint32 anonymous_arg0_pod);
		[LinkName("PxVehicleEngineData_delete")] public static extern void VehicleEngineData_delete(physx_PxVehicleEngineData_Pod* self__pod);
		[LinkName("PxVehicleGearsData_new")] public static extern physx_PxVehicleGearsData_Pod VehicleGearsData_new();
		[LinkName("PxVehicleGearsData_new_1")] public static extern physx_PxVehicleGearsData_Pod VehicleGearsData_new_1(uint32 anonymous_arg0_pod);
		[LinkName("PxVehicleGearsData_getGearRatio")] public static extern float VehicleGearsData_getGearRatio(physx_PxVehicleGearsData_Pod* self__pod, uint32 a_pod);
		[LinkName("PxVehicleGearsData_setGearRatio_mut")] public static extern void VehicleGearsData_setGearRatio_mut(physx_PxVehicleGearsData_Pod* self__pod, uint32 a_pod, float ratio);
		[LinkName("PxVehicleAutoBoxData_new")] public static extern physx_PxVehicleAutoBoxData_Pod VehicleAutoBoxData_new();
		[LinkName("PxVehicleAutoBoxData_setLatency_mut")] public static extern void VehicleAutoBoxData_setLatency_mut(physx_PxVehicleAutoBoxData_Pod* self__pod, float latency);
		[LinkName("PxVehicleAutoBoxData_getLatency")] public static extern float VehicleAutoBoxData_getLatency(physx_PxVehicleAutoBoxData_Pod* self__pod);
		[LinkName("PxVehicleAutoBoxData_new_1")] public static extern physx_PxVehicleAutoBoxData_Pod VehicleAutoBoxData_new_1(uint32 anonymous_arg0_pod);
		[LinkName("PxVehicleAutoBoxData_getUpRatios")] public static extern float VehicleAutoBoxData_getUpRatios(physx_PxVehicleAutoBoxData_Pod* self__pod, uint32 a_pod);
		[LinkName("PxVehicleAutoBoxData_setUpRatios_mut")] public static extern void VehicleAutoBoxData_setUpRatios_mut(physx_PxVehicleAutoBoxData_Pod* self__pod, uint32 a_pod, float ratio);
		[LinkName("PxVehicleAutoBoxData_getDownRatios")] public static extern float VehicleAutoBoxData_getDownRatios(physx_PxVehicleAutoBoxData_Pod* self__pod, uint32 a_pod);
		[LinkName("PxVehicleAutoBoxData_setDownRatios_mut")] public static extern void VehicleAutoBoxData_setDownRatios_mut(physx_PxVehicleAutoBoxData_Pod* self__pod, uint32 a_pod, float ratio);
		[LinkName("PxVehicleDifferential4WData_new")] public static extern physx_PxVehicleDifferential4WData_Pod VehicleDifferential4WData_new();
		[LinkName("PxVehicleDifferential4WData_new_1")] public static extern physx_PxVehicleDifferential4WData_Pod VehicleDifferential4WData_new_1(uint32 anonymous_arg0_pod);
		[LinkName("PxVehicleDifferentialNWData_new")] public static extern physx_PxVehicleDifferentialNWData_Pod VehicleDifferentialNWData_new();
		[LinkName("PxVehicleDifferentialNWData_setDrivenWheel_mut")] public static extern void VehicleDifferentialNWData_setDrivenWheel_mut(physx_PxVehicleDifferentialNWData_Pod* self__pod, uint32 wheelId, bool drivenState);
		[LinkName("PxVehicleDifferentialNWData_getIsDrivenWheel")] public static extern bool VehicleDifferentialNWData_getIsDrivenWheel(physx_PxVehicleDifferentialNWData_Pod* self__pod, uint32 wheelId);
		[LinkName("PxVehicleDifferentialNWData_new_1")] public static extern physx_PxVehicleDifferentialNWData_Pod VehicleDifferentialNWData_new_1(uint32 anonymous_arg0_pod);
		[LinkName("PxVehicleDifferentialNWData_getDrivenWheelStatus")] public static extern uint32 VehicleDifferentialNWData_getDrivenWheelStatus(physx_PxVehicleDifferentialNWData_Pod* self__pod);
		[LinkName("PxVehicleDifferentialNWData_setDrivenWheelStatus_mut")] public static extern void VehicleDifferentialNWData_setDrivenWheelStatus_mut(physx_PxVehicleDifferentialNWData_Pod* self__pod, uint32 status);
		[LinkName("PxVehicleAckermannGeometryData_new")] public static extern physx_PxVehicleAckermannGeometryData_Pod VehicleAckermannGeometryData_new();
		[LinkName("PxVehicleAckermannGeometryData_new_1")] public static extern physx_PxVehicleAckermannGeometryData_Pod VehicleAckermannGeometryData_new_1(uint32 anonymous_arg0_pod);
		[LinkName("PxVehicleClutchData_new")] public static extern physx_PxVehicleClutchData_Pod VehicleClutchData_new();
		[LinkName("PxVehicleClutchData_new_1")] public static extern physx_PxVehicleClutchData_Pod VehicleClutchData_new_1(uint32 anonymous_arg0_pod);
		[LinkName("PxVehicleTireLoadFilterData_new")] public static extern physx_PxVehicleTireLoadFilterData_Pod VehicleTireLoadFilterData_new();
		[LinkName("PxVehicleTireLoadFilterData_getDenominator")] public static extern float VehicleTireLoadFilterData_getDenominator(physx_PxVehicleTireLoadFilterData_Pod* self__pod);
		[LinkName("PxVehicleTireLoadFilterData_new_1")] public static extern physx_PxVehicleTireLoadFilterData_Pod VehicleTireLoadFilterData_new_1(uint32 anonymous_arg0_pod);
		[LinkName("PxVehicleWheelData_new")] public static extern physx_PxVehicleWheelData_Pod VehicleWheelData_new();
		[LinkName("PxVehicleWheelData_getRecipRadius")] public static extern float VehicleWheelData_getRecipRadius(physx_PxVehicleWheelData_Pod* self__pod);
		[LinkName("PxVehicleWheelData_getRecipMOI")] public static extern float VehicleWheelData_getRecipMOI(physx_PxVehicleWheelData_Pod* self__pod);
		[LinkName("PxVehicleSuspensionData_new")] public static extern physx_PxVehicleSuspensionData_Pod VehicleSuspensionData_new();
		[LinkName("PxVehicleSuspensionData_getRecipMaxCompression")] public static extern float VehicleSuspensionData_getRecipMaxCompression(physx_PxVehicleSuspensionData_Pod* self__pod);
		[LinkName("PxVehicleSuspensionData_getRecipMaxDroop")] public static extern float VehicleSuspensionData_getRecipMaxDroop(physx_PxVehicleSuspensionData_Pod* self__pod);
		[LinkName("PxVehicleSuspensionData_setMassAndPreserveNaturalFrequency_mut")] public static extern void VehicleSuspensionData_setMassAndPreserveNaturalFrequency_mut(physx_PxVehicleSuspensionData_Pod* self__pod, float newSprungMass);
		[LinkName("PxVehicleAntiRollBarData_new")] public static extern physx_PxVehicleAntiRollBarData_Pod VehicleAntiRollBarData_new();
		[LinkName("PxVehicleTireData_new")] public static extern physx_PxVehicleTireData_Pod VehicleTireData_new();
		[LinkName("PxVehicleTireData_getRecipLongitudinalStiffnessPerUnitGravity")] public static extern float VehicleTireData_getRecipLongitudinalStiffnessPerUnitGravity(physx_PxVehicleTireData_Pod* self__pod);
		[LinkName("PxVehicleTireData_getFrictionVsSlipGraphRecipx1Minusx0")] public static extern float VehicleTireData_getFrictionVsSlipGraphRecipx1Minusx0(physx_PxVehicleTireData_Pod* self__pod);
		[LinkName("PxVehicleTireData_getFrictionVsSlipGraphRecipx2Minusx1")] public static extern float VehicleTireData_getFrictionVsSlipGraphRecipx2Minusx1(physx_PxVehicleTireData_Pod* self__pod);
		[LinkName("PxVehicleWheelsSimData_allocate_mut")] public static extern physx_PxVehicleWheelsSimData_Pod* VehicleWheelsSimData_allocate_mut(uint32 nbWheels);
		[LinkName("PxVehicleWheelsSimData_setChassisMass_mut")] public static extern void VehicleWheelsSimData_setChassisMass_mut(physx_PxVehicleWheelsSimData_Pod* self__pod, float chassisMass);
		[LinkName("PxVehicleWheelsSimData_free_mut")] public static extern void VehicleWheelsSimData_free_mut(physx_PxVehicleWheelsSimData_Pod* self__pod);
		[LinkName("PxVehicleWheelsSimData_copy_mut")] public static extern void VehicleWheelsSimData_copy_mut(physx_PxVehicleWheelsSimData_Pod* self__pod, physx_PxVehicleWheelsSimData_Pod* src_pod, uint32 srcWheel, uint32 trgWheel);
		[LinkName("PxVehicleWheelsSimData_getNbWheels")] public static extern uint32 VehicleWheelsSimData_getNbWheels(physx_PxVehicleWheelsSimData_Pod* self__pod);
		[LinkName("PxVehicleWheelsSimData_getSuspensionData")] public static extern physx_PxVehicleSuspensionData_Pod* VehicleWheelsSimData_getSuspensionData(physx_PxVehicleWheelsSimData_Pod* self__pod, uint32 id);
		[LinkName("PxVehicleWheelsSimData_getWheelData")] public static extern physx_PxVehicleWheelData_Pod* VehicleWheelsSimData_getWheelData(physx_PxVehicleWheelsSimData_Pod* self__pod, uint32 id);
		[LinkName("PxVehicleWheelsSimData_getTireData")] public static extern physx_PxVehicleTireData_Pod* VehicleWheelsSimData_getTireData(physx_PxVehicleWheelsSimData_Pod* self__pod, uint32 id);
		[LinkName("PxVehicleWheelsSimData_getSuspTravelDirection")] public static extern physx_PxVec3_Pod* VehicleWheelsSimData_getSuspTravelDirection(physx_PxVehicleWheelsSimData_Pod* self__pod, uint32 id);
		[LinkName("PxVehicleWheelsSimData_getSuspForceAppPointOffset")] public static extern physx_PxVec3_Pod* VehicleWheelsSimData_getSuspForceAppPointOffset(physx_PxVehicleWheelsSimData_Pod* self__pod, uint32 id);
		[LinkName("PxVehicleWheelsSimData_getTireForceAppPointOffset")] public static extern physx_PxVec3_Pod* VehicleWheelsSimData_getTireForceAppPointOffset(physx_PxVehicleWheelsSimData_Pod* self__pod, uint32 id);
		[LinkName("PxVehicleWheelsSimData_getWheelCentreOffset")] public static extern physx_PxVec3_Pod* VehicleWheelsSimData_getWheelCentreOffset(physx_PxVehicleWheelsSimData_Pod* self__pod, uint32 id);
		[LinkName("PxVehicleWheelsSimData_getWheelShapeMapping")] public static extern int32 VehicleWheelsSimData_getWheelShapeMapping(physx_PxVehicleWheelsSimData_Pod* self__pod, uint32 wheelId);
		[LinkName("PxVehicleWheelsSimData_getSceneQueryFilterData")] public static extern physx_PxFilterData_Pod* VehicleWheelsSimData_getSceneQueryFilterData(physx_PxVehicleWheelsSimData_Pod* self__pod, uint32 suspId);
		[LinkName("PxVehicleWheelsSimData_getNbAntiRollBars")] public static extern uint32 VehicleWheelsSimData_getNbAntiRollBars(physx_PxVehicleWheelsSimData_Pod* self__pod);
		[LinkName("PxVehicleWheelsSimData_getAntiRollBarData")] public static extern physx_PxVehicleAntiRollBarData_Pod* VehicleWheelsSimData_getAntiRollBarData(physx_PxVehicleWheelsSimData_Pod* self__pod, uint32 antiRollId);
		[LinkName("PxVehicleWheelsSimData_getTireLoadFilterData")] public static extern physx_PxVehicleTireLoadFilterData_Pod* VehicleWheelsSimData_getTireLoadFilterData(physx_PxVehicleWheelsSimData_Pod* self__pod);
		[LinkName("PxVehicleWheelsSimData_setSuspensionData_mut")] public static extern void VehicleWheelsSimData_setSuspensionData_mut(physx_PxVehicleWheelsSimData_Pod* self__pod, uint32 id, physx_PxVehicleSuspensionData_Pod* susp_pod);
		[LinkName("PxVehicleWheelsSimData_setWheelData_mut")] public static extern void VehicleWheelsSimData_setWheelData_mut(physx_PxVehicleWheelsSimData_Pod* self__pod, uint32 id, physx_PxVehicleWheelData_Pod* wheel_pod);
		[LinkName("PxVehicleWheelsSimData_setTireData_mut")] public static extern void VehicleWheelsSimData_setTireData_mut(physx_PxVehicleWheelsSimData_Pod* self__pod, uint32 id, physx_PxVehicleTireData_Pod* tire_pod);
		[LinkName("PxVehicleWheelsSimData_setSuspTravelDirection_mut")] public static extern void VehicleWheelsSimData_setSuspTravelDirection_mut(physx_PxVehicleWheelsSimData_Pod* self__pod, uint32 id, physx_PxVec3_Pod* dir_pod);
		[LinkName("PxVehicleWheelsSimData_setSuspForceAppPointOffset_mut")] public static extern void VehicleWheelsSimData_setSuspForceAppPointOffset_mut(physx_PxVehicleWheelsSimData_Pod* self__pod, uint32 id, physx_PxVec3_Pod* offset_pod);
		[LinkName("PxVehicleWheelsSimData_setTireForceAppPointOffset_mut")] public static extern void VehicleWheelsSimData_setTireForceAppPointOffset_mut(physx_PxVehicleWheelsSimData_Pod* self__pod, uint32 id, physx_PxVec3_Pod* offset_pod);
		[LinkName("PxVehicleWheelsSimData_setWheelCentreOffset_mut")] public static extern void VehicleWheelsSimData_setWheelCentreOffset_mut(physx_PxVehicleWheelsSimData_Pod* self__pod, uint32 id, physx_PxVec3_Pod* offset_pod);
		[LinkName("PxVehicleWheelsSimData_setWheelShapeMapping_mut")] public static extern void VehicleWheelsSimData_setWheelShapeMapping_mut(physx_PxVehicleWheelsSimData_Pod* self__pod, uint32 wheelId, int32 shapeId);
		[LinkName("PxVehicleWheelsSimData_setSceneQueryFilterData_mut")] public static extern void VehicleWheelsSimData_setSceneQueryFilterData_mut(physx_PxVehicleWheelsSimData_Pod* self__pod, uint32 suspId, physx_PxFilterData_Pod* sqFilterData_pod);
		[LinkName("PxVehicleWheelsSimData_setTireLoadFilterData_mut")] public static extern void VehicleWheelsSimData_setTireLoadFilterData_mut(physx_PxVehicleWheelsSimData_Pod* self__pod, physx_PxVehicleTireLoadFilterData_Pod* tireLoadFilter_pod);
		[LinkName("PxVehicleWheelsSimData_addAntiRollBarData_mut")] public static extern uint32 VehicleWheelsSimData_addAntiRollBarData_mut(physx_PxVehicleWheelsSimData_Pod* self__pod, physx_PxVehicleAntiRollBarData_Pod* antiRoll_pod);
		[LinkName("PxVehicleWheelsSimData_disableWheel_mut")] public static extern void VehicleWheelsSimData_disableWheel_mut(physx_PxVehicleWheelsSimData_Pod* self__pod, uint32 wheel);
		[LinkName("PxVehicleWheelsSimData_enableWheel_mut")] public static extern void VehicleWheelsSimData_enableWheel_mut(physx_PxVehicleWheelsSimData_Pod* self__pod, uint32 wheel);
		[LinkName("PxVehicleWheelsSimData_getIsWheelDisabled")] public static extern bool VehicleWheelsSimData_getIsWheelDisabled(physx_PxVehicleWheelsSimData_Pod* self__pod, uint32 wheel);
		[LinkName("PxVehicleWheelsSimData_setSubStepCount_mut")] public static extern void VehicleWheelsSimData_setSubStepCount_mut(physx_PxVehicleWheelsSimData_Pod* self__pod, float thresholdLongitudinalSpeed, uint32 lowForwardSpeedSubStepCount, uint32 highForwardSpeedSubStepCount);
		[LinkName("PxVehicleWheelsSimData_setMinLongSlipDenominator_mut")] public static extern void VehicleWheelsSimData_setMinLongSlipDenominator_mut(physx_PxVehicleWheelsSimData_Pod* self__pod, float minLongSlipDenominator);
		[LinkName("PxVehicleWheelsSimData_new_alloc")] public static extern physx_PxVehicleWheelsSimData_Pod* VehicleWheelsSimData_new_alloc(uint32 anonymous_arg0_pod);
		[LinkName("PxVehicleWheelsSimData_getBinaryMetaData_mut")] public static extern void VehicleWheelsSimData_getBinaryMetaData_mut(physx_PxOutputStream_Pod* stream_pod);
		[LinkName("PxVehicleWheelsSimData_getNbWheels4")] public static extern uint32 VehicleWheelsSimData_getNbWheels4(physx_PxVehicleWheelsSimData_Pod* self__pod);
		[LinkName("PxVehicleWheelsSimData_getNbSuspensionData")] public static extern uint32 VehicleWheelsSimData_getNbSuspensionData(physx_PxVehicleWheelsSimData_Pod* self__pod);
		[LinkName("PxVehicleWheelsSimData_getNbWheelData")] public static extern uint32 VehicleWheelsSimData_getNbWheelData(physx_PxVehicleWheelsSimData_Pod* self__pod);
		[LinkName("PxVehicleWheelsSimData_getNbSuspTravelDirection")] public static extern uint32 VehicleWheelsSimData_getNbSuspTravelDirection(physx_PxVehicleWheelsSimData_Pod* self__pod);
		[LinkName("PxVehicleWheelsSimData_getNbTireData")] public static extern uint32 VehicleWheelsSimData_getNbTireData(physx_PxVehicleWheelsSimData_Pod* self__pod);
		[LinkName("PxVehicleWheelsSimData_getNbSuspForceAppPointOffset")] public static extern uint32 VehicleWheelsSimData_getNbSuspForceAppPointOffset(physx_PxVehicleWheelsSimData_Pod* self__pod);
		[LinkName("PxVehicleWheelsSimData_getNbTireForceAppPointOffset")] public static extern uint32 VehicleWheelsSimData_getNbTireForceAppPointOffset(physx_PxVehicleWheelsSimData_Pod* self__pod);
		[LinkName("PxVehicleWheelsSimData_getNbWheelCentreOffset")] public static extern uint32 VehicleWheelsSimData_getNbWheelCentreOffset(physx_PxVehicleWheelsSimData_Pod* self__pod);
		[LinkName("PxVehicleWheelsSimData_getNbWheelShapeMapping")] public static extern uint32 VehicleWheelsSimData_getNbWheelShapeMapping(physx_PxVehicleWheelsSimData_Pod* self__pod);
		[LinkName("PxVehicleWheelsSimData_getNbSceneQueryFilterData")] public static extern uint32 VehicleWheelsSimData_getNbSceneQueryFilterData(physx_PxVehicleWheelsSimData_Pod* self__pod);
		[LinkName("PxVehicleWheelsSimData_getMinLongSlipDenominator")] public static extern float VehicleWheelsSimData_getMinLongSlipDenominator(physx_PxVehicleWheelsSimData_Pod* self__pod);
		[LinkName("PxVehicleWheelsSimData_setThresholdLongSpeed_mut")] public static extern void VehicleWheelsSimData_setThresholdLongSpeed_mut(physx_PxVehicleWheelsSimData_Pod* self__pod, float f);
		[LinkName("PxVehicleWheelsSimData_getThresholdLongSpeed")] public static extern float VehicleWheelsSimData_getThresholdLongSpeed(physx_PxVehicleWheelsSimData_Pod* self__pod);
		[LinkName("PxVehicleWheelsSimData_setLowForwardSpeedSubStepCount_mut")] public static extern void VehicleWheelsSimData_setLowForwardSpeedSubStepCount_mut(physx_PxVehicleWheelsSimData_Pod* self__pod, uint32 f);
		[LinkName("PxVehicleWheelsSimData_getLowForwardSpeedSubStepCount")] public static extern uint32 VehicleWheelsSimData_getLowForwardSpeedSubStepCount(physx_PxVehicleWheelsSimData_Pod* self__pod);
		[LinkName("PxVehicleWheelsSimData_setHighForwardSpeedSubStepCount_mut")] public static extern void VehicleWheelsSimData_setHighForwardSpeedSubStepCount_mut(physx_PxVehicleWheelsSimData_Pod* self__pod, uint32 f);
		[LinkName("PxVehicleWheelsSimData_getHighForwardSpeedSubStepCount")] public static extern uint32 VehicleWheelsSimData_getHighForwardSpeedSubStepCount(physx_PxVehicleWheelsSimData_Pod* self__pod);
		[LinkName("PxVehicleWheelsSimData_setWheelEnabledState_mut")] public static extern void VehicleWheelsSimData_setWheelEnabledState_mut(physx_PxVehicleWheelsSimData_Pod* self__pod, uint32 wheel, bool state);
		[LinkName("PxVehicleWheelsSimData_getWheelEnabledState")] public static extern bool VehicleWheelsSimData_getWheelEnabledState(physx_PxVehicleWheelsSimData_Pod* self__pod, uint32 wheel);
		[LinkName("PxVehicleWheelsSimData_getNbWheelEnabledState")] public static extern uint32 VehicleWheelsSimData_getNbWheelEnabledState(physx_PxVehicleWheelsSimData_Pod* self__pod);
		[LinkName("PxVehicleWheelsSimData_getNbAntiRollBars4")] public static extern uint32 VehicleWheelsSimData_getNbAntiRollBars4(physx_PxVehicleWheelsSimData_Pod* self__pod);
		[LinkName("PxVehicleWheelsSimData_getNbAntiRollBarData")] public static extern uint32 VehicleWheelsSimData_getNbAntiRollBarData(physx_PxVehicleWheelsSimData_Pod* self__pod);
		[LinkName("PxVehicleWheelsSimData_setAntiRollBarData_mut")] public static extern void VehicleWheelsSimData_setAntiRollBarData_mut(physx_PxVehicleWheelsSimData_Pod* self__pod, uint32 id, physx_PxVehicleAntiRollBarData_Pod* antiRoll_pod);
		[LinkName("PxVehicleWheelsSimData_new_alloc_1")] public static extern physx_PxVehicleWheelsSimData_Pod* VehicleWheelsSimData_new_alloc_1();
		[LinkName("PxVehicleWheelsSimData_delete")] public static extern void VehicleWheelsSimData_delete(physx_PxVehicleWheelsSimData_Pod* self__pod);
		[LinkName("PxVehicleWheelsDynData_new_alloc")] public static extern physx_PxVehicleWheelsDynData_Pod* VehicleWheelsDynData_new_alloc();
		[LinkName("PxVehicleWheelsDynData_delete")] public static extern void VehicleWheelsDynData_delete(physx_PxVehicleWheelsDynData_Pod* self__pod);
		[LinkName("PxVehicleWheelsDynData_setToRestState_mut")] public static extern void VehicleWheelsDynData_setToRestState_mut(physx_PxVehicleWheelsDynData_Pod* self__pod);
		[LinkName("PxVehicleWheelsDynData_setTireForceShaderFunction_mut")] public static extern void VehicleWheelsDynData_setTireForceShaderFunction_mut(physx_PxVehicleWheelsDynData_Pod* self__pod, void* tireForceShaderFn_pod);
		[LinkName("PxVehicleWheelsDynData_setTireForceShaderData_mut")] public static extern void VehicleWheelsDynData_setTireForceShaderData_mut(physx_PxVehicleWheelsDynData_Pod* self__pod, uint32 tireId, void* tireForceShaderData);
		[LinkName("PxVehicleWheelsDynData_getTireForceShaderData")] public static extern void* VehicleWheelsDynData_getTireForceShaderData(physx_PxVehicleWheelsDynData_Pod* self__pod, uint32 tireId);
		[LinkName("PxVehicleWheelsDynData_setWheelRotationSpeed_mut")] public static extern void VehicleWheelsDynData_setWheelRotationSpeed_mut(physx_PxVehicleWheelsDynData_Pod* self__pod, uint32 wheelIdx, float speed);
		[LinkName("PxVehicleWheelsDynData_getWheelRotationSpeed")] public static extern float VehicleWheelsDynData_getWheelRotationSpeed(physx_PxVehicleWheelsDynData_Pod* self__pod, uint32 wheelIdx);
		[LinkName("PxVehicleWheelsDynData_setWheelRotationAngle_mut")] public static extern void VehicleWheelsDynData_setWheelRotationAngle_mut(physx_PxVehicleWheelsDynData_Pod* self__pod, uint32 wheelIdx, float angle);
		[LinkName("PxVehicleWheelsDynData_getWheelRotationAngle")] public static extern float VehicleWheelsDynData_getWheelRotationAngle(physx_PxVehicleWheelsDynData_Pod* self__pod, uint32 wheelIdx);
		[LinkName("PxVehicleWheelsDynData_setUserData_mut")] public static extern void VehicleWheelsDynData_setUserData_mut(physx_PxVehicleWheelsDynData_Pod* self__pod, uint32 tireIdx, void* userData);
		[LinkName("PxVehicleWheelsDynData_getUserData")] public static extern void* VehicleWheelsDynData_getUserData(physx_PxVehicleWheelsDynData_Pod* self__pod, uint32 tireIdx);
		[LinkName("PxVehicleWheelsDynData_copy_mut")] public static extern void VehicleWheelsDynData_copy_mut(physx_PxVehicleWheelsDynData_Pod* self__pod, physx_PxVehicleWheelsDynData_Pod* src_pod, uint32 srcWheel, uint32 trgWheel);
		[LinkName("PxVehicleWheelsDynData_getBinaryMetaData_mut")] public static extern void VehicleWheelsDynData_getBinaryMetaData_mut(physx_PxOutputStream_Pod* stream_pod);
		[LinkName("PxVehicleWheelsDynData_getNbWheelRotationSpeed")] public static extern uint32 VehicleWheelsDynData_getNbWheelRotationSpeed(physx_PxVehicleWheelsDynData_Pod* self__pod);
		[LinkName("PxVehicleWheelsDynData_getNbWheelRotationAngle")] public static extern uint32 VehicleWheelsDynData_getNbWheelRotationAngle(physx_PxVehicleWheelsDynData_Pod* self__pod);
		[LinkName("PxVehicleWheelsDynData_getWheel4DynData")] public static extern physx_PxVehicleWheels4DynData_Pod* VehicleWheelsDynData_getWheel4DynData(physx_PxVehicleWheelsDynData_Pod* self__pod);
		[LinkName("PxVehicleWheels_getVehicleType")] public static extern uint32 VehicleWheels_getVehicleType(physx_PxVehicleWheels_Pod* self__pod);
		[LinkName("PxVehicleWheels_getRigidDynamicActor_mut")] public static extern physx_PxRigidDynamic_Pod* VehicleWheels_getRigidDynamicActor_mut(physx_PxVehicleWheels_Pod* self__pod);
		[LinkName("PxVehicleWheels_getRigidDynamicActor")] public static extern physx_PxRigidDynamic_Pod* VehicleWheels_getRigidDynamicActor(physx_PxVehicleWheels_Pod* self__pod);
		[LinkName("PxVehicleWheels_computeForwardSpeed")] public static extern float VehicleWheels_computeForwardSpeed(physx_PxVehicleWheels_Pod* self__pod);
		[LinkName("PxVehicleWheels_computeSidewaysSpeed")] public static extern float VehicleWheels_computeSidewaysSpeed(physx_PxVehicleWheels_Pod* self__pod);
		[LinkName("PxVehicleWheels_requiresObjects_mut")] public static extern void VehicleWheels_requiresObjects_mut(physx_PxVehicleWheels_Pod* self__pod, physx_PxProcessPxBaseCallback_Pod* c_pod);
		[LinkName("PxVehicleWheels_getConcreteTypeName")] public static extern char8* VehicleWheels_getConcreteTypeName(physx_PxVehicleWheels_Pod* self__pod);
		[LinkName("PxVehicleWheels_isKindOf")] public static extern bool VehicleWheels_isKindOf(physx_PxVehicleWheels_Pod* self__pod, char8* name);
		[LinkName("PxVehicleWheels_preExportDataReset_mut")] public static extern void VehicleWheels_preExportDataReset_mut(physx_PxVehicleWheels_Pod* self__pod);
		[LinkName("PxVehicleWheels_exportExtraData_mut")] public static extern void VehicleWheels_exportExtraData_mut(physx_PxVehicleWheels_Pod* self__pod, physx_PxSerializationContext_Pod* anonymous_arg0_pod);
		[LinkName("PxVehicleWheels_importExtraData_mut")] public static extern void VehicleWheels_importExtraData_mut(physx_PxVehicleWheels_Pod* self__pod, physx_PxDeserializationContext_Pod* anonymous_arg0_pod);
		[LinkName("PxVehicleWheels_resolveReferences_mut")] public static extern void VehicleWheels_resolveReferences_mut(physx_PxVehicleWheels_Pod* self__pod, physx_PxDeserializationContext_Pod* anonymous_arg0_pod);
		[LinkName("PxVehicleWheels_getBinaryMetaData_mut")] public static extern void VehicleWheels_getBinaryMetaData_mut(physx_PxOutputStream_Pod* stream_pod);
		[LinkName("PxVehicleWheels_getNbNonDrivenWheels")] public static extern uint32 VehicleWheels_getNbNonDrivenWheels(physx_PxVehicleWheels_Pod* self__pod);
		[LinkName("PxVehicleWheels_new_alloc")] public static extern physx_PxVehicleWheels_Pod* VehicleWheels_new_alloc(uint16 concreteType, physx_PxBaseFlags_Pod baseFlags_pod);
		[LinkName("PxVehicleWheels_new_alloc_1")] public static extern physx_PxVehicleWheels_Pod* VehicleWheels_new_alloc_1(physx_PxBaseFlags_Pod baseFlags_pod);
		[LinkName("PxVehicleWheels_release_mut")] public static extern void VehicleWheels_release_mut(physx_PxVehicleWheels_Pod* self__pod);
		[LinkName("PxVehicleDriveSimData_getEngineData")] public static extern physx_PxVehicleEngineData_Pod* VehicleDriveSimData_getEngineData(physx_PxVehicleDriveSimData_Pod* self__pod);
		[LinkName("PxVehicleDriveSimData_setEngineData_mut")] public static extern void VehicleDriveSimData_setEngineData_mut(physx_PxVehicleDriveSimData_Pod* self__pod, physx_PxVehicleEngineData_Pod* engine_pod);
		[LinkName("PxVehicleDriveSimData_getGearsData")] public static extern physx_PxVehicleGearsData_Pod* VehicleDriveSimData_getGearsData(physx_PxVehicleDriveSimData_Pod* self__pod);
		[LinkName("PxVehicleDriveSimData_setGearsData_mut")] public static extern void VehicleDriveSimData_setGearsData_mut(physx_PxVehicleDriveSimData_Pod* self__pod, physx_PxVehicleGearsData_Pod* gears_pod);
		[LinkName("PxVehicleDriveSimData_getClutchData")] public static extern physx_PxVehicleClutchData_Pod* VehicleDriveSimData_getClutchData(physx_PxVehicleDriveSimData_Pod* self__pod);
		[LinkName("PxVehicleDriveSimData_setClutchData_mut")] public static extern void VehicleDriveSimData_setClutchData_mut(physx_PxVehicleDriveSimData_Pod* self__pod, physx_PxVehicleClutchData_Pod* clutch_pod);
		[LinkName("PxVehicleDriveSimData_getAutoBoxData")] public static extern physx_PxVehicleAutoBoxData_Pod* VehicleDriveSimData_getAutoBoxData(physx_PxVehicleDriveSimData_Pod* self__pod);
		[LinkName("PxVehicleDriveSimData_setAutoBoxData_mut")] public static extern void VehicleDriveSimData_setAutoBoxData_mut(physx_PxVehicleDriveSimData_Pod* self__pod, physx_PxVehicleAutoBoxData_Pod* autobox_pod);
		[LinkName("PxVehicleDriveSimData_new")] public static extern physx_PxVehicleDriveSimData_Pod VehicleDriveSimData_new();
		[LinkName("PxVehicleDriveSimData_new_1")] public static extern physx_PxVehicleDriveSimData_Pod VehicleDriveSimData_new_1(uint32 anonymous_arg0_pod);
		[LinkName("PxVehicleDriveSimData_getBinaryMetaData_mut")] public static extern void VehicleDriveSimData_getBinaryMetaData_mut(physx_PxOutputStream_Pod* stream_pod);
		[LinkName("PxVehicleDriveSimData_delete")] public static extern void VehicleDriveSimData_delete(physx_PxVehicleDriveSimData_Pod* self__pod);
		[LinkName("PxVehicleDriveDynData_setToRestState_mut")] public static extern void VehicleDriveDynData_setToRestState_mut(physx_PxVehicleDriveDynData_Pod* self__pod);
		[LinkName("PxVehicleDriveDynData_setAnalogInput_mut")] public static extern void VehicleDriveDynData_setAnalogInput_mut(physx_PxVehicleDriveDynData_Pod* self__pod, uint32 type, float analogVal);
		[LinkName("PxVehicleDriveDynData_getAnalogInput")] public static extern float VehicleDriveDynData_getAnalogInput(physx_PxVehicleDriveDynData_Pod* self__pod, uint32 type);
		[LinkName("PxVehicleDriveDynData_setGearUp_mut")] public static extern void VehicleDriveDynData_setGearUp_mut(physx_PxVehicleDriveDynData_Pod* self__pod, bool digitalVal);
		[LinkName("PxVehicleDriveDynData_setGearDown_mut")] public static extern void VehicleDriveDynData_setGearDown_mut(physx_PxVehicleDriveDynData_Pod* self__pod, bool digitalVal);
		[LinkName("PxVehicleDriveDynData_getGearUp")] public static extern bool VehicleDriveDynData_getGearUp(physx_PxVehicleDriveDynData_Pod* self__pod);
		[LinkName("PxVehicleDriveDynData_getGearDown")] public static extern bool VehicleDriveDynData_getGearDown(physx_PxVehicleDriveDynData_Pod* self__pod);
		[LinkName("PxVehicleDriveDynData_setUseAutoGears_mut")] public static extern void VehicleDriveDynData_setUseAutoGears_mut(physx_PxVehicleDriveDynData_Pod* self__pod, bool useAutoGears);
		[LinkName("PxVehicleDriveDynData_getUseAutoGears")] public static extern bool VehicleDriveDynData_getUseAutoGears(physx_PxVehicleDriveDynData_Pod* self__pod);
		[LinkName("PxVehicleDriveDynData_toggleAutoGears_mut")] public static extern void VehicleDriveDynData_toggleAutoGears_mut(physx_PxVehicleDriveDynData_Pod* self__pod);
		[LinkName("PxVehicleDriveDynData_setCurrentGear_mut")] public static extern void VehicleDriveDynData_setCurrentGear_mut(physx_PxVehicleDriveDynData_Pod* self__pod, uint32 currentGear);
		[LinkName("PxVehicleDriveDynData_getCurrentGear")] public static extern uint32 VehicleDriveDynData_getCurrentGear(physx_PxVehicleDriveDynData_Pod* self__pod);
		[LinkName("PxVehicleDriveDynData_setTargetGear_mut")] public static extern void VehicleDriveDynData_setTargetGear_mut(physx_PxVehicleDriveDynData_Pod* self__pod, uint32 targetGear);
		[LinkName("PxVehicleDriveDynData_getTargetGear")] public static extern uint32 VehicleDriveDynData_getTargetGear(physx_PxVehicleDriveDynData_Pod* self__pod);
		[LinkName("PxVehicleDriveDynData_startGearChange_mut")] public static extern void VehicleDriveDynData_startGearChange_mut(physx_PxVehicleDriveDynData_Pod* self__pod, uint32 targetGear);
		[LinkName("PxVehicleDriveDynData_forceGearChange_mut")] public static extern void VehicleDriveDynData_forceGearChange_mut(physx_PxVehicleDriveDynData_Pod* self__pod, uint32 targetGear);
		[LinkName("PxVehicleDriveDynData_setEngineRotationSpeed_mut")] public static extern void VehicleDriveDynData_setEngineRotationSpeed_mut(physx_PxVehicleDriveDynData_Pod* self__pod, float speed);
		[LinkName("PxVehicleDriveDynData_getEngineRotationSpeed")] public static extern float VehicleDriveDynData_getEngineRotationSpeed(physx_PxVehicleDriveDynData_Pod* self__pod);
		[LinkName("PxVehicleDriveDynData_getGearSwitchTime")] public static extern float VehicleDriveDynData_getGearSwitchTime(physx_PxVehicleDriveDynData_Pod* self__pod);
		[LinkName("PxVehicleDriveDynData_getAutoBoxSwitchTime")] public static extern float VehicleDriveDynData_getAutoBoxSwitchTime(physx_PxVehicleDriveDynData_Pod* self__pod);
		[LinkName("PxVehicleDriveDynData_new")] public static extern physx_PxVehicleDriveDynData_Pod VehicleDriveDynData_new();
		[LinkName("PxVehicleDriveDynData_new_1")] public static extern physx_PxVehicleDriveDynData_Pod VehicleDriveDynData_new_1(uint32 anonymous_arg0_pod);
		[LinkName("PxVehicleDriveDynData_getNbAnalogInput")] public static extern uint32 VehicleDriveDynData_getNbAnalogInput(physx_PxVehicleDriveDynData_Pod* self__pod);
		[LinkName("PxVehicleDriveDynData_setGearChange_mut")] public static extern void VehicleDriveDynData_setGearChange_mut(physx_PxVehicleDriveDynData_Pod* self__pod, uint32 gearChange);
		[LinkName("PxVehicleDriveDynData_getGearChange")] public static extern uint32 VehicleDriveDynData_getGearChange(physx_PxVehicleDriveDynData_Pod* self__pod);
		[LinkName("PxVehicleDriveDynData_setGearSwitchTime_mut")] public static extern void VehicleDriveDynData_setGearSwitchTime_mut(physx_PxVehicleDriveDynData_Pod* self__pod, float switchTime);
		[LinkName("PxVehicleDriveDynData_setAutoBoxSwitchTime_mut")] public static extern void VehicleDriveDynData_setAutoBoxSwitchTime_mut(physx_PxVehicleDriveDynData_Pod* self__pod, float autoBoxSwitchTime);
		[LinkName("PxVehicleDrive_getBinaryMetaData_mut")] public static extern void VehicleDrive_getBinaryMetaData_mut(physx_PxOutputStream_Pod* stream_pod);
		[LinkName("PxVehicleDrive_new_alloc")] public static extern physx_PxVehicleDrive_Pod* VehicleDrive_new_alloc(physx_PxBaseFlags_Pod baseFlags_pod);
		[LinkName("PxVehicleDrive_getConcreteTypeName")] public static extern char8* VehicleDrive_getConcreteTypeName(physx_PxVehicleDrive_Pod* self__pod);
		[LinkName("PxVehicleDriveSimData4W_new")] public static extern physx_PxVehicleDriveSimData4W_Pod VehicleDriveSimData4W_new();
		[LinkName("PxVehicleDriveSimData4W_getDiffData")] public static extern physx_PxVehicleDifferential4WData_Pod* VehicleDriveSimData4W_getDiffData(physx_PxVehicleDriveSimData4W_Pod* self__pod);
		[LinkName("PxVehicleDriveSimData4W_getAckermannGeometryData")] public static extern physx_PxVehicleAckermannGeometryData_Pod* VehicleDriveSimData4W_getAckermannGeometryData(physx_PxVehicleDriveSimData4W_Pod* self__pod);
		[LinkName("PxVehicleDriveSimData4W_setDiffData_mut")] public static extern void VehicleDriveSimData4W_setDiffData_mut(physx_PxVehicleDriveSimData4W_Pod* self__pod, physx_PxVehicleDifferential4WData_Pod* diff_pod);
		[LinkName("PxVehicleDriveSimData4W_setAckermannGeometryData_mut")] public static extern void VehicleDriveSimData4W_setAckermannGeometryData_mut(physx_PxVehicleDriveSimData4W_Pod* self__pod, physx_PxVehicleAckermannGeometryData_Pod* ackermannData_pod);
		[LinkName("PxVehicleDriveSimData4W_new_1")] public static extern physx_PxVehicleDriveSimData4W_Pod VehicleDriveSimData4W_new_1(uint32 anonymous_arg0_pod);
		[LinkName("PxVehicleDriveSimData4W_getBinaryMetaData_mut")] public static extern void VehicleDriveSimData4W_getBinaryMetaData_mut(physx_PxOutputStream_Pod* stream_pod);
		[LinkName("PxVehicleDriveSimData4W_delete")] public static extern void VehicleDriveSimData4W_delete(physx_PxVehicleDriveSimData4W_Pod* self__pod);
		[LinkName("PxVehicleDrive4W_allocate_mut")] public static extern physx_PxVehicleDrive4W_Pod* VehicleDrive4W_allocate_mut(uint32 nbWheels);
		[LinkName("PxVehicleDrive4W_free_mut")] public static extern void VehicleDrive4W_free_mut(physx_PxVehicleDrive4W_Pod* self__pod);
		[LinkName("PxVehicleDrive4W_setup_mut")] public static extern void VehicleDrive4W_setup_mut(physx_PxVehicleDrive4W_Pod* self__pod, physx_PxPhysics_Pod* physics_pod, physx_PxRigidDynamic_Pod* vehActor_pod, physx_PxVehicleWheelsSimData_Pod* wheelsData_pod, physx_PxVehicleDriveSimData4W_Pod* driveData_pod, uint32 nbNonDrivenWheels);
		[LinkName("PxVehicleDrive4W_create_mut")] public static extern physx_PxVehicleDrive4W_Pod* VehicleDrive4W_create_mut(physx_PxPhysics_Pod* physics_pod, physx_PxRigidDynamic_Pod* vehActor_pod, physx_PxVehicleWheelsSimData_Pod* wheelsData_pod, physx_PxVehicleDriveSimData4W_Pod* driveData_pod, uint32 nbNonDrivenWheels);
		[LinkName("PxVehicleDrive4W_setToRestState_mut")] public static extern void VehicleDrive4W_setToRestState_mut(physx_PxVehicleDrive4W_Pod* self__pod);
		[LinkName("PxVehicleDrive4W_createObject_mut")] public static extern physx_PxVehicleDrive4W_Pod* VehicleDrive4W_createObject_mut(uint8** address_pod, physx_PxDeserializationContext_Pod* context_pod);
		[LinkName("PxVehicleDrive4W_getBinaryMetaData_mut")] public static extern void VehicleDrive4W_getBinaryMetaData_mut(physx_PxOutputStream_Pod* stream_pod);
		[LinkName("PxVehicleDrive4W_new_alloc")] public static extern physx_PxVehicleDrive4W_Pod* VehicleDrive4W_new_alloc(physx_PxBaseFlags_Pod baseFlags_pod);
		[LinkName("PxVehicleDrive4W_getConcreteTypeName")] public static extern char8* VehicleDrive4W_getConcreteTypeName(physx_PxVehicleDrive4W_Pod* self__pod);
		[LinkName("PxVehicleDriveTank_allocate_mut")] public static extern physx_PxVehicleDriveTank_Pod* VehicleDriveTank_allocate_mut(uint32 nbWheels);
		[LinkName("PxVehicleDriveTank_free_mut")] public static extern void VehicleDriveTank_free_mut(physx_PxVehicleDriveTank_Pod* self__pod);
		[LinkName("PxVehicleDriveTank_setup_mut")] public static extern void VehicleDriveTank_setup_mut(physx_PxVehicleDriveTank_Pod* self__pod, physx_PxPhysics_Pod* physics_pod, physx_PxRigidDynamic_Pod* vehActor_pod, physx_PxVehicleWheelsSimData_Pod* wheelsData_pod, physx_PxVehicleDriveSimData_Pod* driveData_pod, uint32 nbDrivenWheels);
		[LinkName("PxVehicleDriveTank_create_mut")] public static extern physx_PxVehicleDriveTank_Pod* VehicleDriveTank_create_mut(physx_PxPhysics_Pod* physics_pod, physx_PxRigidDynamic_Pod* vehActor_pod, physx_PxVehicleWheelsSimData_Pod* wheelsData_pod, physx_PxVehicleDriveSimData_Pod* driveData_pod, uint32 nbDrivenWheels);
		[LinkName("PxVehicleDriveTank_setDriveModel_mut")] public static extern void VehicleDriveTank_setDriveModel_mut(physx_PxVehicleDriveTank_Pod* self__pod, uint32 driveModel_pod);
		[LinkName("PxVehicleDriveTank_getDriveModel")] public static extern uint32 VehicleDriveTank_getDriveModel(physx_PxVehicleDriveTank_Pod* self__pod);
		[LinkName("PxVehicleDriveTank_setToRestState_mut")] public static extern void VehicleDriveTank_setToRestState_mut(physx_PxVehicleDriveTank_Pod* self__pod);
		[LinkName("PxVehicleDriveTank_new_alloc")] public static extern physx_PxVehicleDriveTank_Pod* VehicleDriveTank_new_alloc(physx_PxBaseFlags_Pod baseFlags_pod);
		[LinkName("PxVehicleDriveTank_createObject_mut")] public static extern physx_PxVehicleDriveTank_Pod* VehicleDriveTank_createObject_mut(uint8** address_pod, physx_PxDeserializationContext_Pod* context_pod);
		[LinkName("PxVehicleDriveTank_getBinaryMetaData_mut")] public static extern void VehicleDriveTank_getBinaryMetaData_mut(physx_PxOutputStream_Pod* stream_pod);
		[LinkName("PxVehicleDriveTank_getConcreteTypeName")] public static extern char8* VehicleDriveTank_getConcreteTypeName(physx_PxVehicleDriveTank_Pod* self__pod);
		[LinkName("PxVehicleDriveTank_isKindOf")] public static extern bool VehicleDriveTank_isKindOf(physx_PxVehicleDriveTank_Pod* self__pod, char8* name);
		[LinkName("PxVehicleDrivableSurfaceToTireFrictionPairs_allocate_mut")] public static extern physx_PxVehicleDrivableSurfaceToTireFrictionPairs_Pod* VehicleDrivableSurfaceToTireFrictionPairs_allocate_mut(uint32 maxNbTireTypes, uint32 maxNbSurfaceTypes);
		[LinkName("PxVehicleDrivableSurfaceToTireFrictionPairs_setup_mut")] public static extern void VehicleDrivableSurfaceToTireFrictionPairs_setup_mut(physx_PxVehicleDrivableSurfaceToTireFrictionPairs_Pod* self__pod, uint32 nbTireTypes, uint32 nbSurfaceTypes, physx_PxMaterial_Pod** drivableSurfaceMaterials_pod, physx_PxVehicleDrivableSurfaceType_Pod* drivableSurfaceTypes_pod);
		[LinkName("PxVehicleDrivableSurfaceToTireFrictionPairs_release_mut")] public static extern void VehicleDrivableSurfaceToTireFrictionPairs_release_mut(physx_PxVehicleDrivableSurfaceToTireFrictionPairs_Pod* self__pod);
		[LinkName("PxVehicleDrivableSurfaceToTireFrictionPairs_setTypePairFriction_mut")] public static extern void VehicleDrivableSurfaceToTireFrictionPairs_setTypePairFriction_mut(physx_PxVehicleDrivableSurfaceToTireFrictionPairs_Pod* self__pod, uint32 surfaceType, uint32 tireType, float value);
		[LinkName("PxVehicleDrivableSurfaceToTireFrictionPairs_getTypePairFriction")] public static extern float VehicleDrivableSurfaceToTireFrictionPairs_getTypePairFriction(physx_PxVehicleDrivableSurfaceToTireFrictionPairs_Pod* self__pod, uint32 surfaceType, uint32 tireType);
		[LinkName("PxVehicleDrivableSurfaceToTireFrictionPairs_getMaxNbSurfaceTypes")] public static extern uint32 VehicleDrivableSurfaceToTireFrictionPairs_getMaxNbSurfaceTypes(physx_PxVehicleDrivableSurfaceToTireFrictionPairs_Pod* self__pod);
		[LinkName("PxVehicleDrivableSurfaceToTireFrictionPairs_getMaxNbTireTypes")] public static extern uint32 VehicleDrivableSurfaceToTireFrictionPairs_getMaxNbTireTypes(physx_PxVehicleDrivableSurfaceToTireFrictionPairs_Pod* self__pod);
		[LinkName("PxWheelQueryResult_new")] public static extern physx_PxWheelQueryResult_Pod WheelQueryResult_new();
		[LinkName("PxVehicleWheelConcurrentUpdateData_new")] public static extern physx_PxVehicleWheelConcurrentUpdateData_Pod VehicleWheelConcurrentUpdateData_new();
		[LinkName("PxVehicleConcurrentUpdateData_new")] public static extern physx_PxVehicleConcurrentUpdateData_Pod VehicleConcurrentUpdateData_new();
		[LinkName("phys_PxVehicleSuspensionRaycasts")] public static extern void VehicleSuspensionRaycasts(physx_PxBatchQuery_Pod* batchQuery_pod, uint32 nbVehicles, physx_PxVehicleWheels_Pod** vehicles_pod, uint32 nbSceneQueryResults, physx_PxRaycastQueryResult_Pod* sceneQueryResults_pod, bool* vehiclesToRaycast);
		[LinkName("phys_PxVehicleSuspensionSweeps")] public static extern void VehicleSuspensionSweeps(physx_PxBatchQuery_Pod* batchQuery_pod, uint32 nbVehicles, physx_PxVehicleWheels_Pod** vehicles_pod, uint32 nbSceneQueryResults, physx_PxSweepQueryResult_Pod* sceneQueryResults_pod, uint16 nbHitsPerQuery, bool* vehiclesToSweep, float sweepWidthScale, float sweepRadiusScale);
		[LinkName("phys_PxVehicleModifyWheelContacts")] public static extern uint32 VehicleModifyWheelContacts(physx_PxVehicleWheels_Pod* vehicle_pod, uint32 wheelId, float wheelTangentVelocityMultiplier, float maxImpulse, physx_PxContactModifyPair_Pod* contactModifyPair_pod);
		[LinkName("phys_PxVehicleUpdates")] public static extern void VehicleUpdates(float timestep, physx_PxVec3_Pod* gravity_pod, physx_PxVehicleDrivableSurfaceToTireFrictionPairs_Pod* vehicleDrivableSurfaceToTireFrictionPairs_pod, uint32 nbVehicles, physx_PxVehicleWheels_Pod** vehicles_pod, physx_PxVehicleWheelQueryResult_Pod* vehicleWheelQueryResults_pod, physx_PxVehicleConcurrentUpdateData_Pod* vehicleConcurrentUpdates_pod);
		[LinkName("phys_PxVehiclePostUpdates")] public static extern void VehiclePostUpdates(physx_PxVehicleConcurrentUpdateData_Pod* vehicleConcurrentUpdates_pod, uint32 nbVehicles, physx_PxVehicleWheels_Pod** vehicles_pod);
		[LinkName("phys_PxVehicleShiftOrigin")] public static extern void VehicleShiftOrigin(physx_PxVec3_Pod* shift_pod, uint32 nbVehicles, physx_PxVehicleWheels_Pod** vehicles_pod);
		[LinkName("phys_PxVehicleUpdateSingleVehicleAndStoreTelemetryData")] public static extern void VehicleUpdateSingleVehicleAndStoreTelemetryData(float timestep, physx_PxVec3_Pod* gravity_pod, physx_PxVehicleDrivableSurfaceToTireFrictionPairs_Pod* vehicleDrivableSurfaceToTireFrictionPairs_pod, physx_PxVehicleWheels_Pod* focusVehicle_pod, physx_PxVehicleWheelQueryResult_Pod* vehicleWheelQueryResults_pod, physx_PxVehicleTelemetryData_Pod* telemetryData_pod);
		[LinkName("PxVehicleDriveSimDataNW_new")] public static extern physx_PxVehicleDriveSimDataNW_Pod VehicleDriveSimDataNW_new();
		[LinkName("PxVehicleDriveSimDataNW_getDiffData")] public static extern physx_PxVehicleDifferentialNWData_Pod* VehicleDriveSimDataNW_getDiffData(physx_PxVehicleDriveSimDataNW_Pod* self__pod);
		[LinkName("PxVehicleDriveSimDataNW_setDiffData_mut")] public static extern void VehicleDriveSimDataNW_setDiffData_mut(physx_PxVehicleDriveSimDataNW_Pod* self__pod, physx_PxVehicleDifferentialNWData_Pod* diff_pod);
		[LinkName("PxVehicleDriveSimDataNW_new_1")] public static extern physx_PxVehicleDriveSimDataNW_Pod VehicleDriveSimDataNW_new_1(uint32 anonymous_arg0_pod);
		[LinkName("PxVehicleDriveSimDataNW_getBinaryMetaData_mut")] public static extern void VehicleDriveSimDataNW_getBinaryMetaData_mut(physx_PxOutputStream_Pod* stream_pod);
		[LinkName("PxVehicleDriveSimDataNW_delete")] public static extern void VehicleDriveSimDataNW_delete(physx_PxVehicleDriveSimDataNW_Pod* self__pod);
		[LinkName("PxVehicleDriveNW_allocate_mut")] public static extern physx_PxVehicleDriveNW_Pod* VehicleDriveNW_allocate_mut(uint32 nbWheels);
		[LinkName("PxVehicleDriveNW_free_mut")] public static extern void VehicleDriveNW_free_mut(physx_PxVehicleDriveNW_Pod* self__pod);
		[LinkName("PxVehicleDriveNW_setup_mut")] public static extern void VehicleDriveNW_setup_mut(physx_PxVehicleDriveNW_Pod* self__pod, physx_PxPhysics_Pod* physics_pod, physx_PxRigidDynamic_Pod* vehActor_pod, physx_PxVehicleWheelsSimData_Pod* wheelsData_pod, physx_PxVehicleDriveSimDataNW_Pod* driveData_pod, uint32 nbWheels);
		[LinkName("PxVehicleDriveNW_create_mut")] public static extern physx_PxVehicleDriveNW_Pod* VehicleDriveNW_create_mut(physx_PxPhysics_Pod* physics_pod, physx_PxRigidDynamic_Pod* vehActor_pod, physx_PxVehicleWheelsSimData_Pod* wheelsData_pod, physx_PxVehicleDriveSimDataNW_Pod* driveData_pod, uint32 nbWheels);
		[LinkName("PxVehicleDriveNW_setToRestState_mut")] public static extern void VehicleDriveNW_setToRestState_mut(physx_PxVehicleDriveNW_Pod* self__pod);
		[LinkName("PxVehicleDriveNW_new_alloc")] public static extern physx_PxVehicleDriveNW_Pod* VehicleDriveNW_new_alloc(physx_PxBaseFlags_Pod baseFlags_pod);
		[LinkName("PxVehicleDriveNW_new_alloc_1")] public static extern physx_PxVehicleDriveNW_Pod* VehicleDriveNW_new_alloc_1();
		[LinkName("PxVehicleDriveNW_createObject_mut")] public static extern physx_PxVehicleDriveNW_Pod* VehicleDriveNW_createObject_mut(uint8** address_pod, physx_PxDeserializationContext_Pod* context_pod);
		[LinkName("PxVehicleDriveNW_getBinaryMetaData_mut")] public static extern void VehicleDriveNW_getBinaryMetaData_mut(physx_PxOutputStream_Pod* stream_pod);
		[LinkName("PxVehicleDriveNW_getConcreteTypeName")] public static extern char8* VehicleDriveNW_getConcreteTypeName(physx_PxVehicleDriveNW_Pod* self__pod);
		[LinkName("PxVehicleDriveNW_isKindOf")] public static extern bool VehicleDriveNW_isKindOf(physx_PxVehicleDriveNW_Pod* self__pod, char8* name);
		[LinkName("PxVehicleDrive4WRawInputData_new_alloc")] public static extern physx_PxVehicleDrive4WRawInputData_Pod* VehicleDrive4WRawInputData_new_alloc();
		[LinkName("PxVehicleDrive4WRawInputData_delete")] public static extern void VehicleDrive4WRawInputData_delete(physx_PxVehicleDrive4WRawInputData_Pod* self__pod);
		[LinkName("PxVehicleDrive4WRawInputData_setDigitalAccel_mut")] public static extern void VehicleDrive4WRawInputData_setDigitalAccel_mut(physx_PxVehicleDrive4WRawInputData_Pod* self__pod, bool accelKeyPressed);
		[LinkName("PxVehicleDrive4WRawInputData_setDigitalBrake_mut")] public static extern void VehicleDrive4WRawInputData_setDigitalBrake_mut(physx_PxVehicleDrive4WRawInputData_Pod* self__pod, bool brakeKeyPressed);
		[LinkName("PxVehicleDrive4WRawInputData_setDigitalHandbrake_mut")] public static extern void VehicleDrive4WRawInputData_setDigitalHandbrake_mut(physx_PxVehicleDrive4WRawInputData_Pod* self__pod, bool handbrakeKeyPressed);
		[LinkName("PxVehicleDrive4WRawInputData_setDigitalSteerLeft_mut")] public static extern void VehicleDrive4WRawInputData_setDigitalSteerLeft_mut(physx_PxVehicleDrive4WRawInputData_Pod* self__pod, bool steerLeftKeyPressed);
		[LinkName("PxVehicleDrive4WRawInputData_setDigitalSteerRight_mut")] public static extern void VehicleDrive4WRawInputData_setDigitalSteerRight_mut(physx_PxVehicleDrive4WRawInputData_Pod* self__pod, bool steerRightKeyPressed);
		[LinkName("PxVehicleDrive4WRawInputData_getDigitalAccel")] public static extern bool VehicleDrive4WRawInputData_getDigitalAccel(physx_PxVehicleDrive4WRawInputData_Pod* self__pod);
		[LinkName("PxVehicleDrive4WRawInputData_getDigitalBrake")] public static extern bool VehicleDrive4WRawInputData_getDigitalBrake(physx_PxVehicleDrive4WRawInputData_Pod* self__pod);
		[LinkName("PxVehicleDrive4WRawInputData_getDigitalHandbrake")] public static extern bool VehicleDrive4WRawInputData_getDigitalHandbrake(physx_PxVehicleDrive4WRawInputData_Pod* self__pod);
		[LinkName("PxVehicleDrive4WRawInputData_getDigitalSteerLeft")] public static extern bool VehicleDrive4WRawInputData_getDigitalSteerLeft(physx_PxVehicleDrive4WRawInputData_Pod* self__pod);
		[LinkName("PxVehicleDrive4WRawInputData_getDigitalSteerRight")] public static extern bool VehicleDrive4WRawInputData_getDigitalSteerRight(physx_PxVehicleDrive4WRawInputData_Pod* self__pod);
		[LinkName("PxVehicleDrive4WRawInputData_setAnalogAccel_mut")] public static extern void VehicleDrive4WRawInputData_setAnalogAccel_mut(physx_PxVehicleDrive4WRawInputData_Pod* self__pod, float accel);
		[LinkName("PxVehicleDrive4WRawInputData_setAnalogBrake_mut")] public static extern void VehicleDrive4WRawInputData_setAnalogBrake_mut(physx_PxVehicleDrive4WRawInputData_Pod* self__pod, float brake);
		[LinkName("PxVehicleDrive4WRawInputData_setAnalogHandbrake_mut")] public static extern void VehicleDrive4WRawInputData_setAnalogHandbrake_mut(physx_PxVehicleDrive4WRawInputData_Pod* self__pod, float handbrake);
		[LinkName("PxVehicleDrive4WRawInputData_setAnalogSteer_mut")] public static extern void VehicleDrive4WRawInputData_setAnalogSteer_mut(physx_PxVehicleDrive4WRawInputData_Pod* self__pod, float steer);
		[LinkName("PxVehicleDrive4WRawInputData_getAnalogAccel")] public static extern float VehicleDrive4WRawInputData_getAnalogAccel(physx_PxVehicleDrive4WRawInputData_Pod* self__pod);
		[LinkName("PxVehicleDrive4WRawInputData_getAnalogBrake")] public static extern float VehicleDrive4WRawInputData_getAnalogBrake(physx_PxVehicleDrive4WRawInputData_Pod* self__pod);
		[LinkName("PxVehicleDrive4WRawInputData_getAnalogHandbrake")] public static extern float VehicleDrive4WRawInputData_getAnalogHandbrake(physx_PxVehicleDrive4WRawInputData_Pod* self__pod);
		[LinkName("PxVehicleDrive4WRawInputData_getAnalogSteer")] public static extern float VehicleDrive4WRawInputData_getAnalogSteer(physx_PxVehicleDrive4WRawInputData_Pod* self__pod);
		[LinkName("PxVehicleDrive4WRawInputData_setGearUp_mut")] public static extern void VehicleDrive4WRawInputData_setGearUp_mut(physx_PxVehicleDrive4WRawInputData_Pod* self__pod, bool gearUpKeyPressed);
		[LinkName("PxVehicleDrive4WRawInputData_setGearDown_mut")] public static extern void VehicleDrive4WRawInputData_setGearDown_mut(physx_PxVehicleDrive4WRawInputData_Pod* self__pod, bool gearDownKeyPressed);
		[LinkName("PxVehicleDrive4WRawInputData_getGearUp")] public static extern bool VehicleDrive4WRawInputData_getGearUp(physx_PxVehicleDrive4WRawInputData_Pod* self__pod);
		[LinkName("PxVehicleDrive4WRawInputData_getGearDown")] public static extern bool VehicleDrive4WRawInputData_getGearDown(physx_PxVehicleDrive4WRawInputData_Pod* self__pod);
		[LinkName("phys_PxVehicleDrive4WSmoothDigitalRawInputsAndSetAnalogInputs")] public static extern void VehicleDrive4WSmoothDigitalRawInputsAndSetAnalogInputs(physx_PxVehicleKeySmoothingData_Pod* keySmoothing_pod, PxFixedSizeLookupTable_8__Pod* steerVsForwardSpeedTable_pod, physx_PxVehicleDrive4WRawInputData_Pod* rawInputData_pod, float timestep, bool isVehicleInAir, physx_PxVehicleDrive4W_Pod* focusVehicle_pod);
		[LinkName("phys_PxVehicleDrive4WSmoothAnalogRawInputsAndSetAnalogInputs")] public static extern void VehicleDrive4WSmoothAnalogRawInputsAndSetAnalogInputs(physx_PxVehiclePadSmoothingData_Pod* padSmoothing_pod, PxFixedSizeLookupTable_8__Pod* steerVsForwardSpeedTable_pod, physx_PxVehicleDrive4WRawInputData_Pod* rawInputData_pod, float timestep, bool isVehicleInAir, physx_PxVehicleDrive4W_Pod* focusVehicle_pod);
		[LinkName("PxVehicleDriveNWRawInputData_new_alloc")] public static extern physx_PxVehicleDriveNWRawInputData_Pod* VehicleDriveNWRawInputData_new_alloc();
		[LinkName("PxVehicleDriveNWRawInputData_delete")] public static extern void VehicleDriveNWRawInputData_delete(physx_PxVehicleDriveNWRawInputData_Pod* self__pod);
		[LinkName("phys_PxVehicleDriveNWSmoothDigitalRawInputsAndSetAnalogInputs")] public static extern void VehicleDriveNWSmoothDigitalRawInputsAndSetAnalogInputs(physx_PxVehicleKeySmoothingData_Pod* keySmoothing_pod, PxFixedSizeLookupTable_8__Pod* steerVsForwardSpeedTable_pod, physx_PxVehicleDriveNWRawInputData_Pod* rawInputData_pod, float timestep, bool isVehicleInAir, physx_PxVehicleDriveNW_Pod* focusVehicle_pod);
		[LinkName("phys_PxVehicleDriveNWSmoothAnalogRawInputsAndSetAnalogInputs")] public static extern void VehicleDriveNWSmoothAnalogRawInputsAndSetAnalogInputs(physx_PxVehiclePadSmoothingData_Pod* padSmoothing_pod, PxFixedSizeLookupTable_8__Pod* steerVsForwardSpeedTable_pod, physx_PxVehicleDriveNWRawInputData_Pod* rawInputData_pod, float timestep, bool isVehicleInAir, physx_PxVehicleDriveNW_Pod* focusVehicle_pod);
		[LinkName("PxVehicleDriveTankRawInputData_new_alloc")] public static extern physx_PxVehicleDriveTankRawInputData_Pod* VehicleDriveTankRawInputData_new_alloc(uint32 mode_pod);
		[LinkName("PxVehicleDriveTankRawInputData_delete")] public static extern void VehicleDriveTankRawInputData_delete(physx_PxVehicleDriveTankRawInputData_Pod* self__pod);
		[LinkName("PxVehicleDriveTankRawInputData_getDriveModel")] public static extern uint32 VehicleDriveTankRawInputData_getDriveModel(physx_PxVehicleDriveTankRawInputData_Pod* self__pod);
		[LinkName("PxVehicleDriveTankRawInputData_setDigitalAccel_mut")] public static extern void VehicleDriveTankRawInputData_setDigitalAccel_mut(physx_PxVehicleDriveTankRawInputData_Pod* self__pod, bool b);
		[LinkName("PxVehicleDriveTankRawInputData_setDigitalLeftThrust_mut")] public static extern void VehicleDriveTankRawInputData_setDigitalLeftThrust_mut(physx_PxVehicleDriveTankRawInputData_Pod* self__pod, bool b);
		[LinkName("PxVehicleDriveTankRawInputData_setDigitalRightThrust_mut")] public static extern void VehicleDriveTankRawInputData_setDigitalRightThrust_mut(physx_PxVehicleDriveTankRawInputData_Pod* self__pod, bool b);
		[LinkName("PxVehicleDriveTankRawInputData_setDigitalLeftBrake_mut")] public static extern void VehicleDriveTankRawInputData_setDigitalLeftBrake_mut(physx_PxVehicleDriveTankRawInputData_Pod* self__pod, bool b);
		[LinkName("PxVehicleDriveTankRawInputData_setDigitalRightBrake_mut")] public static extern void VehicleDriveTankRawInputData_setDigitalRightBrake_mut(physx_PxVehicleDriveTankRawInputData_Pod* self__pod, bool b);
		[LinkName("PxVehicleDriveTankRawInputData_getDigitalAccel")] public static extern bool VehicleDriveTankRawInputData_getDigitalAccel(physx_PxVehicleDriveTankRawInputData_Pod* self__pod);
		[LinkName("PxVehicleDriveTankRawInputData_getDigitalLeftThrust")] public static extern bool VehicleDriveTankRawInputData_getDigitalLeftThrust(physx_PxVehicleDriveTankRawInputData_Pod* self__pod);
		[LinkName("PxVehicleDriveTankRawInputData_getDigitalRightThrust")] public static extern bool VehicleDriveTankRawInputData_getDigitalRightThrust(physx_PxVehicleDriveTankRawInputData_Pod* self__pod);
		[LinkName("PxVehicleDriveTankRawInputData_getDigitalLeftBrake")] public static extern bool VehicleDriveTankRawInputData_getDigitalLeftBrake(physx_PxVehicleDriveTankRawInputData_Pod* self__pod);
		[LinkName("PxVehicleDriveTankRawInputData_getDigitalRightBrake")] public static extern bool VehicleDriveTankRawInputData_getDigitalRightBrake(physx_PxVehicleDriveTankRawInputData_Pod* self__pod);
		[LinkName("PxVehicleDriveTankRawInputData_setAnalogAccel_mut")] public static extern void VehicleDriveTankRawInputData_setAnalogAccel_mut(physx_PxVehicleDriveTankRawInputData_Pod* self__pod, float accel);
		[LinkName("PxVehicleDriveTankRawInputData_setAnalogLeftThrust_mut")] public static extern void VehicleDriveTankRawInputData_setAnalogLeftThrust_mut(physx_PxVehicleDriveTankRawInputData_Pod* self__pod, float leftThrust);
		[LinkName("PxVehicleDriveTankRawInputData_setAnalogRightThrust_mut")] public static extern void VehicleDriveTankRawInputData_setAnalogRightThrust_mut(physx_PxVehicleDriveTankRawInputData_Pod* self__pod, float rightThrust);
		[LinkName("PxVehicleDriveTankRawInputData_setAnalogLeftBrake_mut")] public static extern void VehicleDriveTankRawInputData_setAnalogLeftBrake_mut(physx_PxVehicleDriveTankRawInputData_Pod* self__pod, float leftBrake);
		[LinkName("PxVehicleDriveTankRawInputData_setAnalogRightBrake_mut")] public static extern void VehicleDriveTankRawInputData_setAnalogRightBrake_mut(physx_PxVehicleDriveTankRawInputData_Pod* self__pod, float rightBrake);
		[LinkName("PxVehicleDriveTankRawInputData_getAnalogAccel")] public static extern float VehicleDriveTankRawInputData_getAnalogAccel(physx_PxVehicleDriveTankRawInputData_Pod* self__pod);
		[LinkName("PxVehicleDriveTankRawInputData_getAnalogLeftThrust")] public static extern float VehicleDriveTankRawInputData_getAnalogLeftThrust(physx_PxVehicleDriveTankRawInputData_Pod* self__pod);
		[LinkName("PxVehicleDriveTankRawInputData_getAnalogRightThrust")] public static extern float VehicleDriveTankRawInputData_getAnalogRightThrust(physx_PxVehicleDriveTankRawInputData_Pod* self__pod);
		[LinkName("PxVehicleDriveTankRawInputData_getAnalogLeftBrake")] public static extern float VehicleDriveTankRawInputData_getAnalogLeftBrake(physx_PxVehicleDriveTankRawInputData_Pod* self__pod);
		[LinkName("PxVehicleDriveTankRawInputData_getAnalogRightBrake")] public static extern float VehicleDriveTankRawInputData_getAnalogRightBrake(physx_PxVehicleDriveTankRawInputData_Pod* self__pod);
		[LinkName("PxVehicleDriveTankRawInputData_setGearUp_mut")] public static extern void VehicleDriveTankRawInputData_setGearUp_mut(physx_PxVehicleDriveTankRawInputData_Pod* self__pod, bool gearUp);
		[LinkName("PxVehicleDriveTankRawInputData_setGearDown_mut")] public static extern void VehicleDriveTankRawInputData_setGearDown_mut(physx_PxVehicleDriveTankRawInputData_Pod* self__pod, bool gearDown);
		[LinkName("PxVehicleDriveTankRawInputData_getGearUp")] public static extern bool VehicleDriveTankRawInputData_getGearUp(physx_PxVehicleDriveTankRawInputData_Pod* self__pod);
		[LinkName("PxVehicleDriveTankRawInputData_getGearDown")] public static extern bool VehicleDriveTankRawInputData_getGearDown(physx_PxVehicleDriveTankRawInputData_Pod* self__pod);
		[LinkName("phys_PxVehicleDriveTankSmoothDigitalRawInputsAndSetAnalogInputs")] public static extern void VehicleDriveTankSmoothDigitalRawInputsAndSetAnalogInputs(physx_PxVehicleKeySmoothingData_Pod* keySmoothing_pod, physx_PxVehicleDriveTankRawInputData_Pod* rawInputData_pod, float timestep, physx_PxVehicleDriveTank_Pod* focusVehicle_pod);
		[LinkName("phys_PxVehicleDriveTankSmoothAnalogRawInputsAndSetAnalogInputs")] public static extern void VehicleDriveTankSmoothAnalogRawInputsAndSetAnalogInputs(physx_PxVehiclePadSmoothingData_Pod* padSmoothing_pod, physx_PxVehicleDriveTankRawInputData_Pod* rawInputData_pod, float timestep, physx_PxVehicleDriveTank_Pod* focusVehicle_pod);
		[LinkName("phys_PxVehicle4WEnable3WTadpoleMode")] public static extern void Vehicle4WEnable3WTadpoleMode(physx_PxVehicleWheelsSimData_Pod* wheelsSimData_pod, physx_PxVehicleWheelsDynData_Pod* wheelsDynData_pod, physx_PxVehicleDriveSimData4W_Pod* driveSimData_pod);
		[LinkName("phys_PxVehicle4WEnable3WDeltaMode")] public static extern void Vehicle4WEnable3WDeltaMode(physx_PxVehicleWheelsSimData_Pod* wheelsSimData_pod, physx_PxVehicleWheelsDynData_Pod* wheelsDynData_pod, physx_PxVehicleDriveSimData4W_Pod* driveSimData_pod);
		[LinkName("phys_PxVehicleComputeSprungMasses")] public static extern void VehicleComputeSprungMasses(uint32 nbSprungMasses, physx_PxVec3_Pod* sprungMassCoordinates_pod, physx_PxVec3_Pod* centreOfMass_pod, float totalMass, uint32 gravityDirection, float* sprungMasses);
		[LinkName("phys_PxVehicleUpdateCMassLocalPose")] public static extern void VehicleUpdateCMassLocalPose(physx_PxTransform_Pod* oldCMassLocalPose_pod, physx_PxTransform_Pod* newCMassLocalPose_pod, uint32 gravityDirection, physx_PxVehicleWheels_Pod* vehicle_pod);
		[LinkName("PxVehicleCopyDynamicsMap_new")] public static extern physx_PxVehicleCopyDynamicsMap_Pod VehicleCopyDynamicsMap_new();
		[LinkName("phys_PxVehicleCopyDynamicsData")] public static extern void VehicleCopyDynamicsData(physx_PxVehicleCopyDynamicsMap_Pod* wheelMap_pod, physx_PxVehicleWheels_Pod* src_pod, physx_PxVehicleWheels_Pod* trg_pod);
		[LinkName("PxVehicleGraphChannelDesc_new")] public static extern physx_PxVehicleGraphChannelDesc_Pod VehicleGraphChannelDesc_new();
		[LinkName("PxVehicleGraph_setup_mut")] public static extern void VehicleGraph_setup_mut(physx_PxVehicleGraph_Pod* self__pod, physx_PxVehicleGraphDesc_Pod* desc_pod, uint32 graphType_pod);
		[LinkName("PxVehicleGraph_clearRecordedChannelData_mut")] public static extern void VehicleGraph_clearRecordedChannelData_mut(physx_PxVehicleGraph_Pod* self__pod);
		[LinkName("PxVehicleGraph_getBackgroundColor")] public static extern physx_PxVec3_Pod* VehicleGraph_getBackgroundColor(physx_PxVehicleGraph_Pod* self__pod);
		[LinkName("PxVehicleGraph_getBackgroundAlpha")] public static extern float VehicleGraph_getBackgroundAlpha(physx_PxVehicleGraph_Pod* self__pod);
		[LinkName("PxVehicleGraph_getBackgroundCoords")] public static extern void VehicleGraph_getBackgroundCoords(physx_PxVehicleGraph_Pod* self__pod, float* xMin_pod, float* yMin_pod, float* xMax_pod, float* yMax_pod);
		[LinkName("PxVehicleGraph_computeGraphChannel")] public static extern void VehicleGraph_computeGraphChannel(physx_PxVehicleGraph_Pod* self__pod, uint32 channel, float* xy, physx_PxVec3_Pod* colors_pod, char8* title);
		[LinkName("PxVehicleGraph_getLatestValue")] public static extern float VehicleGraph_getLatestValue(physx_PxVehicleGraph_Pod* self__pod, uint32 channel);
		[LinkName("PxVehicleTelemetryData_allocate_mut")] public static extern physx_PxVehicleTelemetryData_Pod* VehicleTelemetryData_allocate_mut(uint32 nbWheels);
		[LinkName("PxVehicleTelemetryData_free_mut")] public static extern void VehicleTelemetryData_free_mut(physx_PxVehicleTelemetryData_Pod* self__pod);
		[LinkName("PxVehicleTelemetryData_setup_mut")] public static extern void VehicleTelemetryData_setup_mut(physx_PxVehicleTelemetryData_Pod* self__pod, float graphSizeX, float graphSizeY, float engineGraphPosX, float engineGraphPosY, float* wheelGraphPosX, float* wheelGraphPosY, physx_PxVec3_Pod* backGroundColor_pod, physx_PxVec3_Pod* lineColorHigh_pod, physx_PxVec3_Pod* lineColorLow_pod);
		[LinkName("PxVehicleTelemetryData_clear_mut")] public static extern void VehicleTelemetryData_clear_mut(physx_PxVehicleTelemetryData_Pod* self__pod);
		[LinkName("PxVehicleTelemetryData_getEngineGraph")] public static extern physx_PxVehicleGraph_Pod* VehicleTelemetryData_getEngineGraph(physx_PxVehicleTelemetryData_Pod* self__pod);
		[LinkName("PxVehicleTelemetryData_getNbWheelGraphs")] public static extern uint32 VehicleTelemetryData_getNbWheelGraphs(physx_PxVehicleTelemetryData_Pod* self__pod);
		[LinkName("PxVehicleTelemetryData_getWheelGraph")] public static extern physx_PxVehicleGraph_Pod* VehicleTelemetryData_getWheelGraph(physx_PxVehicleTelemetryData_Pod* self__pod, uint32 k);
		[LinkName("PxVehicleTelemetryData_getTireforceAppPoints")] public static extern physx_PxVec3_Pod* VehicleTelemetryData_getTireforceAppPoints(physx_PxVehicleTelemetryData_Pod* self__pod);
		[LinkName("PxVehicleTelemetryData_getSuspforceAppPoints")] public static extern physx_PxVec3_Pod* VehicleTelemetryData_getSuspforceAppPoints(physx_PxVehicleTelemetryData_Pod* self__pod);
		[LinkName("PxVehicleNoDrive_allocate_mut")] public static extern physx_PxVehicleNoDrive_Pod* VehicleNoDrive_allocate_mut(uint32 nbWheels);
		[LinkName("PxVehicleNoDrive_free_mut")] public static extern void VehicleNoDrive_free_mut(physx_PxVehicleNoDrive_Pod* self__pod);
		[LinkName("PxVehicleNoDrive_setup_mut")] public static extern void VehicleNoDrive_setup_mut(physx_PxVehicleNoDrive_Pod* self__pod, physx_PxPhysics_Pod* physics_pod, physx_PxRigidDynamic_Pod* vehActor_pod, physx_PxVehicleWheelsSimData_Pod* wheelsData_pod);
		[LinkName("PxVehicleNoDrive_create_mut")] public static extern physx_PxVehicleNoDrive_Pod* VehicleNoDrive_create_mut(physx_PxPhysics_Pod* physics_pod, physx_PxRigidDynamic_Pod* vehActor_pod, physx_PxVehicleWheelsSimData_Pod* wheelsData_pod);
		[LinkName("PxVehicleNoDrive_setToRestState_mut")] public static extern void VehicleNoDrive_setToRestState_mut(physx_PxVehicleNoDrive_Pod* self__pod);
		[LinkName("PxVehicleNoDrive_setBrakeTorque_mut")] public static extern void VehicleNoDrive_setBrakeTorque_mut(physx_PxVehicleNoDrive_Pod* self__pod, uint32 id, float brakeTorque);
		[LinkName("PxVehicleNoDrive_setDriveTorque_mut")] public static extern void VehicleNoDrive_setDriveTorque_mut(physx_PxVehicleNoDrive_Pod* self__pod, uint32 id, float driveTorque);
		[LinkName("PxVehicleNoDrive_setSteerAngle_mut")] public static extern void VehicleNoDrive_setSteerAngle_mut(physx_PxVehicleNoDrive_Pod* self__pod, uint32 id, float steerAngle);
		[LinkName("PxVehicleNoDrive_getBrakeTorque")] public static extern float VehicleNoDrive_getBrakeTorque(physx_PxVehicleNoDrive_Pod* self__pod, uint32 id);
		[LinkName("PxVehicleNoDrive_getDriveTorque")] public static extern float VehicleNoDrive_getDriveTorque(physx_PxVehicleNoDrive_Pod* self__pod, uint32 id);
		[LinkName("PxVehicleNoDrive_getSteerAngle")] public static extern float VehicleNoDrive_getSteerAngle(physx_PxVehicleNoDrive_Pod* self__pod, uint32 id);
		[LinkName("PxVehicleNoDrive_new_alloc")] public static extern physx_PxVehicleNoDrive_Pod* VehicleNoDrive_new_alloc(physx_PxBaseFlags_Pod baseFlags_pod);
		[LinkName("PxVehicleNoDrive_exportExtraData_mut")] public static extern void VehicleNoDrive_exportExtraData_mut(physx_PxVehicleNoDrive_Pod* self__pod, physx_PxSerializationContext_Pod* anonymous_arg0_pod);
		[LinkName("PxVehicleNoDrive_importExtraData_mut")] public static extern void VehicleNoDrive_importExtraData_mut(physx_PxVehicleNoDrive_Pod* self__pod, physx_PxDeserializationContext_Pod* anonymous_arg0_pod);
		[LinkName("PxVehicleNoDrive_createObject_mut")] public static extern physx_PxVehicleNoDrive_Pod* VehicleNoDrive_createObject_mut(uint8** address_pod, physx_PxDeserializationContext_Pod* context_pod);
		[LinkName("PxVehicleNoDrive_getBinaryMetaData_mut")] public static extern void VehicleNoDrive_getBinaryMetaData_mut(physx_PxOutputStream_Pod* stream_pod);
		[LinkName("PxVehicleNoDrive_getConcreteTypeName")] public static extern char8* VehicleNoDrive_getConcreteTypeName(physx_PxVehicleNoDrive_Pod* self__pod);
		[LinkName("PxVehicleNoDrive_isKindOf")] public static extern bool VehicleNoDrive_isKindOf(physx_PxVehicleNoDrive_Pod* self__pod, char8* name);
		[LinkName("PxVehicleNoDrive_getNbSteerAngle")] public static extern uint32 VehicleNoDrive_getNbSteerAngle(physx_PxVehicleNoDrive_Pod* self__pod);
		[LinkName("PxVehicleNoDrive_getNbDriveTorque")] public static extern uint32 VehicleNoDrive_getNbDriveTorque(physx_PxVehicleNoDrive_Pod* self__pod);
		[LinkName("PxVehicleNoDrive_getNbBrakeTorque")] public static extern uint32 VehicleNoDrive_getNbBrakeTorque(physx_PxVehicleNoDrive_Pod* self__pod);
		[LinkName("PxProfilerCallback_zoneStart_mut")] public static extern void* ProfilerCallback_zoneStart_mut(physx_PxProfilerCallback_Pod* self__pod, char8* eventName, bool detached, uint64 contextId);
		[LinkName("PxProfilerCallback_zoneEnd_mut")] public static extern void ProfilerCallback_zoneEnd_mut(physx_PxProfilerCallback_Pod* self__pod, void* profilerData, char8* eventName, bool detached, uint64 contextId);
		[LinkName("PxProfileScoped_new_alloc")] public static extern physx_PxProfileScoped_Pod* ProfileScoped_new_alloc(physx_PxProfilerCallback_Pod* callback_pod, char8* eventName, bool detached, uint64 contextId);
		[LinkName("PxProfileScoped_delete")] public static extern void ProfileScoped_delete(physx_PxProfileScoped_Pod* self__pod);
		[LinkName("PxPvd_connect_mut")] public static extern bool Pvd_connect_mut(physx_PxPvd_Pod* self__pod, physx_PxPvdTransport_Pod* transport_pod, physx_PxPvdInstrumentationFlags_Pod flags_pod);
		[LinkName("PxPvd_disconnect_mut")] public static extern void Pvd_disconnect_mut(physx_PxPvd_Pod* self__pod);
		[LinkName("PxPvd_isConnected_mut")] public static extern bool Pvd_isConnected_mut(physx_PxPvd_Pod* self__pod, bool useCachedStatus);
		[LinkName("PxPvd_getTransport_mut")] public static extern physx_PxPvdTransport_Pod* Pvd_getTransport_mut(physx_PxPvd_Pod* self__pod);
		[LinkName("PxPvd_getInstrumentationFlags_mut")] public static extern physx_PxPvdInstrumentationFlags_Pod Pvd_getInstrumentationFlags_mut(physx_PxPvd_Pod* self__pod);
		[LinkName("PxPvd_release_mut")] public static extern void Pvd_release_mut(physx_PxPvd_Pod* self__pod);
		[LinkName("phys_PxCreatePvd")] public static extern physx_PxPvd_Pod* CreatePvd(physx_PxFoundation_Pod* foundation_pod);
		[LinkName("PxPvdTransport_connect_mut")] public static extern bool PvdTransport_connect_mut(physx_PxPvdTransport_Pod* self__pod);
		[LinkName("PxPvdTransport_disconnect_mut")] public static extern void PvdTransport_disconnect_mut(physx_PxPvdTransport_Pod* self__pod);
		[LinkName("PxPvdTransport_isConnected_mut")] public static extern bool PvdTransport_isConnected_mut(physx_PxPvdTransport_Pod* self__pod);
		[LinkName("PxPvdTransport_write_mut")] public static extern bool PvdTransport_write_mut(physx_PxPvdTransport_Pod* self__pod, uint8* inBytes, uint32 inLength);
		[LinkName("PxPvdTransport_lock_mut")] public static extern physx_PxPvdTransport_Pod* PvdTransport_lock_mut(physx_PxPvdTransport_Pod* self__pod);
		[LinkName("PxPvdTransport_unlock_mut")] public static extern void PvdTransport_unlock_mut(physx_PxPvdTransport_Pod* self__pod);
		[LinkName("PxPvdTransport_flush_mut")] public static extern void PvdTransport_flush_mut(physx_PxPvdTransport_Pod* self__pod);
		[LinkName("PxPvdTransport_getWrittenDataSize_mut")] public static extern uint64 PvdTransport_getWrittenDataSize_mut(physx_PxPvdTransport_Pod* self__pod);
		[LinkName("PxPvdTransport_release_mut")] public static extern void PvdTransport_release_mut(physx_PxPvdTransport_Pod* self__pod);
		[LinkName("phys_PxDefaultPvdSocketTransportCreate")] public static extern physx_PxPvdTransport_Pod* DefaultPvdSocketTransportCreate(char8* host, int32 port, uint32 timeoutInMilliseconds);
		[LinkName("phys_PxDefaultPvdFileTransportCreate")] public static extern physx_PxPvdTransport_Pod* DefaultPvdFileTransportCreate(char8* name);
	}
}

